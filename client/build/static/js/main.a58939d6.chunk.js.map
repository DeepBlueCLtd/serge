{"version":3,"sources":["ActionsAndReducers/ActionConstants.js","ActionsAndReducers/Modal/Modal_ActionCreators.js","Components/Modals/ModalWrapper.jsx","Helpers/copyStateHelper.js","Helpers/calcComplete.js","api/consts.js","api/messageTypes_api.js","ActionsAndReducers/playerUi/playerUi_ActionCreators.js","api/wargames_api.js","ActionsAndReducers/Notification/Notification_ActionCreators.js","ActionsAndReducers/dbWargames/wargames_ActionCreators.js","Components/Modals/AddForceModal.jsx","api/messages_api.js","ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_ActionCreators.js","ActionsAndReducers/dbMessages/messages_ActionCreators.js","ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators.js","ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators.js","Components/Modals/DeleteModal.jsx","Components/Modals/DeleteWargameModal.jsx","Components/Modals/ModalSwitch.jsx","Components/Snackbar.jsx","Components/Notifications.jsx","Components/Link.jsx","Views/ChooseInterface.jsx","Components/WargameSearchList.jsx","Views/GameDesignerInterface.jsx","Components/JsonCreator.jsx","Components/MessagePreview.jsx","Components/SearchList.jsx","Views/UmpireMenu.jsx","Components/JsonEditor.jsx","Views/EditMessage.jsx","Views/CreateMessage.jsx","Components/jsonSchemaEditor/json-schema-editor/editor.js","Components/jsonSchemaEditor/jsonEditor.js","Components/jsonSchemaEditor/editorPreview.js","Components/jsonSchemaEditor/index.js","Views/EditTemplate.jsx","Views/CreateTemplate.jsx","Components/Inputs/TextInput.jsx","Components/Inputs/DropdownInput.jsx","Components/Layout/Row.jsx","Components/Inputs/TextArea.jsx","Views/TabViews/SettingsTab.jsx","Components/TabsSearchList.jsx","Components/Layout/RemovableGroupItem.jsx","Helpers/checkUnique.js","Views/TabViews/ForcesTab.jsx","Components/Layout/EditSubscriptionRow.jsx","Components/Layout/ChannelsTable.jsx","Views/TabViews/ChannelsTab.jsx","Views/TabbedView.jsx","Components/ProgressBar/ProgressBar.jsx","Views/GameSetup.jsx","Components/MessagePreviewPlayerUi.jsx","Views/MessagesList.jsx","Components/MessageCreator.jsx","Components/NewMessage.jsx","Views/MessageFeeds.jsx","Views/PlayerUi.jsx","Components/Router.jsx","ActionsAndReducers/copyStateHelper.js","ActionsAndReducers/dbMessageTypes/messageTypes_Reducer.js","ActionsAndReducers/dbMessages/messages_Reducer.js","ActionsAndReducers/UmpireMenu/umpireMenu_Reducer.js","ActionsAndReducers/dbWargames/wargames_Reducer.js","ActionsAndReducers/Notification/Notification_Reducer.js","ActionsAndReducers/playerUi/playerUi_Reducer.js","ActionsAndReducers/loadingDb_Reducer.js","Store/Store.jsx","ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_Reducer.js","ActionsAndReducers/Modal/Modal_Reducer.js","App.jsx","index.jsx"],"names":["Object","freeze","ASYNC_SUCCESS","ASYNC_ERROR","ASYNC_LOADING","NORMAL_ACTION","DB_MESSAGE_STATUS","DB_MESSAGE_CREATION_LOADING","DB_MESSAGE_GET_LOADING","DB_SAVE_MESSAGES","DB_MESSAGE_TYPES_GET","DB_MESSAGE_TYPES_SAVED","SET_CURRENT_VIEW_FROM_URI","DB_MESSAGE_SAVED","DB_MESSAGES_GET","DB_RETURNED_MESSAGE","RESET_MESSAGE_PREVIEW","SET_SELECTED_SCHEMA","SET_PREVIEW_SCHEMA","OPEN_MODAL","CLOSE_MODAL","SET_CURRENT_GAME_SETUP_TAB","SET_GAME_SETUP_DATA","ALL_WARGAME_NAMES_SAVED","SET_CURRENT_WARGAME","ADD_NEW_FORCE","SET_SELECTED_FORCE","ADD_NEW_CHANNEL","SET_SELECTED_CHANNEL","DELETE_SELECTED_CHANNEL","SET_WARGAME_NAME","SET_FORCE_OVERVIEW","GAME_TITLE_INVALID","ADD_NEW_RECIPIENT","ADD_NOTIFICATION","HIDE_NOTIFICATION","UPDATE_RECIPIENT","REMOVE_RECIPIENT","SET_CURRENT_WARGAME_PLAYER","SET_FORCE","SET_ROLE","SET_FILTERED_CHANNELS","SET_CHANNEL","SET_MESSAGE_SCHEMA","SET_LATEST_MESSAGES","POPULATE_MESSAGE_TYPES_DB","POPULATE_WARGAMES_DB","SET_UNSAVED_STATE","UPDATE_CHANNEL_NAME","modalAction","open","openModal","data","type","ActionConstant","payload","modal","close","ModalWrapper","handleBackgroundClick","e","target","currentTarget","_this","props","dispatch","setSize","this","editable","react_default","a","createElement","className","onClick","children","Component","connect","deepCopy","objectpassed","temporaryStorage","constructor","key","calcComplete","omittedData","_","omit","flatMapDeep","flatten","n","isEmpty","isArray","isObject","every","item","length","databasePath","forceTemplate","forceName","overview","roles","channelTemplate","channelName","participants","dbDefaultSettings","_id","wargameTitle","name","gameDescription","spatialRepresentation","planningInterval","replayInterval","turnStrategy","complete","forces","selectedForce","channels","selectedChannel","db","PouchDB","postNewMessage","schema","Promise","resolve","reject","asyncToGenerator","regenerator_default","mark","_callee","allMessages","time","schemaObj","wrap","_context","prev","next","getAllMessagesFromDb","sent","find","messageType","title","toLowerCase","abrupt","Date","toISOString","lastUpdated","details","completed","put","then","result","catch","err","console","log","stop","duplicateMessageInDb","id","get","doc","concat","uniqid","updateMessageInDb","_callee2","_context2","_rev","deleteMessageFromDb","remove","changes","since","include_docs","descending","results","map","filter","hasOwnProperty","setForce","setRole","setFilteredChannels","setChannel","setMessageSchema","setWargameMessages","messages","getWargame","gamePath","_ref","wargame","wargamesApi","_x","apply","arguments","saveMessage","dbName","message","_ref2","_x2","getMessageTemplate","_ref3","_callee3","template","_context3","messageTemplatesApi","_x3","getAllWargameMessages","_ref4","_callee4","_context4","_x4","wargameDbStore","populateWargame","fetch","serverPath","response","json","dbs","wargameNames","toCreate","difference","pull","forEach","setMaxListeners","changesListener","live","timeout","heartbeat","on","getAllMessages","unshift","promises","game","res","all","deleteWargame","wargamePath","getNameFromPath","destroy","index","findIndex","splice","createWargame","uniqId","settings","objectSpread","editWargame","dbPath","updateWargameTitle","getAllWargames","games","some","saveSettings","getWargameLocalFromName","localDoc","newDoc","saveForce","newName","newData","oldName","updatedData","force","push","forceIndex","saveChannel","channel","channelIndex","deleteChannel","deleteForce","duplicateWargame","newDb","newDbName","allDocs","rows","path","URL","pathname","lastIndexOf","substring","addNotification","hideNotification","hide","setCurrentTab","tab","setGameData","setSelectedForce","addNewChannel","addNewForce","setSelectedChannel","setForceOverview","saveAllWargameNames","names","setCurrentWargame","addRecipientToChannel","updateRecipient","populatingDb","isLoading","createNewWargameDB","wargames","clearWargames","window","location","reload","saveWargameTitle","_ref6","_callee6","_context6","_x6","_ref7","_callee7","_context7","_x7","wargameName","_ref8","_callee8","_context8","_x8","_ref9","_callee9","_context9","_x9","deleteSelectedChannel","_ref10","_callee10","_context10","_x10","deleteSelectedForce","_ref11","_callee11","_context11","_x11","AddForceModal","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hideModal","setState","setNewForceName","value","sameName","currentTab","addForce","state","currentModal","disable","Modals_ModalWrapper","autoFocus","onChange","disabled","addMessage","messageDetail","el","updatedMessage","getMessage","setCurrentViewFromURI","DBMessageSaveStatus","status","DBSaveMessageArray","DBSaveMessagePreview","loadingDBMessageCreate","loadingDBMessageGet","resetMessagePreview","createMessage","check","object","Error","messagesApi","ok","t0","alert","duplicateMessage","messageId","string","updateMessage","responses","_message","toConsumableArray","deleteMessage","_ref5","getSingleMessage","_callee5","_context5","_x5","createMessageType","messageTypesApi","duplicateMessageType","updateMessageType","deleteMessageType","getAllMessageTypes","setSelectedSchema","schemaId","setPreviewSchema","DeleteModal","currentViewURI","umpireMenu","selectedSchemaID","messagePreviewId","DeleteWargameModal","ModalSwitch","Modals_AddForceModal","Modals_DeleteModal","Modals_DeleteWargameModal","Fragment","Snackbar","onClickHandler","_this2","timer","setTimeout","clearTimeout","classes","react_fontawesome_index_es","icon","faTimes","Notifications","notifications","Components_Snackbar","Link","aNewTab","metaKey","ctrlKey","anExternalLink","href","startsWith","preventDefault","class","UmpireMenu","entries","machine","machineryFailure","weather","weatherForecast","activeGames","wargameList","keys","dbLoading","k","Components_Link","classNames","link--disabled","WargameSearchList","filterMessages","input","searchInput","searchQuery","listData","indexOf","displayControls","activeTitle","hideControls","messageList","nextProps","nextState","nextContext","sameMessagesQuantity","_ref12","_callee12","_context12","_x12","that","list","placeholder","onMouseOver","bind","onMouseLeave","faPencilAlt","setSelectedWargame","faClone","faTrash","GameDesignerInterface","faArrowLeft","size","Components_WargameSearchList","JsonCreator","messageTypes","mes","editor","getValue","editorPreviewRef","React","createRef","selectedSchema","JSONEditor","current","theme","setValue","faSave","ref","MessagePreview","pair","deconstructObj","moment","format","withoutName","obj","i","createObjItem","array","of","deconstructArr","boolean","createBoolItem","ISO_8601","isValid","createTimeItem","createStrItem","detail","from","SearchList","setSelected","active","selected","date","searchlist-title","setSelectedSchemaId","creatorType","newState","duplicateTemplate","deleteTemplate","split","buildMessageBoard","faPlus","Components_SearchList","createSearchListSection","Components_JsonCreator","previewForm","Components_MessagePreview","messagePreview","createTemplatesActions","createMessagesActions","EditMessage","messageToEdit","JsonEditor","Editor","elementId","jsonEditor","renderZone","document","getElementById","PreviewEditor","SchemaEditor","isObjectPropertiesButton","node","matches","span","parentElement","querySelector","innerText","observer","MutationObserver","mutationsList","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","addedNodes","nodeType","classList","add","return","observe","childList","subtree","prototype","updateSchema","validate","getJSON","create","defineProperty","enumerable","writable","no_additional_properties","custom_validators","errors","minimum","maximum","property","button","root","getButton","button_holder","getHeaderButtonHolder","appendChild","header","parentNode","insertBefore","nextSibling","addEventListener","contents","blob","Blob","JSON","stringify","navigator","msSaveOrOpenBlob","download","createObjectURL","dataset","downloadurl","join","dispatchEvent","MouseEvent","view","bubbles","cancelable","JsonSchemaEditor","content","schemaEditor","editorBox","assertThisInitialized","updateEditor","saved","defaultValue","newValue","options","newJson","save","counter","defaults","object_layout","layout","booleanOptions","Card","CardHeader","CardBody","CardFooter","EditorPreview","previewBox","editorPreview","iconlib","updateMetaSchema","updatePreviewSchema","updateOptions","properties","Status","enum","Description","metaSchema","jsonMetaSchema","previewSchema","metaschema","jsonSchemaEditor","saveSchema","TextInput","updateStore","numInput","invalid","validInput","DropdownInput","selectOptions","option","Row","TextArea","style","resize","SettingsTab","updateDescription","updateSpatialRepresentation","updatePlanningInterval","updateReplayInterval","updateTurnStrategy","curTab","currentWargame","Inputs_TextArea","Layout_Row","Inputs_DropdownInput","Inputs_TextInput","TabsSearchList","list-title","RemovableGroupItem","checkUnique","ForcesTab","createForce","newForceName","updateOverview","newForceData","f","updateForceName","forcesList","curSelected","nextSelected","curPropsState","nextPropsState","forceNames","validation","validForceName","role","Layout_RemovableGroupItem","Components_TabsSearchList","createForceEditor","EditSubscriptionRow","updateSubscriptionForce","editSubscriptionForce","updateSubscriptionRole","editSubscriptionRole","updateSubscriptionTemplates","editSubscriptionTemplates","updateChannel","subscriptionData","label","templates","subscriptionId","cancelEdit","react_select_esm","forceOptions","roleOptions","templateOptions","isMulti","ChannelsTable","subscriptionToEdit","setSelectedRole","selectedRole","setSelectedTemplate","selectedTemplates","addToChannel","channelData","clearChannelData","row","prop","j","removeSubscription","editSubscription","rowComplete","Layout_EditSubscriptionRow","createRow","isDisabled","faUndoAlt","faCheck","btn--disabled","createChannel","filterChannels","channelList","updateChannelName","newChannelName","newChannelData","c","channelNames","validChannelName","Layout_ChannelsTable","createChannelEditor","TabbedView","changeTab","activeTab","tabs","invalidFields","tabName","active-tab","TabViews_SettingsTab","TabViews_ForcesTab","ChannelsTab","withStyles","flexGrow","backgroundColor","palette","background","paper","ProgressBar","GameSetup","newWargameName","saveWargame","checkWargameNameSaveable","checkAllValid","values","entry","parseInt","progress-indicator--active","progress-indicator--complete","validWargameName","Components_ProgressBar_ProgressBar","createIndicators","Views_TabbedView","MessagePreviewPlayerUi_Fragment","MessagesList","openSection","closeSection","newMessage","curChannel","Collapsible_default","trigger","Badge_default","pill","variant","transitionTime","easing","onOpening","onClosing","MessagePreviewPlayerUi","sendMessage","messageDetails","playerUi","messageSchema","disable_collapse","disable_edit_json","disable_properties","NewMessage","setTemplate","val","dropdownValue","MessageCreator","TabContainer","Typography","component","display","flexDirection","height","MessageFeeds","handleChange","event","createTabs","Tab","createMessageList","MessageFeeds_TabContainer","Views_MessagesList","Components_NewMessage","AppBar","position","color","Tabs","indicatorColor","textColor","centered","PlayerUi","updateSelectedWargame","updateSelectedForce","updateSelectedRole","goBack","allForces","cursor","Views_MessageFeeds","Router","routes","action","ChooseInterface","Views_GameDesignerInterface","Views_UmpireMenu","CreateTemplate","EditTemplate","CreateMessage","Views_EditMessage","Views_GameSetup","Views_PlayerUi","currentView","router","UniversalRouter","initialState","loadingDb","allChannels","loadingMessageTypes","loadingWargames","middlewares","thunk","createStore","combineReducers","copyState","history","pushState","participantIndex","listWithoutThis","uniqueName","newForce","newChannel","newParticipant","participant","p","channelActive","uniqWith","isEqual","flatMap","applyMiddleware","App","es","store","Store","Components_Router","Modals_ModalSwitch","Components_Notifications","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.a58939d6.chunk.js","sourcesContent":["export default Object.freeze({\r\n  ASYNC_SUCCESS: 'ASYNC_SUCCESS',\r\n  ASYNC_ERROR: 'ASYNC_ERROR',\r\n  ASYNC_LOADING: 'ASYNC_LOADING',\r\n  NORMAL_ACTION: 'NORMAL_ACTION',\r\n  DB_MESSAGE_STATUS: 'DB_MESSAGE_STATUS',\r\n  DB_MESSAGE_CREATION_LOADING:  'DB_MESSAGE_CREATION_LOADING',\r\n  DB_MESSAGE_GET_LOADING: 'DB_MESSAGE_GET_LOADING',\r\n  DB_SAVE_MESSAGES: 'DB_SAVE_MESSAGES',\r\n  DB_MESSAGE_TYPES_GET: 'DB_MESSAGE_TYPES_GET',\r\n  DB_MESSAGE_TYPES_SAVED: 'DB_MESSAGE_TYPES_SAVED',\r\n  SET_CURRENT_VIEW_FROM_URI: 'SET_CURRENT_VIEW_FROM_URI',\r\n  DB_MESSAGE_SAVED: 'DB_MESSAGE_SAVED',\r\n  DB_MESSAGES_GET: 'DB_MESSAGES_GET',\r\n  DB_RETURNED_MESSAGE: 'DB_RETURNED_MESSAGE',\r\n  RESET_MESSAGE_PREVIEW: 'RESET_MESSAGE_PREVIEW',\r\n  SET_SELECTED_SCHEMA: 'SET_SELECTED_SCHEMA',\r\n  SET_PREVIEW_SCHEMA: 'SET_PREVIEW_SCHEMA',\r\n  OPEN_MODAL: 'OPEN_MODAL',\r\n  CLOSE_MODAL: 'CLOSE_MODAL',\r\n  SET_CURRENT_GAME_SETUP_TAB: 'SET_CURRENT_GAME_SETUP_TAB',\r\n  SET_GAME_SETUP_DATA: 'SET_GAME_SETUP_DATA',\r\n  ALL_WARGAME_NAMES_SAVED: 'ALL_WARGAME_NAMES_SAVED',\r\n  SET_CURRENT_WARGAME: 'SET_CURRENT_WARGAME',\r\n  ADD_NEW_FORCE: 'ADD_NEW_FORCE',\r\n  SET_SELECTED_FORCE: 'SET_SELECTED_FORCE',\r\n  ADD_NEW_CHANNEL: 'ADD_NEW_CHANNEL',\r\n  SET_SELECTED_CHANNEL: 'SET_SELECTED_CHANNEL',\r\n  DELETE_SELECTED_CHANNEL: 'DELETE_SELECTED_CHANNEL',\r\n  SET_WARGAME_NAME: 'SET_WARGAME_NAME',\r\n  SET_FORCE_OVERVIEW: 'SET_FORCE_OVERVIEW',\r\n  GAME_TITLE_INVALID: 'GAME_TITLE_INVALID',\r\n  ADD_NEW_RECIPIENT: 'ADD_NEW_RECIPIENT',\r\n  ADD_NOTIFICATION: 'ADD_NOTIFICATION',\r\n  HIDE_NOTIFICATION: 'HIDE_NOTIFICATION',\r\n  UPDATE_RECIPIENT: 'UPDATE_RECIPIENT',\r\n  REMOVE_RECIPIENT: 'REMOVE_RECIPIENT',\r\n  SET_CURRENT_WARGAME_PLAYER: 'SET_CURRENT_WARGAME_PLAYER',\r\n  SET_FORCE: 'SET_FORCE',\r\n  SET_ROLE: 'SET_ROLE',\r\n  SET_FILTERED_CHANNELS: 'SET_FILTERED_CHANNELS',\r\n  SET_CHANNEL: 'SET_CHANNEL',\r\n  SET_MESSAGE_SCHEMA: 'SET_MESSAGE_SCHEMA',\r\n  SET_LATEST_MESSAGES: 'SET_LATEST_MESSAGES',\r\n  POPULATE_MESSAGE_TYPES_DB: 'POPULATE_MESSAGE_TYPES_DB',\r\n  POPULATE_WARGAMES_DB: 'POPULATE_WARGAMES_DB',\r\n  SET_UNSAVED_STATE: 'SET_UNSAVED_STATE',\r\n  UPDATE_CHANNEL_NAME: 'UPDATE_CHANNEL_NAME',\r\n});\r\n","import ActionConstant from '../ActionConstants.js';\r\n\r\nexport const modalAction = {\r\n  open: (openModal, data) => ({\r\n    type: ActionConstant.OPEN_MODAL,\r\n    payload: {\r\n      open: true,\r\n      modal: openModal,\r\n      data: data || null\r\n    },\r\n  }),\r\n\r\n  close: () => ({\r\n    type: ActionConstant.CLOSE_MODAL,\r\n    payload: {\r\n      open: false,\r\n      modal: '',\r\n    },\r\n  })\r\n};\r\n","import React, {Component}  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\n\r\nclass ModalWrapper extends Component {\r\n\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  handleBackgroundClick = (e) => {\r\n    if (e.target === e.currentTarget) this.props.dispatch(modalAction.close());\r\n  };\r\n\r\n  render() {\r\n    const setSize = this.props.editable ? \"modal setsize\": 'modal';\r\n\r\n    return (\r\n      <div className=\"modal-bg\" onClick={this.handleBackgroundClick}>\r\n        <div className={setSize}>\r\n          {this.props.children}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default connect()(ModalWrapper);","export default function deepCopy(objectpassed) {\r\n\r\n  // arrays return \"object\" in js so any object or array will be looped to copy deeply.\r\n  // strings, numbers and booleans are deep copied naturally, while any objects within arrays or objects\r\n  // or objects within arrays are only copied shallowly.\r\n  if (objectpassed === null || typeof objectpassed !== 'object') {\r\n    return objectpassed;\r\n  }\r\n\r\n  var temporaryStorage = objectpassed.constructor();\r\n\r\n  for (var key in objectpassed) {\r\n    temporaryStorage[key] = deepCopy((objectpassed[key]));\r\n  }\r\n  return temporaryStorage;\r\n}","import _ from \"lodash\";\r\n\r\nexport default function calcComplete(data) {\r\n  // pagination completion bar at top of gameDesigner page\r\n  let flatten = (n) => {\r\n    if (_.isEmpty(n)) return null; // force show empty array\r\n    return (_.isArray(n) || _.isObject(n)) ? _.flatMapDeep(n, flatten) : n;\r\n  };\r\n\r\n  let omittedData = _.omit(data, ['complete', 'selectedForce', 'selectedChannel']);\r\n\r\n  let inputResults = _.flatMapDeep(omittedData, flatten);\r\n\r\n  return inputResults.every((item) => item !== null && item.length > 0);\r\n}\r\n","// export const serverPath = 'https://serge-dev.herokuapp.com/';\r\n// export const databasePath = 'https://serge-dev.herokuapp.com/db/';\r\nexport const serverPath = 'http://localhost:8080/';\r\nexport const databasePath = 'http://localhost:8080/db/';\r\n\r\nexport const MSG_STORE = \"messages\";\r\nexport const MSG_TYPE_STORE = \"message_types\";\r\n\r\nexport const headers = {\r\n  'Content-Type': 'application/json',\r\n  'Access-Control-Allow-Origin': '*',\r\n  'Access-Control-Allow-Methods': 'POST',\r\n  'Access-Control-Allow-Headers': 'Authorization, Lang'\r\n};\r\n\r\nexport const forceTemplate = {\r\n  forceName: '',\r\n  overview: 'An overview written here..',\r\n  roles: ['General']\r\n};\r\n\r\n// export const channelTemplate = [];\r\n\r\nexport const channelTemplate = {\r\n  channelName: '',\r\n  participants: [],\r\n};\r\n\r\n// export const overviewTab = 0;\r\n// export const forcesTab = 1;\r\n// export const channelsTab = 2;\r\n\r\n// export const dbDefaultSettings = {\r\n//   _id: '_local/settings',\r\n//   wargameTitle: 'wargame',\r\n//   tabs: {\r\n//     [overviewTab]: {\r\n//       name: \"Overview - settings\",\r\n//       data: {\r\n//         gameDescription: '',\r\n//         spatialRepresentation: '',\r\n//         planningInterval: null,\r\n//         replayInterval: null,\r\n//         turnStrategy: '',\r\n//       }\r\n//     },\r\n//     [forcesTab]: {\r\n//       name: \"Forces\",\r\n//       data: {\r\n//         forces: {},\r\n//         roles: ['General'],\r\n//         selectedForce: '',\r\n//       },\r\n//     },\r\n//     [channelsTab]: {\r\n//       name: \"Channels\",\r\n//       data: {\r\n//         channels: {},\r\n//         selectedChannel: '',\r\n//       },\r\n//     }\r\n//   }\r\n// };\r\n\r\nexport const dbDefaultSettings = {\r\n  _id: '_local/settings',\r\n  wargameTitle: '',\r\n  data: {\r\n    overview: {\r\n      name: \"Overview - settings\",\r\n      gameDescription: '',\r\n      spatialRepresentation: '',\r\n      planningInterval: null,\r\n      replayInterval: null,\r\n      turnStrategy: '',\r\n      complete: false,\r\n    },\r\n    forces: {\r\n      name: \"Forces\",\r\n      forces: [],\r\n      roles: ['General'],\r\n      selectedForce: '',\r\n      complete: false,\r\n    },\r\n    channels: {\r\n      name: \"Channels\",\r\n      channels: [],\r\n      selectedChannel: '',\r\n      complete: false,\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// export const channelTemplate = [{\r\n//   force: 'white',\r\n//   role: 'General',\r\n//   template: {\r\n//     name: '',\r\n//     id: '',\r\n//   },\r\n//   // subscriptionId: uniqid.time(),\r\n// }];\r\n","import uniqid from \"uniqid\";\r\n\r\nimport PouchDB from \"pouchdb\";\r\nimport { databasePath,\r\n         MSG_TYPE_STORE } from \"./consts\";\r\n\r\nimport machineryFailure from '../Schemas/machinery_failure.json';\r\nimport weatherForecast from '../Schemas/weather_forecase.json';\r\n\r\nvar db = new PouchDB(databasePath+MSG_TYPE_STORE);\r\n\r\n\r\nexport const populateDb = () => {\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    db.allDocs().then(entries => {\r\n      if (entries.rows.length === 0) {\r\n        var machine = {\r\n          _id: new Date().toISOString(),\r\n          lastUpdated: new Date().toISOString(),\r\n          title: 'machinery failure',\r\n          details: machineryFailure,\r\n          completed: false\r\n        };\r\n        db.put(machine);\r\n\r\n        setTimeout(function () {\r\n          var weather = {\r\n            _id: new Date().toISOString(),\r\n            lastUpdated: new Date().toISOString(),\r\n            title: 'weather forecast',\r\n            details: weatherForecast,\r\n            completed: false\r\n          };\r\n          db.put(weather).then(() => {\r\n            resolve(true);\r\n          });\r\n        }, 2000);\r\n      } else {\r\n        resolve(true);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n\r\n\r\n\r\nexport const postNewMessage = (schema) => {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    (async() => {\r\n\r\n      const allMessages = await getAllMessagesFromDb();\r\n\r\n      const matchedName = allMessages.find((messageType) => messageType.title.toLowerCase() === schema.title.toLowerCase());\r\n\r\n      if (matchedName) {\r\n        reject(\"Message title already used\");\r\n        return;\r\n      }\r\n\r\n      let time = new Date().toISOString();\r\n\r\n      var schemaObj = {\r\n        _id: time,\r\n        lastUpdated: time,\r\n        title: schema.title,\r\n        details: schema,\r\n        completed: false\r\n      };\r\n\r\n      return db.put(schemaObj)\r\n        .then(function (result) {\r\n          resolve(result);\r\n        })\r\n        .catch(function (err) {\r\n          console.log(err);\r\n          reject(false);\r\n        });\r\n\r\n    })();\r\n  });\r\n};\r\n\r\nexport const duplicateMessageInDb = (id) => {\r\n\r\n  let time = new Date().toISOString();\r\n\r\n  return new Promise((resolve, reject) => {\r\n    db.get(id)\r\n      .then(function (doc) {\r\n\r\n        // var updatedMessage = doc.details;\r\n\r\n        doc.details.title = `${doc.details.title} Copy-${uniqid.time()}`;\r\n\r\n        return db.put({\r\n          _id: time,\r\n          lastUpdated: time,\r\n          title: doc.details.title,\r\n          details: doc.details,\r\n        });\r\n      })\r\n      .then(function () {\r\n        resolve(true);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        reject(false);\r\n      })\r\n  });\r\n};\r\n\r\nexport const updateMessageInDb = (schema, id) => {\r\n  return new Promise((resolve, reject) => {\r\n    (async() => {\r\n\r\n      const allMessages = await getAllMessagesFromDb();\r\n\r\n      const matchedName = allMessages.find((messageType) => messageType.title.toLowerCase() === schema.title.toLowerCase());\r\n\r\n      if (matchedName) {\r\n        reject(\"Message title already used\");\r\n        return;\r\n      }\r\n\r\n      db.get(id)\r\n        .then(function (doc) {\r\n          return db.put({\r\n            _id: doc._id,\r\n            lastUpdated: new Date().toISOString(),\r\n            _rev: doc._rev,\r\n            title: schema.title,\r\n            details: schema\r\n          });\r\n        })\r\n        .then(function (result) {\r\n          resolve(result);\r\n        })\r\n        .catch(function (err) {\r\n          console.log(err);\r\n          reject(false);\r\n        })\r\n\r\n    })();\r\n  });\r\n};\r\n\r\nexport const deleteMessageFromDb = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    db.get(id)\r\n      .then(function (doc) {\r\n        return db.remove(doc);\r\n      })\r\n      .then(function (result) {\r\n        resolve(result);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        reject(false);\r\n      })\r\n  });\r\n};\r\n\r\nexport const getAllMessagesFromDb = () => {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    return db.changes({\r\n      since: 1,\r\n      include_docs: true,\r\n      descending: true,\r\n    })\r\n      .then(function (changes) {\r\n\r\n        let results = changes.results.map((a) => a.doc);\r\n        results = results.filter((a) => !a.hasOwnProperty('_deleted') && a.hasOwnProperty('details'));\r\n\r\n        resolve(results);\r\n      })\r\n      .catch(function (err) {\r\n        // handle errors\r\n        reject(err);\r\n        console.log(err);\r\n      });\r\n  });\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\nimport * as wargamesApi from \"../../api/wargames_api\";\r\nimport * as messageTemplatesApi from \"../../api/messageTypes_api\";\r\n\r\nconst setCurrentWargame = (data) => ({\r\n  type: ActionConstant.SET_CURRENT_WARGAME_PLAYER,\r\n  payload: data\r\n});\r\n\r\nexport const setForce = (data) => ({\r\n  type: ActionConstant.SET_FORCE,\r\n  payload: data\r\n});\r\n\r\nexport const setRole = (data) => ({\r\n  type: ActionConstant.SET_ROLE,\r\n  payload: data\r\n});\r\n\r\nexport const setFilteredChannels = () => ({\r\n  type: ActionConstant.SET_FILTERED_CHANNELS,\r\n});\r\n\r\nexport const setChannel = (data) => ({\r\n  type: ActionConstant.SET_CHANNEL,\r\n  payload: data,\r\n});\r\n\r\nexport const setMessageSchema = (schema) => ({\r\n  type: ActionConstant.SET_MESSAGE_SCHEMA,\r\n  payload: schema,\r\n});\r\n\r\nexport const setWargameMessages = (messages) => ({\r\n  type: ActionConstant.SET_LATEST_MESSAGES,\r\n  payload: messages,\r\n});\r\n\r\nexport const getWargame = (gamePath) => {\r\n  return async (dispatch) => {\r\n\r\n    // await wargamesApi.populateWargame();\r\n\r\n    // will get active wargame during later stages\r\n    let wargame = await wargamesApi.getWargame(gamePath);\r\n\r\n    console.log(wargame);\r\n\r\n    dispatch(setCurrentWargame(wargame));\r\n  }\r\n};\r\n\r\nexport const saveMessage = (dbName, details, message) => {\r\n  return async (dispatch) => {\r\n\r\n    await wargamesApi.postNewMessage(dbName, details, message);\r\n\r\n    let messages = await wargamesApi.getAllMessages(dbName);\r\n\r\n    dispatch(setWargameMessages(messages));\r\n  }\r\n};\r\n\r\nexport const getMessageTemplate = (id) => {\r\n  return async (dispatch) => {\r\n    let messages = await messageTemplatesApi.getAllMessagesFromDb();\r\n\r\n    var template = messages.find((message) => message._id === id);\r\n\r\n    dispatch(setMessageSchema(template.details));\r\n  }\r\n};\r\n\r\nexport const getAllWargameMessages = (name) => {\r\n  return async (dispatch) => {\r\n\r\n    var messages = await wargamesApi.getAllMessages(name);\r\n\r\n    dispatch(setWargameMessages(messages));\r\n  }\r\n};\r\n","import uniqid from \"uniqid\";\r\nimport _ from \"lodash\";\r\nimport {fetch} from \"whatwg-fetch\";\r\n\r\nimport deepCopy from \"../Helpers/copyStateHelper\";\r\n\r\nimport calcComplete from \"../Helpers/calcComplete\";\r\n\r\nimport PouchDB from \"pouchdb\";\r\nimport {  databasePath,\r\n  serverPath,\r\n  dbDefaultSettings,\r\n  MSG_STORE,\r\n  MSG_TYPE_STORE\r\n} from \"./consts\";\r\n\r\nimport {setWargameMessages} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\n\r\nvar wargameDbStore = [];\r\n\r\n\r\nconst changesListener = (db, name, dispatch) => {\r\n  db.changes({since: 'now', live: true, timeout: false, heartbeat: false})\r\n    .on('change', function () {\r\n      (async () => {\r\n        let messages = await getAllMessages(name);\r\n        dispatch(setWargameMessages(messages));\r\n      })();\r\n    })\r\n    .on('error', function (err) {\r\n      console.log(err);\r\n      changesListener(db, name, dispatch);\r\n    });\r\n};\r\n\r\nexport const populateWargame = (dispatch) => {\r\n  return fetch(serverPath+'allDbs')\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((dbs) => {\r\n      let wargameNames = wargameDbStore.map((db) => db.name);\r\n      let toCreate = _.difference(dbs, wargameNames);\r\n      toCreate = _.pull(toCreate, MSG_STORE, MSG_TYPE_STORE, \"_replicator\", \"_users\");\r\n\r\n      toCreate.forEach((name) => {\r\n        var db = new PouchDB(databasePath+name);\r\n        db.setMaxListeners(15);\r\n\r\n        changesListener(db, name, dispatch);\r\n\r\n        wargameDbStore.unshift({name, db});\r\n      });\r\n\r\n      let promises = wargameDbStore.map((game) => {\r\n        return game.db.get(dbDefaultSettings._id)\r\n          .then(function (res) {\r\n            return {\r\n              name: game.db.name,\r\n              title: res.wargameTitle\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      });\r\n      return Promise.all(promises);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const clearWargames = () => {\r\n  fetch(serverPath+'clearAll')\r\n    .then(() => {\r\n      window.location.reload(true);\r\n    });\r\n};\r\n\r\nexport const deleteWargame = (wargamePath) => {\r\n\r\n  let name = getNameFromPath(wargamePath);\r\n\r\n  let wargame = wargameDbStore.find((item) => item.name === name);\r\n  wargame.db.destroy();\r\n  let index = wargameDbStore.findIndex((item) => item.name === name);\r\n  wargameDbStore.splice(index, 1);\r\n};\r\n\r\nexport const createWargame = () => {\r\n  let uniqId = uniqid.time();\r\n\r\n  var name = `wargame-${uniqId}`;\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    let db = new PouchDB(databasePath+name);\r\n\r\n    wargameDbStore.unshift({name, db});\r\n\r\n    let settings = {...dbDefaultSettings, name: name};\r\n\r\n    settings.wargameTitle = name;\r\n\r\n    db.put(settings)\r\n      .then(() => {\r\n        return db.get(settings._id);\r\n      })\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n        console.log(err);\r\n      })\r\n  });\r\n};\r\n\r\nexport const editWargame = (dbPath) => {\r\n\r\n  let dbName = getNameFromPath(dbPath);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      var db = wargameDbStore.find((db) => db.name === dbName).db;\r\n      db.get(dbDefaultSettings._id)\r\n        .then((res) => {\r\n          resolve(res);\r\n        });\r\n    } catch (err) {\r\n      reject(err);\r\n    }\r\n  });\r\n};\r\n\r\nexport const updateWargameTitle = (dbName, title) => {\r\n\r\n  return getAllWargames()\r\n    .then(function (games) {\r\n      if (games.some((game) => game.title === title && getNameFromPath(game.name) !== dbName)) return 'Name already in use.';\r\n\r\n      var db = wargameDbStore.find((db) => db.name === dbName).db;\r\n\r\n      return new Promise((resolve, reject) => {\r\n\r\n        db.get(dbDefaultSettings._id)\r\n          .then((res) => {\r\n            db.put({\r\n              _id: dbDefaultSettings._id,\r\n              _rev: res._rev,\r\n              name: dbName,\r\n              wargameTitle: title,\r\n              data: res.data,\r\n            })\r\n              .then(() => {\r\n                resolve(db.get(dbDefaultSettings._id));\r\n              })\r\n              .catch((err) => {\r\n                reject(err);\r\n              })\r\n          });\r\n      });\r\n\r\n\r\n    })\r\n    .catch(function (err) {\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const saveSettings = (dbName, data) => {\r\n\r\n  let db = wargameDbStore.find((wargame) => dbName === wargame.name).db;\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    getWargameLocalFromName(dbName)\r\n      .then(function (localDoc) {\r\n        let newDoc = deepCopy(localDoc);\r\n        newDoc.data.overview = data;\r\n        newDoc.data.overview.complete = calcComplete(data);\r\n        return newDoc;\r\n      })\r\n      .then((res) => {\r\n        return db.put({\r\n          _id: res._id,\r\n          _rev: res._rev,\r\n          name: res.name,\r\n          wargameTitle: res.wargameTitle,\r\n          data: res.data,\r\n        })\r\n      })\r\n      .then(() => {\r\n        resolve(db.get(dbDefaultSettings._id));\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      })\r\n  });\r\n};\r\n\r\nexport const saveForce = (dbName, newName, newData, oldName) => {\r\n\r\n  let db = wargameDbStore.find((wargame) => dbName === wargame.name).db;\r\n\r\n  return getWargameLocalFromName(dbName)\r\n    .then(function (localDoc) {\r\n\r\n      let newDoc = deepCopy(localDoc);\r\n\r\n      let updatedData = newDoc.data;\r\n\r\n      let forces = updatedData.forces.forces;\r\n\r\n      let forceNew = forces.every((force) => force.forceName !== oldName);\r\n\r\n      if (forceNew) {\r\n        forces.push({...newData, forceName: newName});\r\n      } else {\r\n        let forceIndex = forces.findIndex((force) => force.forceName === oldName);\r\n        // forces.forceName = newName;\r\n        forces.splice(forceIndex, 1, {...newData, forceName: newName});\r\n      }\r\n\r\n      updatedData.forces.forces = forces;\r\n      updatedData.forces.complete = calcComplete(forces);\r\n\r\n      return new Promise((resolve, reject) => {\r\n\r\n        db.get(dbDefaultSettings._id)\r\n          .then((res) => {\r\n            db.put({\r\n              _id: dbDefaultSettings._id,\r\n              _rev: res._rev,\r\n              name: res.name,\r\n              wargameTitle: res.wargameTitle,\r\n              data: updatedData,\r\n            })\r\n              .then(() => {\r\n                resolve(db.get(dbDefaultSettings._id));\r\n              })\r\n              .catch((err) => {\r\n                reject(err);\r\n              })\r\n          });\r\n      });\r\n    });\r\n};\r\n\r\n\r\n\r\nexport const saveChannel = (dbName, newName, newData, oldName) => {\r\n\r\n  let db = wargameDbStore.find((wargame) => dbName === wargame.name).db;\r\n  //\r\n  return getWargameLocalFromName(dbName)\r\n    .then(function (localDoc) {\r\n\r\n      let newDoc = deepCopy(localDoc);\r\n\r\n      let updatedData = newDoc.data;\r\n\r\n      let channels = updatedData.channels.channels;\r\n\r\n      let channelNew = channels.every((channel) => channel.channelName !== oldName);\r\n\r\n      if (channelNew) {\r\n        channels.push({...newData, channelName: newName});\r\n      } else {\r\n        let channelIndex = channels.findIndex((channel) => channel.channelName === oldName);\r\n        // channels.channelName = newName;\r\n        channels.splice(channelIndex, 1, {...newData, channelName: newName});\r\n      }\r\n\r\n      updatedData.channels.channels = channels;\r\n      updatedData.channels.complete = calcComplete(channels);\r\n\r\n      return new Promise((resolve, reject) => {\r\n\r\n        db.get(dbDefaultSettings._id)\r\n          .then((res) => {\r\n            db.put({\r\n              _id: dbDefaultSettings._id,\r\n              _rev: res._rev,\r\n              name: res.name,\r\n              wargameTitle: res.wargameTitle,\r\n              data: updatedData,\r\n            })\r\n              .then(() => {\r\n                resolve(db.get(dbDefaultSettings._id));\r\n              })\r\n              .catch((err) => {\r\n                reject(err);\r\n              })\r\n          });\r\n      });\r\n    })\r\n};\r\n\r\n\r\nexport const deleteChannel = (dbName, channelName) => {\r\n\r\n  let db = wargameDbStore.find((wargame) => dbName === wargame.name).db;\r\n  //\r\n  return getWargameLocalFromName(dbName)\r\n    .then(function (localDoc) {\r\n\r\n      let newDoc = deepCopy(localDoc);\r\n\r\n      let updatedData = newDoc.data;\r\n\r\n      let channels = updatedData.channels.channels;\r\n\r\n      let channelIndex = channels.findIndex((channel) => channel.channelName === channelName);\r\n\r\n        channels.splice(channelIndex, 1);\r\n\r\n      updatedData.channels.channels = channels;\r\n      updatedData.channels.complete = calcComplete(channels);\r\n\r\n      return new Promise((resolve, reject) => {\r\n\r\n        db.get(dbDefaultSettings._id)\r\n          .then((res) => {\r\n            db.put({\r\n              _id: dbDefaultSettings._id,\r\n              _rev: res._rev,\r\n              name: res.name,\r\n              wargameTitle: res.wargameTitle,\r\n              data: updatedData,\r\n            })\r\n              .then(() => {\r\n                resolve(db.get(dbDefaultSettings._id));\r\n              })\r\n              .catch((err) => {\r\n                reject(err);\r\n              })\r\n          });\r\n      });\r\n    })\r\n};\r\n\r\nexport const deleteForce = (dbName, forceName) => {\r\n\r\n  let db = wargameDbStore.find((wargame) => dbName === wargame.name).db;\r\n  //\r\n  return getWargameLocalFromName(dbName)\r\n    .then(function (localDoc) {\r\n\r\n      let newDoc = deepCopy(localDoc);\r\n\r\n      let updatedData = newDoc.data;\r\n\r\n      let forces = updatedData.forces.forces;\r\n\r\n      let forceIndex = forces.findIndex((force) => force.forceName === forceName);\r\n\r\n      forces.splice(forceIndex, 1);\r\n\r\n      updatedData.forces.forces = forces;\r\n      updatedData.channels.complete = calcComplete(forces);\r\n\r\n      return new Promise((resolve, reject) => {\r\n\r\n        db.get(dbDefaultSettings._id)\r\n          .then((res) => {\r\n            db.put({\r\n              _id: dbDefaultSettings._id,\r\n              _rev: res._rev,\r\n              name: res.name,\r\n              wargameTitle: res.wargameTitle,\r\n              data: updatedData,\r\n            })\r\n              .then(() => {\r\n                resolve(db.get(dbDefaultSettings._id));\r\n              })\r\n              .catch((err) => {\r\n                reject(err);\r\n              })\r\n          });\r\n      });\r\n    })\r\n};\r\n\r\n\r\nexport const duplicateWargame = (dbPath) => {\r\n\r\n  let dbName = getNameFromPath(dbPath);\r\n\r\n  let db = wargameDbStore.find((db) => db.name === dbName).db;\r\n  let uniqId = uniqid.time();\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    var newDb;\r\n    var newDbName = `wargame-${uniqId}`;\r\n\r\n    db.get(dbDefaultSettings._id)\r\n      .then((res) => {\r\n        newDb = new PouchDB(databasePath+newDbName);\r\n        return res;\r\n      })\r\n      .then((res) => {\r\n        return newDb.put({\r\n          _id: dbDefaultSettings._id,\r\n          name: newDbName,\r\n          wargameTitle: `${res.wargameTitle}-${uniqId}`,\r\n          data: res.data,\r\n        })\r\n          .then(() => {\r\n            return res;\r\n          })\r\n      })\r\n      .then(() => {\r\n        wargameDbStore.unshift({name: newDbName, db: newDb});\r\n        return getAllWargames();\r\n      })\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n        console.log(err);\r\n      })\r\n  });\r\n};\r\n\r\nexport const getWargameLocalFromName = (dbName) => {\r\n\r\n  let game = wargameDbStore.find((wargame) => dbName === wargame.name);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    game.db.get(dbDefaultSettings._id)\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      })\r\n  });\r\n};\r\n\r\nexport const getWargame = (gamePath) => {\r\n\r\n  let name = getNameFromPath(gamePath);\r\n\r\n  let game = wargameDbStore.find((wargame) => name === wargame.name);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    game.db.get(dbDefaultSettings._id)\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      })\r\n  });\r\n};\r\n\r\nexport const postNewMessage = (dbName, details, message) => {\r\n\r\n  let db = wargameDbStore.find((db) => db.name === dbName).db;\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    db.put({\r\n      _id: new Date().toISOString(),\r\n      details,\r\n      message,\r\n    })\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  });\r\n};\r\n\r\nexport const getAllMessages = (dbName) => {\r\n\r\n  let db = wargameDbStore.find((db) => db.name === dbName).db;\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    db.allDocs({include_docs: true, descending: true})\r\n      .then((res) => {\r\n        resolve(res.rows.map((a) => a.doc));\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport var getAllWargames = function () {\r\n\r\n  let promises = wargameDbStore.map((game) => {\r\n    return game.db.get(dbDefaultSettings._id)\r\n      .then(function (res) {\r\n        return {\r\n          name: game.db.name,\r\n          title: res.wargameTitle\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  });\r\n  return Promise.all(promises);\r\n};\r\n\r\nvar updateLocalDoc = function(dbName, data, title) {\r\n\r\n  var db = wargameDbStore.find((db) => db.name === dbName).db;\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    db.get(dbDefaultSettings._id)\r\n      .then((res) => {\r\n        db.put({\r\n          _id: dbDefaultSettings._id,\r\n          _rev: res._rev,\r\n          name: dbName,\r\n          wargameTitle: title,\r\n          data: data,\r\n        })\r\n          .then(() => {\r\n            resolve(db.get(dbDefaultSettings._id));\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          })\r\n      });\r\n  });\r\n};\r\n\r\nvar getNameFromPath = function (dbPath) {\r\n  let path = new URL(dbPath).pathname;\r\n  let index = path.lastIndexOf('/');\r\n  return path.substring(index + 1);\r\n};\r\n","import ActionConstant from '../ActionConstants.js';\r\nimport uniqid from \"uniqid\";\r\n\r\nexport const addNotification = (message, type) => ({\r\n  type: ActionConstant.ADD_NOTIFICATION,\r\n  payload: {\r\n    message: message,\r\n    type: type,\r\n    id: uniqid.time(),\r\n  },\r\n});\r\n\r\nexport const hide = (id) => ({\r\n  type: ActionConstant.HIDE_NOTIFICATION,\r\n  id\r\n});\r\n\r\n\r\nexport const hideNotification = (id) => {\r\n  return (dispatch) => {\r\n\r\n    dispatch(hide(id));\r\n\r\n  };\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\nimport 'whatwg-fetch';\r\nimport _ from \"lodash\";\r\n\r\nimport * as wargamesApi from \"../../api/wargames_api\";\r\nimport { addNotification } from \"../Notification/Notification_ActionCreators\";\r\n\r\nexport const setCurrentTab = (tab) => ({\r\n  type: ActionConstant.SET_CURRENT_GAME_SETUP_TAB,\r\n  payload: tab\r\n});\r\n\r\nexport const setGameData = (data) => ({\r\n  type: ActionConstant.SET_GAME_SETUP_DATA,\r\n  payload: data,\r\n});\r\n\r\nexport const setWargameTitle = (data) => ({\r\n  type: ActionConstant.SET_WARGAME_NAME,\r\n  payload: data,\r\n});\r\n\r\nexport const gameTitleInvalid = (data) => ({\r\n  type: ActionConstant.GAME_TITLE_INVALID,\r\n  payload: data,\r\n});\r\n\r\nexport const setSelectedForce = (payload) => ({\r\n  type: ActionConstant.SET_SELECTED_FORCE,\r\n  payload\r\n});\r\n\r\n\r\nexport const addNewChannel = (data) => ({\r\n  type: ActionConstant.ADD_NEW_CHANNEL,\r\n  payload: data,\r\n});\r\n\r\nexport const addNewForce = (data) => ({\r\n  type: ActionConstant.ADD_NEW_FORCE,\r\n  payload: data,\r\n});\r\n\r\nexport const setSelectedChannel = (payload) => ({\r\n  type: ActionConstant.SET_SELECTED_CHANNEL,\r\n  payload\r\n});\r\n\r\nexport const setForceOverview = (payload) => ({\r\n  type: ActionConstant.SET_FORCE_OVERVIEW,\r\n  payload,\r\n});\r\n\r\n\r\nconst saveAllWargameNames = (names) => ({\r\n  type: ActionConstant.ALL_WARGAME_NAMES_SAVED,\r\n  payload: names\r\n});\r\n\r\n\r\nconst setCurrentWargame = (data) => ({\r\n  type: ActionConstant.SET_CURRENT_WARGAME,\r\n  payload: data\r\n});\r\n\r\n\r\nexport const addRecipientToChannel = (data) => ({\r\n  type: ActionConstant.ADD_NEW_RECIPIENT,\r\n  payload: data,\r\n});\r\n\r\nexport const updateRecipient = (id, data) => ({\r\n  type: ActionConstant.UPDATE_RECIPIENT,\r\n  payload: { id,data }\r\n});\r\n\r\nexport const removeRecipient = (id) => ({\r\n  type: ActionConstant.REMOVE_RECIPIENT,\r\n  payload: id\r\n});\r\n\r\nconst populatingDb = (isLoading) => ({\r\n  type: ActionConstant.POPULATE_WARGAMES_DB,\r\n  isLoading\r\n});\r\n\r\n\r\nexport const populateWargameStore = () => {\r\n  return async (dispatch) => {\r\n\r\n    dispatch(populatingDb(true));\r\n\r\n    var wargameNames = await wargamesApi.populateWargame(dispatch);\r\n\r\n    dispatch(saveAllWargameNames(wargameNames));\r\n\r\n    dispatch(populatingDb(false));\r\n  }\r\n};\r\n\r\n\r\nexport const createNewWargameDB = () => {\r\n\r\n  return async (dispatch) => {\r\n\r\n    var wargame = await wargamesApi.createWargame();\r\n\r\n    let wargames = await wargamesApi.getAllWargames();\r\n\r\n    dispatch(saveAllWargameNames(wargames));\r\n\r\n    dispatch(setCurrentWargame(_.omit(wargame, ['_id', '_rev'])));\r\n  }\r\n};\r\n\r\n\r\nexport const clearWargames = () => {\r\n\r\n  return async (dispatch) => {\r\n\r\n    await wargamesApi.clearWargames();\r\n\r\n    let wargames = await wargamesApi.getAllWargames();\r\n    dispatch(saveAllWargameNames(wargames));\r\n\r\n  }\r\n};\r\n\r\n\r\nexport const deleteWargame = (name) => {\r\n  return async (dispatch) => {\r\n\r\n    await wargamesApi.deleteWargame(name);\r\n\r\n    let wargames = await wargamesApi.getAllWargames();\r\n    dispatch(saveAllWargameNames(wargames));\r\n\r\n  }\r\n};\r\n\r\n\r\nexport const editWargame = (name) => {\r\n  return async (dispatch) => {\r\n\r\n    let wargame = await wargamesApi.editWargame(name);\r\n\r\n    console.log(wargame);\r\n\r\n    dispatch(setCurrentWargame(wargame));\r\n  }\r\n};\r\n\r\n\r\nexport const saveWargameTitle = (dbName, title) => {\r\n\r\n  return async (dispatch) => {\r\n\r\n    let localDoc = await wargamesApi.updateWargameTitle(dbName, title);\r\n\r\n    let wargames = await wargamesApi.getAllWargames();\r\n\r\n    console.log(wargames);\r\n\r\n    dispatch(saveAllWargameNames(wargames));\r\n\r\n    dispatch(setCurrentWargame(localDoc));\r\n\r\n    dispatch(addNotification(\"Wargame name updated.\", \"success\"));\r\n\r\n  }\r\n};\r\n\r\n\r\nexport const saveSettings = (wargame, data) => {\r\n  return async (dispatch) => {\r\n\r\n    let localDoc = await wargamesApi.saveSettings(wargame, data);\r\n\r\n    dispatch(setCurrentWargame(localDoc));\r\n\r\n    dispatch(addNotification(\"Overview saved.\", \"success\"));\r\n  }\r\n};\r\n\r\nexport const saveForce = (wargameName, newName, newData, oldName) => {\r\n  return async (dispatch) => {\r\n\r\n    let localDoc = await wargamesApi.saveForce(wargameName, newName, newData, oldName);\r\n\r\n    console.log(localDoc);\r\n\r\n    dispatch(setCurrentWargame(localDoc));\r\n    dispatch(setSelectedForce(newName));\r\n\r\n    dispatch(addNotification(\"Force saved.\", \"success\"));\r\n  }\r\n};\r\n\r\nexport const saveChannel = (wargameName, newName, newData, oldName) => {\r\n  return async (dispatch) => {\r\n\r\n    let localDoc = await wargamesApi.saveChannel(wargameName, newName, newData, oldName);\r\n\r\n    dispatch(setCurrentWargame(localDoc));\r\n    dispatch(setSelectedChannel(newName));\r\n\r\n    dispatch(addNotification(\"channel saved.\", \"success\"));\r\n  }\r\n};\r\n\r\nexport const deleteSelectedChannel = (wargameName, channel) => {\r\n  return async (dispatch) => {\r\n\r\n    let localDoc = await wargamesApi.deleteChannel(wargameName, channel);\r\n\r\n    dispatch(setCurrentWargame(localDoc));\r\n\r\n    dispatch(addNotification(\"channel deleted.\", \"success\"));\r\n  }\r\n};\r\n\r\nexport const deleteSelectedForce = (wargameName, force) => {\r\n  return async (dispatch) => {\r\n\r\n    let localDoc = await wargamesApi.deleteForce(wargameName, force);\r\n\r\n    dispatch(setCurrentWargame(localDoc));\r\n\r\n    dispatch(addNotification(\"channel deleted.\", \"success\"));\r\n  }\r\n};\r\n\r\n\r\nexport const duplicateWargame = (dbName) => {\r\n  return async (dispatch) => {\r\n\r\n    var games = await wargamesApi.duplicateWargame(dbName);\r\n\r\n    dispatch(saveAllWargameNames(games));\r\n  }\r\n};\r\n\r\n","import React, {Component} from 'react';\r\nimport ModalWrapper from './ModalWrapper';\r\nimport \"../../scss/App.scss\";\r\nimport { connect } from 'react-redux';\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport {addNewForce, setSelectedForce} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nclass AddForceModal extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      forceName: ''\r\n    };\r\n  }\r\n\r\n  hideModal = () => {\r\n\r\n    this.setState({\r\n      forceName: '',\r\n    });\r\n\r\n    this.props.dispatch(modalAction.close());\r\n  };\r\n\r\n\r\n  setNewForceName = (e) => {\r\n    console.log(e.target.value);\r\n    this.setState({\r\n      forceName: e.target.value,\r\n      sameName: this.props.wargame.data[this.props.wargame.currentTab].forces.some((force) => force === e.target.value)\r\n    });\r\n  };\r\n\r\n  addForce = () => {\r\n    this.props.dispatch(addNewForce(this.state.forceName));\r\n    this.props.dispatch(setSelectedForce(this.state.forceName));\r\n  };\r\n\r\n  render() {\r\n\r\n    if (!this.props.currentModal.open) return false;\r\n\r\n    var disable = this.state.forceName.length < 1 || this.state.sameName;\r\n\r\n    return (\r\n      <ModalWrapper>\r\n        <div className=\"display-text-wrapper\">\r\n          <h3>Create force</h3>\r\n          {this.state.sameName ? <p className=\"notification\">Already exists</p> : false}\r\n          <input autoFocus className=\"modal-input\" type=\"text\" onChange={this.setNewForceName} />\r\n          <div className=\"buttons\">\r\n            <button disabled={disable} name=\"add\" className=\"btn btn-action btn-action--primary\" onClick={this.addForce}>Add</button>\r\n            <button name=\"cancel\" className=\"btn btn-action btn-action--secondary\" onClick={this.hideModal}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </ModalWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame, currentModal }) => ({\r\n  wargame,\r\n  currentModal\r\n});\r\n\r\nexport default connect(mapStateToProps)(AddForceModal);\r\n","import uniqid from \"uniqid\";\r\n\r\nimport PouchDB from \"pouchdb\";\r\nimport {  databasePath,\r\n          MSG_STORE} from \"./consts\";\r\n\r\n\r\nvar db = new PouchDB(databasePath+MSG_STORE);\r\n\r\n\r\nexport const addMessage = (messageDetail, schema) => {\r\n  return new Promise((resolve, reject) => {\r\n    (async() => {\r\n\r\n      const allMessages = await getAllMessagesFromDb();\r\n      const matchedName = allMessages.find((el) => el.details.title === messageDetail.title && el._id !== messageDetail.id);\r\n\r\n      if (matchedName) {\r\n        reject(\"Message title already used\");\r\n        return;\r\n      }\r\n\r\n      let time = new Date().toISOString();\r\n\r\n      let message = {\r\n        _id: time,\r\n        lastUpdated: time,\r\n        details: messageDetail,\r\n        schema: schema,\r\n        completed: false\r\n      };\r\n\r\n      return db.put(message)\r\n        .then(function (result) {\r\n          resolve(result);\r\n        })\r\n        .catch(function (err) {\r\n          console.log(err);\r\n          reject(false);\r\n        })\r\n\r\n    })();\r\n  });\r\n};\r\n\r\nexport const duplicateMessageInDb = (id) => {\r\n\r\n  let time = new Date().toISOString();\r\n\r\n  return new Promise((resolve, reject) => {\r\n    db.get(id)\r\n      .then(function (doc) {\r\n\r\n        var updatedMessage = doc.details;\r\n\r\n        updatedMessage.title = `${updatedMessage.title} Copy-${uniqid.time()}`;\r\n\r\n        return db.put({\r\n          _id: time,\r\n          lastUpdated: time,\r\n          details: updatedMessage,\r\n          schema: doc.schema\r\n        });\r\n      })\r\n      .then(function () {\r\n        resolve(true);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        reject(false);\r\n      })\r\n  });\r\n};\r\n\r\nexport const getAllMessagesFromDb = () => {\r\n  return new Promise((resolve, reject) => {\r\n    return db.changes({\r\n      since: 0,\r\n      include_docs: true,\r\n      descending: true,\r\n    })\r\n      .then(function (changes) {\r\n\r\n        let results = changes.results.map((a) => a.doc);\r\n        results = results.filter((a) => !a.hasOwnProperty('_deleted') && a.hasOwnProperty('details'));\r\n\r\n        resolve(results);\r\n      })\r\n      .catch(function (err) {\r\n        // handle errors\r\n        reject(err);\r\n        console.log(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const updateMessageInDb = (id, message) => {\r\n  return new Promise((resolve, reject) => {\r\n    (async() => {\r\n\r\n      const allMessages = await getAllMessagesFromDb();\r\n      const matchedName = allMessages.find((el) => el.details.title === message.title && el._id !== id);\r\n\r\n      if (matchedName) {\r\n        reject(\"Message title already used\");\r\n        return;\r\n      }\r\n\r\n      db.get(id)\r\n        .then(function (doc) {\r\n          return db.put({\r\n            _id: id,\r\n            lastUpdated: new Date().toISOString(),\r\n            _rev: doc._rev,\r\n            details: message,\r\n            schema: doc.schema\r\n          });\r\n        })\r\n        .then(function (result) {\r\n          resolve(result);\r\n        })\r\n        .catch(function (err) {\r\n          console.log(err);\r\n          reject(false);\r\n        });\r\n\r\n    })();\r\n  });\r\n};\r\n\r\nexport const getMessage = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    db.get(id, {include_docs: true}, function(err, doc) {\r\n      if (err) reject('something went wrong');\r\n      resolve(doc);\r\n    });\r\n  });\r\n};\r\n\r\nexport const deleteMessageFromDb = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    db.get(id)\r\n      .then(function (doc) {\r\n        return db.remove(doc);\r\n      })\r\n      .then(function (result) {\r\n        resolve(result);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        reject(false);\r\n      })\r\n  });\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\n\r\nexport const setCurrentViewFromURI = (path) => ({\r\n  type: ActionConstant.SET_CURRENT_VIEW_FROM_URI,\r\n  payload: path\r\n});","import ActionConstant from '../ActionConstants';\r\nimport 'whatwg-fetch';\r\nimport check from 'check-types';\r\n\r\nimport * as messagesApi from \"../../api/messages_api\";\r\n\r\nimport { addNotification } from \"../Notification/Notification_ActionCreators\";\r\nimport {setCurrentViewFromURI} from \"../setCurrentViewFromURI/setCurrentViewURI_ActionCreators\";\r\n\r\nconst DBMessageSaveStatus = (status) => ({\r\n  type: ActionConstant.DB_MESSAGE_STATUS,\r\n  payload: status\r\n});\r\n\r\nconst DBSaveMessageArray = (messages) => ({\r\n  type: ActionConstant.DB_MESSAGE_SAVED,\r\n  payload: messages\r\n});\r\n\r\nconst DBSaveMessagePreview = (message) => ({\r\n  type: ActionConstant.DB_RETURNED_MESSAGE,\r\n  payload: message\r\n});\r\n\r\nconst loadingDBMessageCreate = (isLoading) => ({\r\n  type: ActionConstant.DB_MESSAGE_CREATION_LOADING,\r\n  isLoading\r\n});\r\n\r\nconst loadingDBMessageGet = (isLoading) => ({\r\n  type: ActionConstant.DB_MESSAGES_GET,\r\n  isLoading\r\n});\r\n\r\nexport const resetMessagePreview = () => ({\r\n  type: ActionConstant.RESET_MESSAGE_PREVIEW,\r\n});\r\n\r\n\r\nexport const createMessage = (message, schema) => {\r\n\r\n  if (!check.object(message)) throw Error(`createMessageType() requires object with message, from & to NOT. ${message}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    try {\r\n      var result = await messagesApi.addMessage(message, schema);\r\n\r\n      if (result.err) {\r\n        dispatch(addNotification(result.err));\r\n      }\r\n\r\n      if (result.ok) {\r\n        dispatch(DBMessageSaveStatus(result));\r\n        let messages = await messagesApi.getAllMessagesFromDb();\r\n        dispatch(DBSaveMessageArray(messages));\r\n        dispatch(loadingDBMessageCreate(false));\r\n        dispatch(setCurrentViewFromURI(\"/client/umpireMenu/library\"));\r\n      }\r\n    } catch(e) {\r\n      dispatch(loadingDBMessageCreate(false));\r\n      alert(e);\r\n    }\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const duplicateMessage = (messageId) => {\r\n\r\n  if (!check.string(messageId)) throw Error(`duplicateMessage() requires a string Not. ${messageId}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    var result = await messagesApi.duplicateMessageInDb(messageId);\r\n\r\n    if (result) {\r\n      dispatch(DBMessageSaveStatus(result));\r\n      let messages = await messagesApi.getAllMessagesFromDb();\r\n      dispatch(DBSaveMessageArray(messages));\r\n    }\r\n    dispatch(loadingDBMessageCreate(false));\r\n  }\r\n};\r\n\r\n\r\nexport const updateMessage = (message, id) => {\r\n\r\n  if (!check.object(message)) throw Error(`updateMessage() requires object with message, from & to NOT. ${message}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    try {\r\n      const result = await messagesApi.updateMessageInDb(id, message);\r\n\r\n      if (result.err) {\r\n        dispatch(addNotification(result.err));\r\n      }\r\n\r\n      if (result.ok) {\r\n        dispatch(DBMessageSaveStatus(result));\r\n\r\n        let responses = await Promise.all([messagesApi.getAllMessagesFromDb(), messagesApi.getMessage(result.id)]);\r\n        let [messages, message] = [...responses];\r\n\r\n        dispatch(DBSaveMessagePreview(message));\r\n        dispatch(DBSaveMessageArray(messages));\r\n        dispatch(loadingDBMessageCreate(false));\r\n        dispatch(setCurrentViewFromURI(\"/client/umpireMenu/library\"));\r\n\r\n      }\r\n    } catch (e) {\r\n      // CREATE ERROR WARNING MESSAGE\r\n      dispatch(loadingDBMessageCreate(false));\r\n      alert(e);\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport const deleteMessage = (messageId) => {\r\n\r\n  if (!check.string(messageId)) throw Error(`duplicateMessage() requires a string Not. ${messageId}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    var result = await messagesApi.deleteMessageFromDb(messageId);\r\n\r\n    if (result) {\r\n      let messages = await messagesApi.getAllMessagesFromDb();\r\n      dispatch(DBSaveMessageArray(messages));\r\n      dispatch(resetMessagePreview());\r\n    } else {\r\n      // error action\r\n    }\r\n\r\n    dispatch(loadingDBMessageCreate(false));\r\n  }\r\n};\r\n\r\n\r\nexport const getSingleMessage = (id) => {\r\n\r\n  if (!check.string(id)) throw Error(`duplicateMessage() requires a string id..`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageGet(true));\r\n\r\n    let result = await messagesApi.getMessage(id);\r\n\r\n    dispatch(DBSaveMessagePreview(result));\r\n    dispatch(loadingDBMessageGet(false));\r\n  }\r\n};\r\n\r\nexport const getAllMessages = () => {\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageGet(true));\r\n\r\n    let result = await messagesApi.getAllMessagesFromDb();\r\n\r\n    dispatch(DBSaveMessageArray(result));\r\n    dispatch(loadingDBMessageGet(false));\r\n  }\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\nimport 'whatwg-fetch';\r\nimport check from 'check-types';\r\n\r\nimport * as messageTypesApi from \"../../api/messageTypes_api\";\r\n\r\nimport {setCurrentViewFromURI} from \"../setCurrentViewFromURI/setCurrentViewURI_ActionCreators\";\r\nimport {addNotification} from \"../Notification/Notification_ActionCreators\";\r\n\r\nconst DBMessageSaveStatus = (status) => ({\r\n  type: ActionConstant.DB_MESSAGE_STATUS,\r\n  payload: status\r\n});\r\n\r\nconst DBSaveMessageArray = (messages) => ({\r\n  type: ActionConstant.DB_MESSAGE_TYPES_SAVED,\r\n  payload: messages\r\n});\r\n\r\nconst loadingDBMessageCreate = (isLoading) => ({\r\n  type: ActionConstant.DB_MESSAGE_CREATION_LOADING,\r\n  isLoading\r\n});\r\n\r\nconst loadingDBMessageGet = (isLoading) => ({\r\n  type: ActionConstant.DB_MESSAGE_TYPES_GET,\r\n  isLoading\r\n});\r\n\r\nconst populatingDb = (isLoading) => ({\r\n  type: ActionConstant.POPULATE_MESSAGE_TYPES_DB,\r\n  isLoading\r\n});\r\n\r\n\r\nexport const populateMessageTypesDb = () => {\r\n\r\n  return async (dispatch) => {\r\n    dispatch(populatingDb(true));\r\n\r\n    await messageTypesApi.populateDb();\r\n\r\n    dispatch(populatingDb(false));\r\n  }\r\n};\r\n\r\n\r\nexport const createMessageType = (schema) => {\r\n\r\n  if (!check.object(schema)) throw Error(`createMessageType() requires schema object & NOT. ${schema}`);\r\n\r\n  return async (dispatch) => {\r\n\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    try {\r\n\r\n      var result = await messageTypesApi.postNewMessage(schema);\r\n\r\n      if (result.err) {\r\n        dispatch(addNotification(result.err));\r\n        dispatch(loadingDBMessageCreate(false));\r\n      }\r\n\r\n      if (result.ok) {\r\n        dispatch(DBMessageSaveStatus(result));\r\n        let messages = await messageTypesApi.getAllMessagesFromDb();\r\n        dispatch(DBSaveMessageArray(messages));\r\n\r\n        dispatch(loadingDBMessageCreate(false));\r\n        dispatch(setCurrentViewFromURI(\"/client/umpireMenu/templates\"));\r\n      }\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport const duplicateMessageType = (id) => {\r\n\r\n  if (!check.string(id)) throw Error(`duplicateTemplate() requires a string Not. ${id}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    var result = await messageTypesApi.duplicateMessageInDb(id);\r\n\r\n    if (result) {\r\n      dispatch(DBMessageSaveStatus(true));\r\n      let messages = await messageTypesApi.getAllMessagesFromDb();\r\n      dispatch(DBSaveMessageArray(messages));\r\n    }\r\n    dispatch(loadingDBMessageCreate(false));\r\n  }\r\n};\r\n\r\nexport const updateMessageType = (schema, id) => {\r\n\r\n  if (!check.object(schema)) throw Error(`updateMessageType() requires schema & not ${schema}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    try {\r\n      const result = await messageTypesApi.updateMessageInDb(schema, id);\r\n\r\n      if (result.err) {\r\n        dispatch(addNotification(result.err));\r\n        dispatch(loadingDBMessageCreate(false));\r\n      }\r\n\r\n      if (result.ok) {\r\n        dispatch(DBMessageSaveStatus(result.ok));\r\n\r\n        let allMessages = await messageTypesApi.getAllMessagesFromDb();\r\n\r\n        dispatch(DBSaveMessageArray(allMessages));\r\n        dispatch(loadingDBMessageCreate(false));\r\n        dispatch(setCurrentViewFromURI(\"/client/umpireMenu/templates\"));\r\n\r\n      }\r\n    } catch (e) {\r\n      // CREATE ERROR WARNING MESSAGE\r\n      dispatch(loadingDBMessageCreate(false));\r\n      alert(e);\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport const deleteMessageType = (messageId) => {\r\n\r\n  if (!check.string(messageId)) throw Error(`deleteMessage() requires a string of id not. ${messageId}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    var result = await messageTypesApi.deleteMessageFromDb(messageId);\r\n\r\n    if (result) {\r\n      let messages = await messageTypesApi.getAllMessagesFromDb();\r\n      dispatch(DBSaveMessageArray(messages));\r\n    } else {\r\n      // error action\r\n    }\r\n\r\n    dispatch(loadingDBMessageCreate(false));\r\n  }\r\n};\r\n\r\n\r\nexport const getAllMessageTypes = () => {\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageGet(true));\r\n\r\n    let result = await messageTypesApi.getAllMessagesFromDb();\r\n\r\n    dispatch(DBSaveMessageArray(result));\r\n    dispatch(loadingDBMessageGet(false));\r\n  }\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\n\r\nexport const setSelectedSchema = (schemaId) => ({\r\n  type: ActionConstant.SET_SELECTED_SCHEMA,\r\n  payload: schemaId\r\n});\r\n\r\n\r\nexport const setPreviewSchema = (schema) => ({\r\n  type: ActionConstant.SET_PREVIEW_SCHEMA,\r\n  payload: schema\r\n});","import React, {Component} from 'react';\r\nimport ModalWrapper from './ModalWrapper';\r\nimport \"../../scss/App.scss\";\r\nimport { connect } from 'react-redux';\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport { deleteMessage } from \"../../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\nimport { deleteMessageType } from \"../../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\nimport {setPreviewSchema, setSelectedSchema} from \"../../ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators\";\r\n\r\nclass DeleteModal extends Component {\r\n\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  hideModal = () => {\r\n    this.props.dispatch(modalAction.close());\r\n  };\r\n\r\n  deleteMessage = () => {\r\n    if (this.props.currentViewURI === \"/client/umpireMenu/templates\") {\r\n      this.props.dispatch(deleteMessageType(this.props.umpireMenu.selectedSchemaID));\r\n      this.props.dispatch(setPreviewSchema(\"\"));\r\n      this.props.dispatch(setSelectedSchema(\"\"));\r\n    } else {\r\n      this.props.dispatch(deleteMessage(this.props.messages.messagePreviewId));\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    if (!this.props.currentModal.open) return false; // needed ?\r\n\r\n    return (\r\n      <ModalWrapper>\r\n        <div className=\"display-text-wrapper\">\r\n          <h3>Delete</h3>\r\n          <p>This will permanently remove the message.<br/>Are you sure?</p>\r\n          <div className=\"buttons\">\r\n            <button name=\"delete\" className=\"btn btn-action btn-action--primary\" onClick={this.deleteMessage}>Delete</button>\r\n            <button name=\"cancel\" className=\"btn btn-action btn-action--secondary\" onClick={this.hideModal}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </ModalWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ currentModal, messages, umpireMenu, currentViewURI }) => ({\r\n  currentModal,\r\n  messages,\r\n  umpireMenu,\r\n  currentViewURI\r\n});\r\n\r\nexport default connect(mapStateToProps)(DeleteModal);\r\n","import React, {Component} from 'react';\r\nimport ModalWrapper from './ModalWrapper';\r\nimport \"../../scss/App.scss\";\r\nimport { connect } from 'react-redux';\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport {deleteWargame} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nclass DeleteWargameModal extends Component {\r\n\r\n  hideModal = () => {\r\n    this.props.dispatch(modalAction.close());\r\n  };\r\n\r\n  deleteWargame = () => {\r\n    this.props.dispatch(deleteWargame(this.props.currentModal.data));\r\n  };\r\n\r\n  render() {\r\n\r\n\r\n    if (!this.props.currentModal.open) return false; // needed ?\r\n\r\n    return (\r\n      <ModalWrapper>\r\n        <div className=\"display-text-wrapper\">\r\n          <h3>Delete</h3>\r\n          <p>This will permanently delete the wargame.<br/>Are you sure?</p>\r\n          <div className=\"buttons\">\r\n            <button name=\"delete\" className=\"btn btn-action btn-action--primary\" onClick={this.deleteWargame}>Delete</button>\r\n            <button name=\"cancel\" className=\"btn btn-action btn-action--secondary\" onClick={this.hideModal}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </ModalWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ currentModal, messages, umpireMenu, currentViewURI }) => ({\r\n  currentModal,\r\n  messages,\r\n  umpireMenu,\r\n  currentViewURI\r\n});\r\n\r\nexport default connect(mapStateToProps)(DeleteWargameModal);\r\n","import React, {Component} from 'react';\r\nimport \"../../scss/App.scss\";\r\nimport { connect } from 'react-redux';\r\nimport AddForceModal from \"./AddForceModal\";\r\nimport DeleteModal from './DeleteModal';\r\nimport DeleteWargameModal from \"./DeleteWargameModal\";\r\n\r\nclass ModalSwitch extends Component {\r\n\r\n  render() {\r\n\r\n    var modal;\r\n\r\n    switch (this.props.currentModal.modal) {\r\n\r\n      case \"addForce\":\r\n        modal = <AddForceModal />;\r\n        break;\r\n\r\n      case \"delete\":\r\n        modal = <DeleteModal />;\r\n        break;\r\n\r\n      case \"deleteWargame\":\r\n        modal = <DeleteWargameModal />;\r\n        break;\r\n\r\n      default:\r\n        modal = false;\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {modal}\r\n      </>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = ({ currentModal }) => ({\r\n  currentModal,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ModalSwitch);\r\n","import React, { Component } from 'react';\r\n\r\nimport '../scss/App.scss';\r\n\r\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nimport classNames from \"classnames\";\r\n\r\nclass Snackbar extends Component {\r\n\r\n  onClickHandler = () => {\r\n    this.props.onClickHandler(this.props.data.id);\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.timer = setTimeout(() => {\r\n      this.props.onClickHandler(this.props.data.id);\r\n    }, 2000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.timer);\r\n  }\r\n\r\n  render() {\r\n\r\n    let type = this.props.data.type ? this.props.data.type : '';\r\n    let classes = \"active\" + \" \" + type;\r\n\r\n    return (\r\n      <>\r\n        <div id=\"notification\" className={classes} key={this.props.data.id}>\r\n          {this.props.data.message}<FontAwesomeIcon icon={faTimes} onClick={this.onClickHandler} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Snackbar;\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\n\r\nimport { hideNotification } from \"../ActionsAndReducers/Notification/Notification_ActionCreators\";\r\nimport Snackbar from \"./Snackbar\";\r\n\r\nclass Notifications extends Component {\r\n\r\n  onClickHandler = (id) => {\r\n    this.props.dispatch(hideNotification(id));\r\n  };\r\n\r\n  render() {\r\n\r\n    if (this.props.notifications.length === 0) return false;\r\n\r\n    return (\r\n      <>\r\n        {this.props.notifications.map((data) => {\r\n          return (\r\n            <Snackbar key={data.message}  data={data} onClickHandler={this.onClickHandler} />\r\n          );\r\n        })\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ notifications }) => ({\r\n  notifications,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Notifications);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport { setCurrentViewFromURI } from \"../ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_ActionCreators\"\r\n\r\nimport '../scss/App.scss';\r\n\r\nclass Link extends Component {\r\n\r\n  onClickHandler = (e) => {\r\n\r\n    if (this.props.onClickHandler) this.props.onClickHandler();\r\n\r\n    const aNewTab = e.metaKey || e.ctrlKey;\r\n    const anExternalLink = this.props.href.startsWith('http');\r\n\r\n    if (!aNewTab && !anExternalLink) {\r\n      e.preventDefault();\r\n      this.props.dispatch(setCurrentViewFromURI(this.props.href));\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <span href={this.props.href}\r\n            onClick={!this.props.disabled ? this.onClickHandler : () => false}\r\n            id={this.props.id ? this.props.id : null}\r\n            className={this.props.class ? this.props.class : null}>\r\n\r\n        {this.props.children}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default connect()(Link);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Link from \"../Components/Link\";\r\nimport classNames from \"classnames\";\r\n\r\nimport '../scss/App.scss';\r\nimport {populateWargameStore} from \"../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\nimport {populateMessageTypesDb} from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n\r\nclass UmpireMenu extends Component {\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(populateMessageTypesDb());\r\n    this.props.dispatch(populateWargameStore());\r\n  }\r\n\r\n  render() {\r\n\r\n    let activeGames = this.props.wargame.wargameList.length > 0;\r\n\r\n    let loading = Object.keys(this.props.dbLoading).every((k) => this.props.dbLoading[k] );\r\n\r\n    // check connection\r\n\r\n    if (loading) {\r\n      return (\r\n        <div id=\"loading\">\r\n          <div>\r\n            <div id=\"loader\"></div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div id=\"umpire\" className=\"flex-content-wrapper\">\r\n        <div className=\"flex-content flex-content--fill\">\r\n          <Link href=\"/client/umpireMenu\" class=\"link link--secondary link--large\">Umpire Menu</Link>\r\n          <Link href=\"/client/playerUi\" disabled={!activeGames} class={classNames(\"link\", \"link--secondary\", \"link--large\", {\"link--disabled\": !activeGames})}>Player UI</Link>\r\n          { !activeGames ? <p>At least one wargame needed to access player ui</p> : false }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({wargame, dbLoading}) => ({\r\n  wargame,\r\n  dbLoading,\r\n});\r\n\r\nexport default connect(mapStateToProps)(UmpireMenu);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\nimport _ from \"lodash\";\r\n\r\nimport {\r\n  editWargame,\r\n  duplicateWargame,\r\n} from \"../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nimport {setCurrentViewFromURI} from \"../ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_ActionCreators\";\r\n\r\nimport {\r\n  faClone,\r\n  faPencilAlt,\r\n  faTrash\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {modalAction} from \"../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\n\r\nclass WargameSearchList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageList: this.props.listData,\r\n      searchQuery: this.props.listData,\r\n      searchInput: \"\",\r\n    };\r\n  }\r\n\r\n\r\n  componentWillUpdate(nextProps, nextState, nextContext) {\r\n\r\n    let sameMessagesQuantity = _.difference(nextProps.listData, this.state.messageList).length;\r\n\r\n    if (\r\n      nextProps.listData.length !== this.state.messageList.length ||\r\n      (sameMessagesQuantity !== 0 && this.state.searchInput.length === 0)\r\n    ) {\r\n      this.setState({\r\n        messageList: nextProps.listData\r\n      });\r\n    }\r\n\r\n    if (\r\n      this.state.searchInput.length > 0 &&\r\n      sameMessagesQuantity !== 0\r\n    ) {\r\n      this.filterMessages();\r\n    }\r\n  }\r\n\r\n  setSelectedWargame(name) {\r\n    this.props.dispatch(editWargame(name));\r\n    this.props.dispatch(setCurrentViewFromURI('/client/gameSetup'));\r\n  }\r\n\r\n  duplicateWargame(name) {\r\n    this.props.dispatch(duplicateWargame(name));\r\n  }\r\n\r\n  deleteWargame(name) {\r\n    this.props.dispatch(modalAction.open(\"deleteWargame\", name));\r\n  }\r\n\r\n  filterMessages = (input) => {\r\n\r\n    let value = input ? input.target.value : this.state.searchInput;\r\n\r\n    let searchQuery = this.props.listData.filter(function(db) {\r\n      return db.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n    });\r\n\r\n    this.setState({\r\n      searchQuery,\r\n      searchInput: input ? value : this.state.searchInput\r\n    });\r\n  };\r\n\r\n  displayControls = (activeTitle) => {\r\n    this.setState({\r\n      activeTitle,\r\n    });\r\n  };\r\n\r\n  hideControls = () => {\r\n    this.setState({\r\n      activeTitle: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    var that = this;\r\n\r\n    var list = this.state.searchInput ? this.state.searchQuery : this.state.messageList;\r\n\r\n    return (\r\n      <div className=\"searchlist\">\r\n        <input type=\"text\" className=\"searchlist-input\" key=\"search-templates\" placeholder=\"Search games\" onChange={ this.filterMessages } value={this.state.searchInput} />\r\n        <div className=\"searchlist-list\">\r\n          { list.map(function(db) {\r\n            // let active\r\n            return (\r\n              <span className=\"searchlist-title\" key={db.title} onMouseOver={that.displayControls.bind(that, db.title)} onMouseLeave={that.hideControls}>\r\n                {db.title}\r\n                {that.state.activeTitle === db.title ?\r\n                  <>\r\n                    <FontAwesomeIcon icon={faPencilAlt} onClick={that.setSelectedWargame.bind(that, db.name)} />\r\n                    <FontAwesomeIcon icon={faClone} onClick={that.duplicateWargame.bind(that, db.name)} />\r\n                    <FontAwesomeIcon icon={faTrash} onClick={that.deleteWargame.bind(that, db.name)} />\r\n                  </>\r\n                  : null\r\n                }\r\n              </span>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// empty mapStateToProps is here for react-redux to wire up the dispatch function to props so firing actions is possible.\r\nconst mapStateToProps = () => ({});\r\n\r\n\r\nexport default connect(mapStateToProps)(WargameSearchList);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Link from \"../Components/Link\";\r\n\r\nimport '../scss/App.scss';\r\n// import SearchList from \"../Components/SearchList\";\r\n\r\nimport {\r\n  createNewWargameDB,\r\n  clearWargames,\r\n} from \"../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nimport WargameSearchList from \"../Components/WargameSearchList\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass GameDesignerInterface extends Component {\r\n\r\n  createWargame = () => {\r\n    this.props.dispatch(createNewWargameDB());\r\n  };\r\n\r\n  clearWargames = () => {\r\n    this.props.dispatch(clearWargames());\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"umpire\" className=\"flex-content-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <div className=\"flex-content flex-content--big flex-content--first\">\r\n          <Link href=\"/client/umpireMenu/templates\" class=\"link link--secondary link--large\">Message Templates</Link>\r\n          <Link href=\"/client/umpireMenu/library\" class=\"link link--secondary link--large\">Message Library</Link>\r\n        </div>\r\n        <div className=\"flex-content flex-content--big flex-content--last\">\r\n          <h2>Games</h2>\r\n          <Link\r\n            href=\"/client/gameSetup\"\r\n            class=\"link link--noIcon\"\r\n            onClickHandler={this.createWargame}\r\n          >Create</Link>\r\n          <Link\r\n            href=\"/client/umpireMenu\"\r\n            class=\"link link--noIcon link--secondary\"\r\n            onClickHandler={this.clearWargames}\r\n          >Clear wargames</Link>\r\n          <WargameSearchList key=\"searchlist\"\r\n                             listData={this.props.wargame.wargameList}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// empty mapStateToProps is here for react-redux to wire up the dispatch function to props so firing actions is possible.\r\nconst mapStateToProps = ({wargame}) => ({\r\n  wargame\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(GameDesignerInterface);\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createMessage,\r\n} from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport JSONEditor from '@json-editor/json-editor';\r\n// necessary import for date\r\n// import flatpickr from \"flatpickr\";\r\n\r\nimport '../scss/App.scss';\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSave} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nclass JsonCreator extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.editor = null;\r\n    this.editorPreviewRef = React.createRef();\r\n\r\n    this.state = {\r\n      selectedSchema: ''\r\n    };\r\n  }\r\n\r\n\r\n  componentWillUpdate(nextProps, nextState, nextContext) {\r\n\r\n    if (this.editor && nextProps.umpireMenu.selectedSchemaID !== this.props.umpireMenu.selectedSchemaID) {\r\n      this.editor.destroy();\r\n      this.editor = null;\r\n    }\r\n\r\n    if (\r\n      nextProps.umpireMenu.selectedSchemaID.length > 0 &&\r\n      nextProps.messageTypes &&\r\n      nextProps.messageTypes.messages.length > 0\r\n    ) {\r\n\r\n      if (this.editor) return;\r\n\r\n      this.editor = new JSONEditor(this.editorPreviewRef.current, {\r\n        schema: nextProps.messageTypes.messages.find((mes) => mes._id === nextProps.umpireMenu.selectedSchemaID).details,\r\n        theme: 'bootstrap4'\r\n      });\r\n    }\r\n\r\n    if (\r\n      nextProps.messages.messagePreviewId.length > 0 &&\r\n      nextProps.messageTypes.messages.length > 0 &&\r\n      !nextProps.disabled\r\n    ) {\r\n\r\n      const data = nextProps.messages.messages.find(function(mes) {\r\n        return mes._id.toLowerCase().indexOf(nextProps.messages.messagePreviewId.toLowerCase()) > -1;\r\n      });\r\n      this.editor.setValue(data.details);\r\n    }\r\n\r\n    if (this.props.disabled && this.editor) {\r\n      this.editor.disable();\r\n    }\r\n  }\r\n\r\n\r\n  saveMessage = () => {\r\n    let schema = this.props.messageTypes.messages.find((mes) => mes._id === this.props.umpireMenu.selectedSchemaID).details;\r\n\r\n    this.props.dispatch(createMessage(this.editor.getValue(), {...schema, _id: this.props.umpireMenu.selectedSchemaID}));\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"button-wrap\">\r\n          {!this.props.disabled ? <span onClick={this.saveMessage} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span> : null }\r\n        </div>\r\n          <div id=\"preview-editor\" ref={this.editorPreviewRef}></div>\r\n        <div className=\"button-wrap\">\r\n          {!this.props.disabled ? <span onClick={this.saveMessage} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span> : null }\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, selectedSchema, umpireMenu }) => ({\r\n  messages,\r\n  messageTypes,\r\n  selectedSchema,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(JsonCreator);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\nimport check from \"check-types\";\r\nimport moment from \"moment\";\r\nconst Fragment = React.Fragment;\r\n\r\nclass MessagePreview extends Component {\r\n\r\n  createObjItem(pair) {\r\n    const that = this;\r\n    return <span key={`objItem--${pair[0]}-${pair[1]}`} className=\"group-section\">{ that.deconstructObj(pair[1]) }</span>;\r\n  }\r\n\r\n  createBoolItem(pair) {\r\n    return <span key={`boolItem--${pair[0]}-${pair[1]}`}>{pair[1] ? pair[0] : false}</span>\r\n  }\r\n\r\n  createTimeItem(pair) {\r\n\r\n    return (\r\n      <Fragment key={`dateTime-${pair[1]}`}>\r\n        <h3>{pair[0]}</h3>\r\n        <span>{moment(pair[1]).format('Do MMMM YYYY, HH:mm')}</span>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  createStrItem(pair, withoutName) {\r\n    return <span key={`strItem-${pair[0]}-${pair[1]}`}><b>{pair[0]}: </b>{pair[1]}</span>\r\n  }\r\n\r\n  deconstructArr(pair) {\r\n    const that = this;\r\n    return (\r\n      <Fragment key={`${pair[0]}`}>\r\n        <h3>{pair[0]}</h3>\r\n        {pair[1].map((item) => {\r\n          // CHECK NAME PROP ON EVERY OBJ\r\n          return (\r\n              <span key={`section-${item.name}`}>{ that.deconstructObj(item) }</span>\r\n          );\r\n        })}\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n\r\n  deconstructObj(obj) {\r\n\r\n    const that = this;\r\n    const keyPropPairs = Object.entries(obj);\r\n\r\n    return keyPropPairs.map((pair, i) => {\r\n\r\n      if (check.object(pair[1])) return that.createObjItem(pair);\r\n      if (check.array.of.object(pair[1])) return that.deconstructArr(pair);\r\n      if (check.boolean(pair[1])) return that.createBoolItem(pair);\r\n\r\n      if (moment(pair[1], moment.ISO_8601, true).isValid()) return that.createTimeItem(pair);\r\n\r\n      return that.createStrItem(pair);\r\n\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    if (!this.props.detail) return false;\r\n\r\n    const that = this;\r\n    const keyPropPairs = Object.entries(this.props.detail);\r\n\r\n\r\n    return keyPropPairs.map((pair, i) => {\r\n\r\n      if (i===0) return (\r\n        <Fragment key={`from-${pair[1]}`}>\r\n          <h2>{pair[1]}</h2>\r\n          { this.props.from ? <span key={'from'}>From: {this.props.from}</span> : false }\r\n        </Fragment>\r\n      );\r\n\r\n      if (check.object(pair[1])) return that.createObjItem(pair);\r\n      if (check.array.of.object(pair[1])) return that.deconstructArr(pair);\r\n      if (check.boolean(pair[1])) return that.createBoolItem(pair);\r\n      if (moment(pair[1], moment.ISO_8601, true).isValid()) return that.createTimeItem(pair);\r\n\r\n      return (\r\n        <Fragment key={`${pair[0]}-${pair[1]}`}>\r\n          <h3>{pair[0]}</h3>\r\n          <span>{pair[1]}</span>\r\n        </Fragment>\r\n      )\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport default connect()(MessagePreview);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\n\r\nimport moment from \"moment\";\r\nimport classNames from \"classnames\";\r\nimport {PropTypes} from \"prop-types\";\r\n\r\nclass SearchList extends Component {\r\n\r\n  setSelected = (item) => {\r\n    this.props.setSelected(item);\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    var that = this;\r\n\r\n    return (\r\n      <div className=\"searchlist\">\r\n        <input type=\"text\" className=\"searchlist-input\" key=\"search-templates\" placeholder={this.props.placeholder} onChange={ this.props.filter } value={this.props.searchQuery} />\r\n        <div className=\"searchlist-list\">\r\n          { this.props.listData.map(function(item) {\r\n\r\n            // onClick handlers should not contain instantiating () to pass a specific value, .bind can be used here this is a simpler\r\n            // ES5 way to pass properties to click handlers from arrays, another option is to build a sub-component but I don't like\r\n            // how the data moves back and forth, it breaks Reacts initial idea of 1 way data flow.\r\n\r\n            let active = item._id === that.props.selected ? 'active' : null;\r\n\r\n            let title = item.details.title;\r\n            let date = moment(item.lastUpdated).format('DD/MM/YY');\r\n            return <span className={classNames({\"searchlist-title\": true, active})} href=\"#\" onClick={that.setSelected.bind(that, item)} key={item._id}>{title} - {date}</span>\r\n          })\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// empty mapStateToProps is here for react-redux to wire up the dispatch function to props so firing actions is possible.\r\nconst mapStateToProps = ({ currentViewURI, umpireMenu }) => ({\r\n  currentViewURI,\r\n  umpireMenu\r\n});\r\n\r\nSearchList.propTypes = {\r\n  listData: PropTypes.array.isRequired,\r\n  filter: PropTypes.func.isRequired,\r\n  selected: PropTypes.string.isRequired,\r\n  setSelected: PropTypes.func.isRequired,\r\n  searchQuery: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nexport default connect(mapStateToProps)(SearchList);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Link from \"../Components/Link\";\r\n\r\nimport {\r\n  getAllMessageTypes,\r\n  duplicateMessageType,\r\n} from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n\r\nimport {\r\n  getAllMessages,\r\n  duplicateMessage, getSingleMessage\r\n} from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport { modalAction } from \"../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\n\r\n\r\nimport JsonCreator from \"../Components/JsonCreator\";\r\nimport MessagePreview from \"../Components/MessagePreview\";\r\nimport '../scss/App.scss';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPencilAlt, faClone, faTrash, faArrowLeft,faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport SearchList from \"../Components/SearchList\";\r\nimport {setSelectedSchema} from \"../ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators\";\r\n\r\nclass UmpireMenu extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let creatorType = this.props.currentViewURI.split('/')[3];\r\n\r\n    this.state = {\r\n      searchQuery: '',\r\n      creatorType: creatorType,\r\n      messageList: creatorType === 'templates' ? this.props.messageTypes.messages : this.props.messages.messages,\r\n    };\r\n\r\n    this.buildMessageBoard();\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(setSelectedSchema(\"\"));\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.state.searchQuery.length === 0) {\r\n      // only on page load\r\n      this.setState({\r\n        messageList: this.state.creatorType === 'templates' ? nextProps.messageTypes.messages : nextProps.messages.messages,\r\n      });\r\n    }\r\n\r\n    if (nextProps.messages.messages.length !== this.props.messages.messages.length) setTimeout(this.filterMessages, 1); // setTimeout to wait one tick to allow messageList to update\r\n  }\r\n\r\n\r\n  buildMessageBoard() {\r\n\r\n    switch (this.state.creatorType) {\r\n\r\n      case 'templates':\r\n        // get template data action\r\n        this.props.dispatch(getAllMessageTypes());\r\n        break;\r\n\r\n      case 'library':\r\n        // get library data action\r\n        this.props.dispatch(getAllMessages());\r\n        break;\r\n\r\n      default:\r\n        // throw developer an error\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  setSelectedSchemaId = (item) => {\r\n\r\n    switch (this.state.creatorType) {\r\n      case 'templates':\r\n        this.props.dispatch(setSelectedSchema(item._id));\r\n        break;\r\n\r\n      case 'library':\r\n        this.props.dispatch(setSelectedSchema(item.schema._id));\r\n        this.props.dispatch(getSingleMessage(item._id));\r\n        break;\r\n\r\n      default:\r\n        console.log('error');\r\n        break;\r\n    }\r\n  };\r\n\r\n\r\n  // event listener functions from the DOM will lose scope of this to the React Class unless stated as an arrow function\r\n  // or this is bound to them within the constructor like.. this.filterMessages = this.filterMessages.bind(this);\r\n  // arrow functions are es6 syntax and preferable if babel compiler can compile them. - They have the scope of where they're\r\n  // defined unlike a normal function that has it's own scope.\r\n  filterMessages = (input) => {\r\n\r\n    let value = input ? input.target.value : this.state.searchQuery;\r\n\r\n    let newState;\r\n\r\n    switch (this.state.creatorType) {\r\n      case 'templates':\r\n        newState = this.props.messageTypes.messages.filter(function(mes) {\r\n          return mes.details.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n        });\r\n        break;\r\n\r\n      case 'library':\r\n        newState = this.props.messages.messages.filter(function(mes) {\r\n          return mes.details.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n        });\r\n        break;\r\n\r\n      default:\r\n        newState = [];\r\n        break;\r\n    }\r\n\r\n    this.setState({\r\n      messageList: newState,\r\n      searchQuery: value\r\n    });\r\n  };\r\n\r\n\r\n  createSearchListSection() {\r\n\r\n    switch (this.state.creatorType) {\r\n\r\n      case 'templates':\r\n\r\n        return [\r\n            <Link href=\"/client/messageCreator/create/template\" key=\"templates\" class=\"link\"><FontAwesomeIcon icon={faPlus} />Create new template</Link>,\r\n            <SearchList key=\"searchlist\"\r\n                        listData={this.state.messageList}\r\n                        searchQuery={this.state.searchQuery}\r\n                        filter={this.filterMessages}\r\n                        selected={this.props.umpireMenu.selectedSchemaID}\r\n                        setSelected={this.setSelectedSchemaId}\r\n                        placeholder={'Select template'}\r\n            />\r\n        ];\r\n\r\n      case 'library':\r\n\r\n        return [\r\n            <Link href=\"/client/messageCreator/create/message\" key=\"messages\" class=\"link\"><FontAwesomeIcon icon={faPlus} />Create new Message</Link>,\r\n            <SearchList key=\"searchlist\"\r\n                        listData={this.state.messageList}\r\n                        searchQuery={this.state.searchQuery}\r\n                        filter={this.filterMessages}\r\n                        selected={this.props.messages.messagePreviewId}\r\n                        setSelected={this.setSelectedSchemaId}\r\n                        placeholder={'Select template'}\r\n            />\r\n        ];\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  createMessagesActions() {\r\n    return this.props.messages.messagePreviewId.length > 0 ?\r\n      <>\r\n        <Link class=\"link link--secondary\" href={this.state.creatorType === 'templates' ? \"/messageCreator/edit/template\" : \"/messageCreator/edit/message\"}><FontAwesomeIcon icon={faPencilAlt} />Edit</Link>\r\n        <span className=\"link link--secondary\" onClick={this.duplicateMessage}><FontAwesomeIcon icon={faClone} />Duplicate</span>\r\n        <span className=\"link link--secondary\" onClick={this.deleteMessage}><FontAwesomeIcon icon={faTrash} />Delete</span>\r\n      </>\r\n      :\r\n      null;\r\n  }\r\n\r\n\r\n  createTemplatesActions() {\r\n    return this.props.umpireMenu.selectedSchemaID.length > 0 ?\r\n      <>\r\n        <Link class=\"link link--secondary\" href={this.state.creatorType === 'templates' ? \"/messageCreator/edit/template\" : \"/messageCreator/edit/message\"}><FontAwesomeIcon icon={faPencilAlt} />Edit</Link>\r\n        <span className=\"link link--secondary\" onClick={this.duplicateTemplate}><FontAwesomeIcon icon={faClone} />Duplicate</span>\r\n        <span className=\"link link--secondary\" onClick={this.deleteTemplate}><FontAwesomeIcon icon={faTrash} />Delete</span>\r\n      </>\r\n      :\r\n      null;\r\n  };\r\n\r\n\r\n  duplicateTemplate = () => {\r\n    this.props.dispatch(duplicateMessageType(this.props.umpireMenu.selectedSchemaID))\r\n  };\r\n\r\n\r\n  deleteTemplate = () => {\r\n    this.props.dispatch(modalAction.open(\"delete\"));\r\n  };\r\n\r\n\r\n  duplicateMessage = () => {\r\n    this.props.dispatch(duplicateMessage(this.props.messages.messagePreviewId));\r\n  };\r\n\r\n\r\n  deleteMessage = () => {\r\n    this.props.dispatch(modalAction.open(\"delete\"));\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message {this.state.creatorType}</h1>\r\n        <div className=\"flex-content-wrapper\">\r\n          <div id=\"selection\" className=\"flex-content\">\r\n            { this.createSearchListSection() }\r\n          </div>\r\n          <div id=\"preview\" className=\"flex-content flex-content--big\">\r\n            <p className=\"heading--sml\">Preview</p>\r\n            { this.state.creatorType === 'templates' ?\r\n              <JsonCreator id=\"preview\"\r\n                           disabled={true}\r\n                           previewForm={true}\r\n              />\r\n            :\r\n              <div className=\"message-preview\">\r\n                <MessagePreview detail={this.props.messages.messagePreview.details} />\r\n              </div>\r\n            }\r\n          </div>\r\n          <div id=\"function\" className=\"flex-content flex-content--sml\">\r\n            <p className=\"heading--sml\">Actions</p>\r\n\r\n            {this.state.creatorType === 'templates' ?\r\n              this.createTemplatesActions()\r\n            :\r\n              this.createMessagesActions()\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messageTypes, messages, currentViewURI, umpireMenu }) => ({\r\n  messageTypes,\r\n  messages,\r\n  currentViewURI,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(UmpireMenu);\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  updateMessage,\r\n} from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport JSONEditor from '@json-editor/json-editor';\r\nimport '../scss/App.scss';\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSave} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nclass JsonCreator extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.editor = null;\r\n    this.editorPreviewRef = React.createRef();\r\n\r\n    this.state = {\r\n      selectedSchema: ''\r\n    };\r\n  }\r\n\r\n\r\n  componentWillUpdate(nextProps, nextState, nextContext) {\r\n\r\n    if (this.editor && nextProps.umpireMenu.selectedSchemaID !== this.props.umpireMenu.selectedSchemaID) {\r\n      this.editor.destroy();\r\n      this.editor = null;\r\n    }\r\n\r\n    // check logic\r\n    if (\r\n      nextProps.messages.messagePreviewId.length > 0 ||\r\n      nextProps.umpireMenu.selectedSchemaID.length > 0\r\n      // nextProps.messages.messagePreviewId.length > 0 &&\r\n      // nextProps.umpireMenu.selectedSchemaID.length > 0\r\n    ) {\r\n\r\n      if (this.editor) return;\r\n\r\n      this.editor = new JSONEditor(this.editorPreviewRef.current, {\r\n        schema: nextProps.messages.messagePreview.schema,\r\n        theme: 'bootstrap4'\r\n      });\r\n    }\r\n\r\n    if (nextProps.messages.messagePreview.details) {\r\n      this.editor.setValue(nextProps.messages.messagePreview.details);\r\n    }\r\n\r\n    if (this.props.disabled && this.editor) {\r\n      this.editor.disable();\r\n    }\r\n  }\r\n\r\n\r\n  saveMessage = () => {\r\n    this.props.dispatch(updateMessage(this.editor.getValue(), this.props.messages.messagePreviewId));\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"button-wrap\">\r\n          {!this.props.disabled ? <span onClick={this.saveMessage} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span> : null }\r\n        </div>\r\n          <div id=\"preview-editor\" ref={this.editorPreviewRef}></div>\r\n        <div className=\"button-wrap\">\r\n          {!this.props.disabled ? <span onClick={this.saveMessage} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span> : null }\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, selectedSchema, umpireMenu }) => ({\r\n  messages,\r\n  messageTypes,\r\n  selectedSchema,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(JsonCreator);\r\n","import React, { Component } from 'react';\r\nimport '../scss/App.scss';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport JsonEditor from \"../Components/JsonEditor\";\r\n\r\nimport { getAllMessageTypes } from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n// import { resetMessagePreview } from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport Link from \"../Components/Link\";\r\n// import SearchList from \"../Components/SearchList\";\r\n// import {setCurrentViewFromURI} from \"../ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_ActionCreators\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faArrowLeft} from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass EditMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageToEdit: this.props.messages.messagePreviewId,\r\n      messageList: this.props.messages.messages, // set to state for filter, without filter don't set props to state to avoid bugs\r\n      searchInput: '',\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(getAllMessageTypes());\r\n  }\r\n\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.props.messages.messages.length !== nextProps.messages.messages.length) {\r\n      this.setState({\r\n        messageToEdit: nextProps.messages.messagePreviewId,\r\n        messageList:  nextProps.messages.messages\r\n      });\r\n    }\r\n  }\r\n\r\n  filterMessages = (input) => {\r\n\r\n    let value = input.target.value;\r\n\r\n    let newState = this.props.messages.messages.filter(function(mes) {\r\n      return mes.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n    });\r\n\r\n    this.setState({\r\n      messageList: newState,\r\n      searchInput: value.toLowerCase()\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message library</h1>\r\n        <div className=\"flex-content-wrapper\">\r\n          <div id=\"preview\" className=\"flex-content flex-content--solo-item\">\r\n            <JsonEditor id=\"preview\"\r\n                        disabled={ false }\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes }) => ({\r\n  messages,\r\n  messageTypes\r\n});\r\n\r\nexport default connect(mapStateToProps)(EditMessage);\r\n","import React, { Component } from 'react';\r\nimport '../scss/App.scss';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport JsonCreator from \"../Components/JsonCreator\";\r\n\r\nimport {getAllMessageTypes} from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\nimport { resetMessagePreview } from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport Link from \"../Components/Link\";\r\nimport SearchList from \"../Components/SearchList\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {setSelectedSchema} from \"../ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators\";\r\n\r\nclass EditMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageList: this.props.messageTypes.messages, // set to state for filter, without filter don't set props to state to avoid bugs\r\n      searchQuery: '',\r\n    };\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(resetMessagePreview());\r\n    this.props.dispatch(getAllMessageTypes());\r\n  };\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.props.messageTypes.messages.length !== nextProps.messageTypes.messages.length) {\r\n      this.setState({\r\n        messageList: nextProps.messageTypes.messages\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  filterMessages = (input) => {\r\n\r\n    let value = input.target.value;\r\n\r\n    let newState = this.props.messageTypes.messages.filter(function(mes) {\r\n      return mes.details.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n    });\r\n\r\n    this.setState({\r\n      messageList: newState,\r\n      searchQuery: value\r\n    });\r\n  };\r\n\r\n  setSelectedSchemaId = (item) => {\r\n    this.props.dispatch(setSelectedSchema(item._id));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message library</h1>\r\n         <div className=\"flex-content-wrapper\">\r\n          <div id=\"selection\" className=\"flex-content\">\r\n            <SearchList key=\"search-templates\"\r\n                        listData={this.state.messageList}\r\n                        searchQuery={this.state.searchQuery}\r\n                        filter={this.filterMessages}\r\n                        selected={this.props.umpireMenu.selectedSchemaID}\r\n                        setSelected={this.setSelectedSchemaId}\r\n                        placeholder={'Select template'}\r\n            />\r\n          </div>\r\n          <div id=\"preview\" className=\"flex-content flex-content--big\">\r\n            <JsonCreator id=\"preview\" disabled={false} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, umpireMenu, currentViewURI }) => ({\r\n  messages,\r\n  messageTypes,\r\n  umpireMenu,\r\n  currentViewURI\r\n});\r\n\r\nexport default connect(mapStateToProps)(EditMessage);\r\n","import JSONEditor from '@json-editor/json-editor'\r\n// -------- Editor class ---------------------------------------------------\r\n\r\n// create a JSON Editor, elementId is the id in which to render the editor\r\nfunction Editor(elementId) {\r\n    this.jsonEditor = null;\r\n    this.renderZone = typeof elementId === \"string\" ? document.getElementById(elementId) : elementId.current;\r\n}\r\n\r\n// Destroy editor, and remove it from view\r\nEditor.prototype.destroy = function() {\r\n    if(this.jsonEditor) {\r\n        this.jsonEditor.destroy();\r\n        this.jsonEditor = null;\r\n    }\r\n}\r\n\r\n// Recreate a new editor based on the given schema and start value\r\n// If schema is undefined, the editor is not recreated, but only destroyed\r\nEditor.prototype.updateSchema = function(schema) {\r\n    this.destroy();\r\n    this.jsonEditor = new JSONEditor(this.renderZone, { schema: schema });\r\n}\r\n\r\n// Validate JSON\r\nEditor.prototype.validate = function() {\r\n    return this.jsonEditor.validate();\r\n}\r\n\r\n// Get generated JSON\r\nEditor.prototype.getJSON = function() {\r\n    return this.jsonEditor.getValue();\r\n}\r\n\r\n// --------------- PreviewEditor subclass ------------------------------------\r\n\r\n// create a JSON Editor that doesn't allow specifying additional properties,\r\n// but only those specified in the schema can be set.\r\n// elementId is the id in which to render the editor,\r\nexport function PreviewEditor(elementId) {\r\n    Editor.call(this, elementId);\r\n}\r\n\r\n// Inherit Editor methods\r\nPreviewEditor.prototype = Object.create(Editor.prototype);\r\n\r\n// After `PreviewEditor.prototype = Object.create(Editor.prototype)` instruction,\r\n// PreviewEditor.prototype is a copy of Editor.prototype,\r\n// so the `constructor` property of PreviewEditor.prototype is Editor,\r\n// but a PreviewEditor object is created with the PreviewEditor constructor,\r\n// so we override the `constructor` property of PreviewEditor.prototype to PreviewEditor\r\nObject.defineProperty(PreviewEditor.prototype, 'constructor', {\r\n    value: PreviewEditor,\r\n    enumerable: false, // so that it does not appear in 'for in' loop\r\n    writable: true\r\n});\r\n\r\nPreviewEditor.prototype.updateSchema = function(schema) {\r\n    this.destroy();\r\n    this.jsonEditor = new JSONEditor(this.renderZone, {\r\n        schema: schema,\r\n        no_additional_properties: true\r\n    });\r\n}\r\n\r\n\r\n// --------------- SchemaEditor subclass -------------------------------------\r\n\r\n// create a JSON Editor for a JSON Schema, it adds a save button\r\n// to save the Schema to a file, and also\r\n// makes the 'Properties' buttons distinguishable to avoid confusion between\r\n// schema properties and object properties.\r\n// elementId is the id in which to render the editor,\r\nexport function SchemaEditor(elementId) {\r\n    Editor.call(this, elementId);\r\n\r\n    // Check whether the node is a properties button for an object,\r\n    // and not for the schema of an object named properties\r\n    var isObjectPropertiesButton = function(node) {\r\n        // Does the path end in '.properties'?\r\n        if(node.matches('div[data-schemapath$=\".properties\"] > h3 > div > button.json-editor-btntype-properties')) {\r\n            var containingDiv = node.parentElement.parentElement.parentElement;\r\n            var span = containingDiv.querySelector('h3 > span');\r\n\r\n            // Is it an object properties or a property named properties?\r\n            if(span && span.innerText === 'properties') {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    this.observer = new MutationObserver(function(mutationsList, observer) {\r\n        for(var mutation of mutationsList) {\r\n            mutation.addedNodes.forEach(function(node) {\r\n                if(node.nodeType === 1) {\r\n                    if(isObjectPropertiesButton(node)) {\r\n                        node.querySelector('span').innerText = 'Add/Remove';\r\n                    }\r\n                    else if(node.matches('button.json-editor-btntype-properties')) {\r\n                        // For other properties buttons, remove the 'Properties' label,\r\n                        // and use a cog as icon\r\n                        var icon = node.querySelector('i');\r\n                        icon.classList.remove('fa-pen');\r\n                        icon.classList.add('fa-cog');\r\n\r\n                        var span = node.querySelector('span');\r\n                        span.innerText = '';\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    this.observer.observe(this.renderZone, { childList: true, subtree: true });\r\n}\r\n\r\n// Inherit Editor methods\r\nSchemaEditor.prototype = Object.create(Editor.prototype);\r\n\r\n// After `SchemaEditor.prototype = Object.create(Editor.prototype)` instruction,\r\n// SchemaEditor.prototype is a copy of Editor.prototype,\r\n// so the `constructor` property of SchemaEditor.prototype is Editor,\r\n// but a SchemaEditor object is created with the SchemaEditor constructor,\r\n// so we override the `constructor` property of SchemaEditor.prototype to SchemaEditor\r\nObject.defineProperty(SchemaEditor.prototype, 'constructor', {\r\n    value: SchemaEditor,\r\n    enumerable: false, // so that it does not appear in 'for in' loop\r\n    writable: true\r\n});\r\n\r\n// Override the updateSchema function\r\nSchemaEditor.prototype.updateSchema = function(schema) {\r\n    this.destroy();\r\n\r\n    // Add extra validation logic for integer Schemas that use the `range` format.\r\n    // For integer Schemas that use the `range` format we require that minimum and maximum properties are set, too.\r\n    var range_integer_validator = function(schema, value, path) {\r\n        var errors = [];\r\n        if(value !== null && value.type === 'integer' && value.format === 'range') {\r\n            if(typeof value.minimum === 'undefined' || typeof value.maximum === 'undefined') {\r\n                errors.push({\r\n                    path: path,\r\n                    property: 'format',\r\n                    message: 'The range format requires that you specify both minimum and maximum properties, too.'\r\n                });\r\n            }\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    // Check that if minimum and maximum are specified, minimum <= maximum\r\n    var min_max_consistence_validator = function(schema, value, path) {\r\n        var errors = [];\r\n        if(value !== null && (value.type === 'integer' || value.type === 'number')) {\r\n            if(typeof value.minimum !== 'undefined' && typeof value.minimum !== 'undefined' && value.minimum > value.maximum) {\r\n                errors.push({\r\n                    path: path,\r\n                    property: 'maximum',\r\n                    message: 'The maximum value must be greater than or equal than the minimum value.'\r\n                });\r\n            }\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    // Recreate the JSON-Editor\r\n    this.jsonEditor = new JSONEditor(this.renderZone, {\r\n        schema: schema,\r\n        custom_validators: [ range_integer_validator, min_max_consistence_validator ]\r\n    });\r\n\r\n\r\n    // Add a save button\r\n    var filename = 'schema.json';\r\n    var saveButtonLabel = 'Save';\r\n\r\n    this.jsonEditor.on('ready', function() {\r\n        var button = this.root.getButton(saveButtonLabel, 'save', saveButtonLabel);\r\n        var button_holder = this.root.theme.getHeaderButtonHolder();\r\n        button_holder.appendChild(button);\r\n        this.root.header.parentNode.insertBefore(button_holder, this.root.header.nextSibling);\r\n\r\n        var jsonEditor = this;\r\n        button.addEventListener('click', function(e) {\r\n            e.preventDefault();\r\n            var contents = jsonEditor.getValue();\r\n            var blob = new Blob([JSON.stringify(contents, null, 2)], {\r\n                type: \"application/json;charset=utf-8\"\r\n            });\r\n\r\n            if(window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n                window.navigator.msSaveOrOpenBlob(blob, filename);\r\n            }\r\n            else {\r\n                var a = document.createElement('a');\r\n                a.download = filename;\r\n                a.href = URL.createObjectURL(blob);\r\n                a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n\r\n                a.dispatchEvent(new MouseEvent('click', {\r\n                    'view': window,\r\n                    'bubbles': true,\r\n                    'cancelable': false\r\n                }));\r\n            }\r\n        }, false);\r\n    });\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Card, CardHeader, CardBody, CardFooter } from 'reactstrap';\r\nimport { SchemaEditor } from './json-schema-editor/editor';\r\nimport PropTypes from 'prop-types';\r\nimport JSONEditor from '@json-editor/json-editor';\r\n\r\nclass JsonSchemaEditor extends Component {\r\n\r\n  constructor(props, content) {\r\n    super(props, content);\r\n\r\n    this.schemaEditor = null;\r\n    this.editorBox = React.createRef();\r\n    this.onChange = this.onChange.bind(this);\r\n    this.updateEditor = this.updateEditor.bind(this);\r\n    this.saved = \"\";\r\n    this.value = this.props.defaultValue;\r\n  }\r\n\r\n  onChange(newValue, e) {\r\n    const errors = this.schemaEditor.validate();\r\n    console.log(errors);\r\n    if(errors.length) {\r\n      alert('Invalid schema');\r\n    }\r\n    else {\r\n      if(this.props.onChange) {\r\n        this.value = this.schemaEditor.jsonEditor.getValue();\r\n        this.props.onChange(this.schemaEditor.getJSON());\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.schemaEditor = new SchemaEditor(this.editorBox);\r\n    this.updateEditor(this.props.schema, this.props.options);\r\n  }\r\n\r\n  componentWillReceiveProps({schema, options}) {\r\n    this.updateEditor(schema, options);\r\n  }\r\n\r\n  updateEditor(schema, options) {\r\n    try {\r\n      const newJson = JSON.stringify(schema);\r\n      if(newJson !== this.save || options.counter !== this.props.options.counter) {\r\n\r\n        JSONEditor.defaults.options.object_layout = options.layout;\r\n        JSONEditor.defaults.options = {\r\n          ...JSONEditor.defaults.options,\r\n          ...options.booleanOptions\r\n        };\r\n\r\n        this.save = newJson;\r\n        this.schemaEditor.updateSchema(schema);\r\n        this.schemaEditor.jsonEditor.setValue(this.value);\r\n        this.schemaEditor.jsonEditor.on('change', this.onChange);\r\n      }\r\n    }\r\n    catch(err) {\r\n      alert('Invalid json schema');\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          Schema Editor\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div id=\"schema-editor\" ref={this.editorBox} />\r\n        </CardBody>\r\n        <CardFooter>\r\n        </CardFooter>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nJsonSchemaEditor.propTypes = {\r\n  schema: PropTypes.object.isRequired,\r\n  onChange: PropTypes.func\r\n};\r\n\r\nexport default JsonSchemaEditor;\r\n","import React, { Component } from 'react';\r\nimport { Card, CardHeader, CardBody, CardFooter } from 'reactstrap';\r\nimport { PreviewEditor } from './json-schema-editor/editor';\r\n\r\nclass EditorPreview extends Component {\r\n\r\n  constructor(props, content) {\r\n    super(props, content);\r\n\r\n    this.previewBox = React.createRef();\r\n    this.editorPreview = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.editorPreview = new PreviewEditor(this.previewBox);\r\n  }\r\n\r\n  componentWillReceiveProps({ schema }) {\r\n    this.editorPreview.destroy();\r\n    if (schema !== null) this.editorPreview.updateSchema(schema);\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          Editor Preview\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div id='editor-preview' ref={this.previewBox}/>\r\n        </CardBody>\r\n        <CardFooter>\r\n          The Editor Preview will be updated as you make changes in the Schema Editor\r\n        </CardFooter>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditorPreview;\r\n","import React, { Component } from 'react';\r\nimport jsonMetaSchema from './data.json';\r\nimport JSONEditor from '@json-editor/json-editor';\r\nimport Editor from './jsonEditor';\r\nimport Preview from './editorPreview';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\nimport { setPreviewSchema } from \"../../ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass SchemaEditor extends Component {\r\n\r\n  constructor(props, content) {\r\n    super(props, content);\r\n\r\n    JSONEditor.defaults.options.iconlib = \"fontawesome5\";\r\n    JSONEditor.defaults.options.theme   = 'bootstrap4';\r\n    this.updateMetaSchema = this.updateMetaSchema.bind(this);\r\n    this.updatePreviewSchema = this.updatePreviewSchema.bind(this);\r\n    this.updateOptions = this.updateOptions.bind(this);\r\n\r\n    this.schemaEditor = null;\r\n    this.editorPreview = null;\r\n\r\n    this.defaultValue = {\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"title\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"Date\": {\r\n          \"type\": \"string\",\r\n          \"format\": \"datetime-local\",\r\n        },\r\n        \"Status\": {\r\n          \"type\": \"string\",\r\n          \"enum\": [\r\n            \"Minor\",\r\n            \"Major\",\r\n            \"Critical\"\r\n          ]\r\n        },\r\n        \"Description\": {\r\n          \"type\": \"string\",\r\n          \"format\": \"textarea\",\r\n        }\r\n      },\r\n      \"title\": \"Machinery Failure\",\r\n      \"format\": \"grid\"\r\n    };\r\n\r\n\r\n    if (this.props.schemaId) {\r\n      this.defaultValue = this.props.messageTypes.messages.find((mes) => mes._id === this.props.schemaId).details;\r\n    }\r\n\r\n\r\n    this.state = {\r\n      metaSchema: jsonMetaSchema,\r\n      previewSchema: null,\r\n      options: {\r\n        layout: JSONEditor.defaults.options.object_layout,\r\n        booleanOptions: {}\r\n      }\r\n    }\r\n  }\r\n\r\n  updatePreviewSchema(schema) {\r\n    console.log(\"preview update\");\r\n    this.setState({previewSchema: schema});\r\n\r\n    this.props.dispatch(setPreviewSchema(schema));\r\n  }\r\n\r\n  updateOptions(options) {\r\n    console.log(\"options update\");\r\n    this.setState({options: options});\r\n  }\r\n\r\n  updateMetaSchema(schema) {\r\n    console.log(\"editor update\");\r\n    this.setState({metaschema: schema});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"flex-content flex-content--left50\">\r\n          <Editor\r\n            schema={this.state.metaSchema}\r\n            onChange={this.updatePreviewSchema}\r\n            options={this.state.options}\r\n            defaultValue={this.defaultValue}\r\n          />\r\n        </div>\r\n        <div className=\"flex-content flex-content--right50\">\r\n          <Preview schema={this.state.previewSchema}/>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ umpireMenu, }) => ({\r\n  umpireMenu,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SchemaEditor);\r\n","import React, { Component } from 'react';\r\nimport '../scss/App.scss';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getAllMessageTypes,\r\n  updateMessageType } from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n\r\nimport { resetMessagePreview } from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport Link from \"../Components/Link\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport SchemaEditor from \"../Components/jsonSchemaEditor/index\";\r\n\r\nclass EditMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageList: this.props.messageTypes.messages, // set to state for filter, without filter don't set props to state to avoid bugs\r\n      searchInput: '',\r\n    };\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(resetMessagePreview());\r\n    this.props.dispatch(getAllMessageTypes());\r\n  };\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.props.messageTypes.messages.length !== nextProps.messageTypes.messages.length) {\r\n      this.setState({\r\n        messageList: nextProps.messageTypes.messages\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  filterMessages = (input) => {\r\n\r\n    let value = input.target.value;\r\n\r\n    let newState = this.props.messageTypes.messages.filter(function(mes) {\r\n      return mes.details.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n    });\r\n\r\n    this.setState({\r\n      messageList: newState,\r\n      searchInput: value.toLowerCase()\r\n    });\r\n  };\r\n\r\n  updateSchema = () => {\r\n    this.props.dispatch(updateMessageType(this.props.umpireMenu.previewSchema, this.props.umpireMenu.selectedSchemaID));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message template</h1>\r\n        <div className=\"button-wrap\">\r\n          <span onClick={this.updateSchema} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span>\r\n        </div>\r\n        <div className=\"flex-content-wrapper\">\r\n          <SchemaEditor\r\n            schemaId={this.props.umpireMenu.selectedSchemaID}\r\n            messageTypes={this.props.messageTypes}\r\n          />\r\n        </div>\r\n        <div className=\"button-wrap\">\r\n          <span onClick={this.updateSchema} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, currentViewURI, umpireMenu }) => ({\r\n  messages,\r\n  messageTypes,\r\n  currentViewURI,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(EditMessage);\r\n","import React, { Component } from 'react';\r\nimport '../scss/App.scss';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getAllMessageTypes,\r\n  createMessageType\r\n} from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n\r\nimport { resetMessagePreview } from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport Link from \"../Components/Link\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport SchemaEditor from \"../Components/jsonSchemaEditor/index\";\r\n\r\nclass EditMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageList: this.props.messageTypes.messages, // set to state for filter, without filter don't set props to state to avoid bugs\r\n      searchInput: '',\r\n    };\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(resetMessagePreview());\r\n    this.props.dispatch(getAllMessageTypes());\r\n  };\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.props.messageTypes.messages.length !== nextProps.messageTypes.messages.length) {\r\n      this.setState({\r\n        messageList: nextProps.messageTypes.messages\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  saveSchema = () => {\r\n    this.props.dispatch(createMessageType(this.props.umpireMenu.previewSchema));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message template</h1>\r\n        <div className=\"button-wrap\">\r\n          <span onClick={this.saveSchema} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span>\r\n        </div>\r\n        <div className=\"flex-content-wrapper\">\r\n          <SchemaEditor />\r\n        </div>\r\n        <div className=\"button-wrap\">\r\n          <span onClick={this.saveSchema} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, currentViewURI, umpireMenu }) => ({\r\n  messages,\r\n  messageTypes,\r\n  currentViewURI,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(EditMessage);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport '../../scss/App.scss';\r\n\r\nclass TextInput extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      type: this.props.options.numInput ? \"number\" : \"text\",\r\n    };\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.props.updateStore(e.target.value);\r\n  };\r\n\r\n  render() {\r\n\r\n    let invalid = !this.props.validInput ? 'invalid-input' : '';\r\n\r\n    return (\r\n      <>\r\n        <input className={invalid} id={this.props.id ? this.props.id : null} type={this.state.type} onChange={this.onChange} value={this.props.data ? this.props.data : \"\"} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nTextInput.propTypes = {\r\n  updateStore: PropTypes.func.isRequired,\r\n  options: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nexport default TextInput;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport '../../scss/App.scss';\r\n\r\nclass DropdownInput extends Component {\r\n\r\n  onChange = (e) => {\r\n    console.log(e.target.value);\r\n    this.props.updateStore(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <select disabled={this.props.disabled} value={this.props.data ? this.props.data : \"placeholder\"} onChange={this.onChange} className={this.props.className || null}>\r\n        <option value=\"placeholder\" disabled={true}>{this.props.placeholder}</option>\r\n        { this.props.selectOptions.map((item, i) => {\r\n          return (<option key={`${item.value}${item.option}`} value={item.value}>{item.option}</option>)\r\n        })}\r\n      </select>\r\n    );\r\n  }\r\n}\r\n\r\nDropdownInput.propTypes = {\r\n  updateStore: PropTypes.func.isRequired,\r\n  selectOptions: PropTypes.array.isRequired,\r\n  // options: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nexport default DropdownInput;\r\n","import React, { Component } from 'react';\r\n\r\nclass Row extends Component {\r\n\r\n  render() {\r\n\r\n    var classes = this.props.className ? this.props.className+\" \"+\"flex-content flex-content--row\" : \"flex-content flex-content--row\";\r\n\r\n    return (\r\n      <div className={classes}>\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Row;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport '../../scss/App.scss';\r\n\r\nclass TextArea extends Component {\r\n\r\n  onChange = (e) => {\r\n    this.props.updateStore(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <textarea value={this.props.data} onChange={this.onChange} style={{resize: \"none\"}}></textarea>\r\n    );\r\n  }\r\n}\r\n\r\nTextArea.propTypes = {\r\n  updateStore: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default TextArea;\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport TextInput from \"../../Components/Inputs/TextInput\";\r\nimport DropdownInput from \"../../Components/Inputs/DropdownInput\";\r\nimport Row from \"../../Components/Layout/Row\";\r\n\r\nimport {\r\n  setGameData,\r\n  saveSettings,\r\n} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\nimport TextArea from \"../../Components/Inputs/TextArea\";\r\n\r\nclass SettingsTab extends Component {\r\n\r\n  updateDescription = (value) => {\r\n    this.props.dispatch(setGameData({gameDescription: value}));\r\n  };\r\n\r\n  updateSpatialRepresentation = (value) => {\r\n    this.props.dispatch(setGameData({spatialRepresentation: value}));\r\n  };\r\n\r\n  updatePlanningInterval = (value) => {\r\n    this.props.dispatch(setGameData({planningInterval: value}));\r\n  };\r\n\r\n  updateReplayInterval = (value) => {\r\n    this.props.dispatch(setGameData({replayInterval: value}));\r\n  };\r\n\r\n  updateTurnStrategy = (value) => {\r\n    this.props.dispatch(setGameData({turnStrategy: value}));\r\n  };\r\n\r\n  saveSettings = () => {\r\n    let curTab = this.props.wargame.currentTab;\r\n    this.props.dispatch(saveSettings(this.props.wargame.currentWargame, this.props.wargame.data[curTab]));\r\n  };\r\n\r\n  render() {\r\n\r\n\r\n    let spatialRepresentationOptions = [{value: \"opt1\", option: \"opt1\"}, {value: \"opt2\", option: \"opt2\"}, {value: \"opt3\", option: \"opt3\"}]\r\n    let turnStrategyOptions = [{value: \"opt1\", option: \"opt1\"}, {value: \"opt2\", option: \"opt2\"}, {value: \"opt3\", option: \"opt3\"}]\r\n\r\n    return (\r\n      <div className=\"flex-content-wrapper settingsTab\">\r\n        <div className=\"flex-content flex-content--left50\">\r\n          <p className=\"heading--sml\">Game description &amp; objectives</p>\r\n          <TextArea\r\n            updateStore={this.updateDescription}\r\n            data={this.props.wargame.data[this.props.wargame.currentTab].gameDescription}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex-content flex-content--right50\">\r\n          <Row className=\"flex-content--rowend\">\r\n            <span className=\"link link--noIcon\" onClick={this.saveSettings}>save Overview</span>\r\n          </Row>\r\n          <Row>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml\">Spatial Representation</p>\r\n            </div>\r\n            <div className=\"flex-content flex-content--fill\">\r\n              <DropdownInput\r\n                updateStore={this.updateSpatialRepresentation}\r\n                selectOptions={spatialRepresentationOptions}\r\n                placeholder=\"Select spatial representation\"\r\n                data={this.props.wargame.data[this.props.wargame.currentTab].spatialRepresentation}\r\n              />\r\n            </div>\r\n          </Row>\r\n\r\n          <Row>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml\">Planning Interval</p>\r\n            </div>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <TextInput\r\n                updateStore={this.updatePlanningInterval}\r\n                options={{ numInput: true }}\r\n                data={this.props.wargame.data[this.props.wargame.currentTab].planningInterval}\r\n                validInput={true}\r\n              />\r\n            </div>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml heading--mleft\">min.</p>\r\n            </div>\r\n          </Row>\r\n\r\n          <Row>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml\">Replay interval</p>\r\n            </div>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <TextInput\r\n                updateStore={this.updateReplayInterval}\r\n                options={{ numInput: true }}\r\n                data={this.props.wargame.data[this.props.wargame.currentTab].replayInterval}\r\n                validInput={true}\r\n              />\r\n            </div>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml heading--mleft\">min.</p>\r\n            </div>\r\n          </Row>\r\n\r\n          <Row>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml\">Turn Strategy</p>\r\n            </div>\r\n            <div className=\"flex-content flex-content--fill\">\r\n              <DropdownInput\r\n                updateStore={this.updateTurnStrategy}\r\n                selectOptions={turnStrategyOptions}\r\n                placeholder=\"Not implemented yet\"\r\n                data={this.props.wargame.data[this.props.wargame.currentTab].turnStrategy}\r\n                // disabled={true}\r\n              />\r\n            </div>\r\n          </Row>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame }) => ({\r\n  wargame,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SettingsTab);\r\n","import React, { Component } from 'react';\r\nimport classNames from \"classnames\";\r\nimport '../scss/App.scss';\r\nimport {PropTypes} from \"prop-types\";\r\n\r\nclass TabsSearchList extends Component {\r\n\r\n  setSelected = (item) => {\r\n    this.props.setSelected(item);\r\n  };\r\n\r\n  render() {\r\n    let that = this;\r\n    return (\r\n      <div className=\"list\">\r\n        {this.props.filter ?\r\n          <input type=\"text\" className=\"list-input\" key=\"search-templates\" placeholder={this.props.placeholder} onChange={ this.props.filter } value={this.props.searchQuery} />\r\n          : false\r\n        }\r\n        <div className=\"list-list\">\r\n          {this.props.listData.map(function(name) {\r\n              let active = name === that.props.selected ? 'active' : '';\r\n\r\n              return (\r\n                <span\r\n                  href=\"#\"\r\n                  onClick={that.setSelected.bind(that, name)}\r\n                  key={name}\r\n                  className={classNames({\"list-title\": true, active})}>{name}\r\n                </span>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTabsSearchList.propTypes = {\r\n  listData: PropTypes.array.isRequired,\r\n  filter: PropTypes.func,\r\n  selected: PropTypes.string.isRequired,\r\n  setSelected: PropTypes.func.isRequired,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nexport default TabsSearchList;\r\n","import React, { Component } from 'react';\r\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nclass RemovableGroupItem extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <span className=\"group-item\" key={this.props.children}>\r\n        {this.props.children}\r\n        <FontAwesomeIcon icon={faTimes} />\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RemovableGroupItem;\r\n","export default function checkUnique(value, array) {\r\n  return array.every((item) => item !== value);\r\n};\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport TabsSearchList from \"../../Components/TabsSearchList\";\r\nimport {\r\n  setSelectedForce,\r\n  setForceOverview,\r\n  saveForce,\r\n  addNewForce,\r\n  deleteSelectedForce,\r\n} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\nimport '../../scss/App.scss';\r\nimport TextArea from \"../../Components/Inputs/TextArea\";\r\nimport RemovableGroupItem from \"../../Components/Layout/RemovableGroupItem\";\r\nimport TextInput from \"../../Components/Inputs/TextInput\";\r\nimport uniqid from \"uniqid\";\r\n\r\nimport {forceTemplate} from \"../../api/consts\";\r\nimport _ from \"lodash\";\r\nimport checkUnique from \"../../Helpers/checkUnique\";\r\nimport {addNotification} from \"../../ActionsAndReducers/Notification/Notification_ActionCreators\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faTrash} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass ForcesTab extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newForceName: null,\r\n      forcesList: this.props.wargame.data[this.props.wargame.currentTab].forces,\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    const curSelected = this.props.wargame.data[this.props.wargame.currentTab].selectedForce;\r\n    const nextSelected = nextProps.wargame.data[nextProps.wargame.currentTab].selectedForce;\r\n    const curPropsState = this.props.wargame.data[this.props.wargame.currentTab].forces;\r\n    const nextPropsState = nextProps.wargame.data[nextProps.wargame.currentTab].forces;\r\n\r\n    if (curPropsState.length !== nextPropsState.length || curSelected !== nextSelected) {\r\n      this.setState({\r\n        forcesList: nextProps.wargame.data[nextProps.wargame.currentTab].forces\r\n      });\r\n    }\r\n\r\n    if (curSelected !== nextSelected) {\r\n      this.setState({\r\n        newForceName: null,\r\n      });\r\n    }\r\n  }\r\n\r\n  createForce = () => {\r\n    let name = 'force-' + uniqid.time();\r\n    this.props.dispatch(addNewForce(name));\r\n    this.props.dispatch(setSelectedForce(name));\r\n\r\n    let template = forceTemplate;\r\n    template.forceName = name;\r\n\r\n    this.props.dispatch(saveForce(this.props.wargame.currentWargame, name, template, name));\r\n\r\n    this.setState({\r\n      newForceName: null,\r\n    });\r\n  };\r\n\r\n  setSelected = (force) => {\r\n    this.props.dispatch(setSelectedForce(force));\r\n  };\r\n\r\n  updateOverview = (overview) => {\r\n    this.props.dispatch(setForceOverview(overview));\r\n  };\r\n\r\n  checkUnique() {\r\n    const curTab = this.props.wargame.currentTab;\r\n    let selectedForce = this.props.wargame.data[curTab].selectedForce;\r\n\r\n    let forceNames = this.props.wargame.data[curTab].forces.map((force) => force.forceName);\r\n    forceNames = _.pull(forceNames, selectedForce);\r\n\r\n    if (!checkUnique(this.state.newForceName, forceNames)) {\r\n      this.props.dispatch(addNotification(\"Force name is not unique.\", \"warning\"));\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  saveForce = () => {\r\n\r\n    const curTab = this.props.wargame.currentTab;\r\n    let selectedForce = this.props.wargame.data[curTab].selectedForce;\r\n\r\n    let newForceData = this.props.wargame.data[curTab].forces.find((f) => f.forceName === selectedForce);\r\n\r\n    if (typeof this.state.newForceName === 'string' && this.state.newForceName.length > 0) {\r\n\r\n      if (!this.checkUnique()) return;\r\n\r\n      this.props.dispatch(saveForce(this.props.wargame.currentWargame, this.state.newForceName, newForceData, selectedForce));\r\n    }\r\n\r\n    if (this.state.newForceName === null) {\r\n      this.props.dispatch(saveForce(this.props.wargame.currentWargame, selectedForce, newForceData, selectedForce));\r\n    } else if (this.state.newForceName.length === 0) {\r\n      alert('no channel name');\r\n    }\r\n  };\r\n\r\n  deleteForce = () => {\r\n    let curTab = this.props.wargame.currentTab;\r\n    let selectedForce = this.props.wargame.data[curTab].selectedForce;\r\n    this.props.dispatch(deleteSelectedForce(this.props.wargame.currentWargame, selectedForce));\r\n  };\r\n\r\n  updateForceName = (name) => {\r\n    this.setState({\r\n      newForceName: name,\r\n    })\r\n  };\r\n\r\n  createForceEditor() {\r\n\r\n    let curTab = this.props.wargame.currentTab;\r\n    let selectedForce = this.props.wargame.data[curTab].selectedForce;\r\n\r\n    let forceName = typeof this.state.newForceName === 'string' ? this.state.newForceName : selectedForce;\r\n\r\n    return (\r\n      <div className=\"flex-content--fill forcesTab\">\r\n\r\n        <TextInput\r\n          id=\"channel-editable\"\r\n          updateStore={this.updateForceName}\r\n          options={{numInput: false}}\r\n          data={forceName}\r\n          validInput={this.props.wargame.validation.validForceName}\r\n        />\r\n\r\n        <span className=\"link link--noIcon\" onClick={this.saveForce}>save force</span>\r\n        <span className=\"link link--secondary\" onClick={this.deleteForce}><FontAwesomeIcon icon={faTrash} />Delete</span>\r\n\r\n        <span className=\"link link--secondary link--noIcon link--disabled\">Change icon</span>\r\n\r\n        <p className=\"heading--sml\">Overview &amp; Objectives</p>\r\n        <TextArea\r\n          updateStore={this.updateOverview}\r\n          data={this.props.wargame.data[curTab].forces.find((force) => force.forceName === selectedForce).overview}\r\n        />\r\n\r\n        <p className=\"heading--sml\">Roles</p>\r\n        <span className=\"link link--secondary link--noIcon link--disabled\">Add a new role</span>\r\n\r\n        <div className=\"flex-content\">\r\n          {this.props.wargame.data[curTab].forces.find((force) => force.forceName === selectedForce).roles.map((role) => {\r\n            return (<RemovableGroupItem key={role}>{role}</RemovableGroupItem>)\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n\r\n    let curTab = this.props.wargame.currentTab;\r\n    let selectedForce = this.props.wargame.data[curTab].selectedForce;\r\n\r\n    return (\r\n      <div className=\"flex-content-wrapper\">\r\n        <div className=\"flex-content\">\r\n          <span className=\"link link--noIcon\" onClick={this.createForce}>Add a new force</span>\r\n          <TabsSearchList listData={this.state.forcesList.map((force) => force.forceName)}\r\n                          setSelected={this.setSelected}\r\n                          selected={selectedForce}\r\n          />\r\n        </div>\r\n\r\n        {selectedForce ?\r\n          this.createForceEditor()\r\n        : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// temp use allMessages\r\nconst mapStateToProps = ({ messages, wargame }) => ({\r\n  messages,\r\n  wargame,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ForcesTab);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../../scss/App.scss';\r\nimport Select from \"react-select\";\r\n\r\nclass EditSubscriptionRow extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      subscriptionId: this.props.data.subscriptionId,\r\n      editSubscriptionForce: {value: this.props.data.force, label: this.props.data.force},\r\n      editSubscriptionRole: {value: this.props.data.role, label: this.props.data.role},\r\n      editSubscriptionTemplates: this.props.data.templates,\r\n    };\r\n  }\r\n\r\n  updateSubscriptionForce = (option) => {\r\n    this.setState({\r\n      editSubscriptionForce: option,\r\n    });\r\n  };\r\n\r\n  updateSubscriptionRole = (option) => {\r\n    this.setState({\r\n      editSubscriptionRole: option,\r\n    });\r\n  };\r\n\r\n  updateSubscriptionTemplates = (option) => {\r\n    this.setState({\r\n      editSubscriptionTemplates: option,\r\n    });\r\n  };\r\n\r\n  updateChannel = () => {\r\n    let subscriptionData = {\r\n      force: this.state.editSubscriptionForce.label,\r\n      role: this.state.editSubscriptionRole.label,\r\n      templates: this.state.editSubscriptionTemplates,\r\n    };\r\n    this.props.updateRecipient(this.state.subscriptionId, subscriptionData);\r\n    this.props.cancelEdit();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <tr>\r\n        <td>\r\n          <Select\r\n            value={this.state.editSubscriptionForce}\r\n            options={this.props.forceOptions}\r\n            onChange={this.updateSubscriptionForce}\r\n          />\r\n        </td>\r\n        <td>\r\n          <Select\r\n            value={this.state.editSubscriptionRole}\r\n            options={this.props.roleOptions}\r\n            onChange={this.updateSubscriptionRole}\r\n          />\r\n        </td>\r\n        <td>\r\n          <Select\r\n            value={this.state.editSubscriptionTemplates}\r\n            options={this.props.templateOptions}\r\n            onChange={this.updateSubscriptionTemplates}\r\n            isMulti\r\n          />\r\n        </td>\r\n        <td>\r\n          <button\r\n            className=\"btn btn-action btn-action--secondary\"\r\n            onClick={this.updateChannel}\r\n            // disabled={!this.state.selectedTemplates.length > 0}\r\n          >\r\n            Save</button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default connect()(EditSubscriptionRow);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  addRecipientToChannel,\r\n  updateRecipient,\r\n  removeRecipient,\r\n} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators.js\";\r\n\r\nimport EditSubscriptionRow from \"./EditSubscriptionRow\";\r\nimport Select from \"react-select\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTrash,\r\n  faPencilAlt,\r\n  faUndoAlt,\r\n  faCheck,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport classNames from \"classnames\";\r\n\r\nclass ChannelsTable extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let forceOptions = this.props.wargame.data.forces.forces.map((f) => ({ value: f.forceName, label: f.forceName }));\r\n\r\n    let templateOptions = this.props.messageTypes.messages.map((messageType) => {\r\n      return {\r\n        value: messageType._id,\r\n        label: messageType.title,\r\n      }\r\n    });\r\n\r\n    this.state = {\r\n      selectedForce: {value: null, label: null},\r\n      forceOptions: forceOptions,\r\n      selectedRole:  {value: null, label: null},\r\n      roleOptions: [],\r\n      selectedTemplates:  [],\r\n      templateOptions: templateOptions,\r\n      subscriptionToEdit: null,\r\n      editSubscriptionForce: '',\r\n      editSubscriptionRole: '',\r\n      editSubscriptionTemplates: [],\r\n    }\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState, nextContext) {\r\n\r\n    if (nextState.selectedForce.value === null) return;\r\n\r\n    if (this.state.selectedForce.value !== nextState.selectedForce.value) {\r\n\r\n      let roleOptions = [];\r\n\r\n      let roles = this.props.wargame.data.forces.forces.find((f) => f.forceName === nextState.selectedForce.value).roles;\r\n\r\n      roles.forEach((role) => {\r\n\r\n        roleOptions.push({\r\n          value: role,\r\n          label: role,\r\n        });\r\n      });\r\n\r\n      this.setState({\r\n        roleOptions,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n    if (this.props.wargame.data.channels.selectedChannel !== nextProps.wargame.data.channels.selectedChannel) {\r\n      this.setState({\r\n        selectedForce: {value: null, label: null},\r\n        selectedRole:  {value: null, label: null},\r\n        selectedTemplates: [],\r\n      })\r\n    }\r\n  }\r\n\r\n  createRow(data, i) {\r\n    var row = [];\r\n    for (var prop in data) {\r\n      if (prop === \"subscriptionId\") continue;\r\n\r\n      var value = '';\r\n      if (typeof data[prop] !== \"string\") {\r\n\r\n        for (var j=0 ; j<data[prop].length ; j++) {\r\n          let item = data[prop][j];\r\n          value += item.label;\r\n          if (j !== data[prop].length-1) value+=', ';\r\n        }\r\n      } else {\r\n        value = data[prop];\r\n      }\r\n      row.push(<td key={`${value}${i}`}>{value}</td>)\r\n    }\r\n    row.push(\r\n      <td key={`edit-delete${i}`}>\r\n        <FontAwesomeIcon icon={faTrash} onClick={this.removeSubscription.bind(this, data.subscriptionId)} />\r\n        <FontAwesomeIcon icon={faPencilAlt} onClick={this.editSubscription.bind(this, data.subscriptionId)} />\r\n      </td>\r\n    );\r\n    return (<tr key={`row-${i}`}>{row}</tr>);\r\n  }\r\n\r\n  removeSubscription(subscriptionId) {\r\n    this.props.dispatch(removeRecipient(subscriptionId))\r\n  };\r\n\r\n  editSubscription(subscriptionId) {\r\n    this.setState({\r\n      subscriptionToEdit: subscriptionId,\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      subscriptionToEdit: \"\",\r\n    });\r\n  };\r\n\r\n  updateRecipient = (id, data) => {\r\n    this.props.dispatch(updateRecipient(id, data));\r\n  };\r\n\r\n  setSelectedForce = (option) => {\r\n    this.setState({\r\n      selectedForce: option,\r\n    });\r\n  };\r\n\r\n  setSelectedRole = (option) => {\r\n    this.setState({\r\n      selectedRole: option,\r\n    });\r\n  };\r\n\r\n  setSelectedTemplate = (option) => {\r\n    this.setState({\r\n      selectedTemplates: option,\r\n    });\r\n  };\r\n\r\n  addToChannel = () => {\r\n\r\n    let rowComplete = this.state.selectedTemplates.length > 0;\r\n\r\n    if (!rowComplete) return;\r\n\r\n    let channelData = {\r\n      force: this.state.selectedForce.value,\r\n      role: this.state.selectedRole.value,\r\n      templates: this.state.selectedTemplates,\r\n    };\r\n    this.props.dispatch(addRecipientToChannel(channelData));\r\n\r\n    this.setState({\r\n      selectedForce: {value: null, label: null},\r\n      selectedRole: {value: null, label: null},\r\n      selectedTemplates: [],\r\n    });\r\n  };\r\n\r\n  clearChannelData = () => {\r\n    this.setState({\r\n      selectedForce: {value: null, label: null},\r\n      selectedRole: {value: null, label: null},\r\n      selectedTemplates: [],\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    let rowComplete = this.state.selectedTemplates.length > 0;\r\n\r\n    return (\r\n      <div className=\"flex-content\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Force</th>\r\n              <th>Roles</th>\r\n              <th>Templates</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.data.map((data, i) => {\r\n              return data.subscriptionId === this.state.subscriptionToEdit ? <EditSubscriptionRow\r\n                                                                                  key={data.subscriptionId}\r\n                                                                                  data={data}\r\n                                                                                  forceOptions={this.state.forceOptions}\r\n                                                                                  roleOptions={this.state.roleOptions}\r\n                                                                                  templateOptions={this.state.templateOptions}\r\n                                                                                  cancelEdit={this.cancelEdit}\r\n                                                                                  updateRecipient={this.updateRecipient}\r\n                                                                            /> : this.createRow(data, i);\r\n            })}\r\n            <tr>\r\n              <td>\r\n                <Select\r\n                  value={this.state.selectedForce}\r\n                  options={this.state.forceOptions}\r\n                  onChange={this.setSelectedForce}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Select\r\n                  value={this.state.selectedRole}\r\n                  options={this.state.roleOptions}\r\n                  onChange={this.setSelectedRole}\r\n                  isDisabled={!this.state.selectedForce.value}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Select\r\n                  value={this.state.selectedTemplates}\r\n                  options={this.state.templateOptions}\r\n                  onChange={this.setSelectedTemplate}\r\n                  isDisabled={!this.state.selectedRole.value}\r\n                  isMulti\r\n                />\r\n              </td>\r\n              <td>\r\n                <FontAwesomeIcon icon={faUndoAlt} onClick={this.clearChannelData} />\r\n                <FontAwesomeIcon icon={faCheck} className={classNames({\"btn--disabled\": !rowComplete})} onClick={this.addToChannel} />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame, messageTypes }) => ({\r\n  wargame,\r\n  messageTypes,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ChannelsTable);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n  setSelectedChannel,\r\n  deleteSelectedChannel,\r\n  saveChannel,\r\n  addNewChannel,\r\n} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nimport {channelTemplate} from \"../../api/consts\";\r\n\r\nimport '../../scss/App.scss';\r\n\r\nimport TabsSearchList from \"../../Components/TabsSearchList\";\r\nimport TextInput from \"../../Components/Inputs/TextInput\";\r\nimport ChannelsTable from \"../../Components/Layout/ChannelsTable\";\r\nimport {faTrash} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport uniqid from \"uniqid\";\r\nimport _ from \"lodash\";\r\nimport checkUnique from \"../../Helpers/checkUnique\";\r\nimport {addNotification} from \"../../ActionsAndReducers/Notification/Notification_ActionCreators\";\r\n\r\nclass ForcesTab extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      channelList: this.props.wargame.data[this.props.wargame.currentTab].channels,\r\n      searchQuery: '',\r\n      newChannelName: null,\r\n    }\r\n  };\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    const curSelected = this.props.wargame.data[this.props.wargame.currentTab].selectedChannel;\r\n    const nextSelected = nextProps.wargame.data[nextProps.wargame.currentTab].selectedChannel;\r\n    const curPropsState = this.props.wargame.data[this.props.wargame.currentTab].channels;\r\n    const nextPropsState = nextProps.wargame.data[nextProps.wargame.currentTab].channels;\r\n\r\n    if (curPropsState.length !== nextPropsState.length || curSelected !== nextSelected) {\r\n      this.setState({\r\n        channelList: nextProps.wargame.data[nextProps.wargame.currentTab].channels\r\n      });\r\n    }\r\n\r\n    if (curSelected !== nextSelected) {\r\n      this.setState({\r\n        newChannelName: null,\r\n      });\r\n    }\r\n  }\r\n\r\n  createChannel = () => {\r\n    let name = 'channel-' + uniqid.time();\r\n    this.props.dispatch(addNewChannel(name));\r\n    this.props.dispatch(setSelectedChannel(name));\r\n\r\n    let template = channelTemplate;\r\n    template.channelName = name;\r\n\r\n    this.props.dispatch(saveChannel(this.props.wargame.currentWargame, name, template, name));\r\n  };\r\n\r\n  setSelected = (channel) => {\r\n    this.props.dispatch(setSelectedChannel(channel));\r\n  };\r\n\r\n  filterChannels = (input) => {\r\n\r\n    let value = input.target.value;\r\n\r\n    let list = this.props.wargame.data[this.props.wargame.currentTab].channels;\r\n\r\n    this.setState({\r\n      channelList: list.filter((item) => item.channelName.toLowerCase().indexOf(value.toLowerCase()) > -1),\r\n      searchQuery: value\r\n    });\r\n  };\r\n\r\n  deleteChannel = () => {\r\n    let curTab = this.props.wargame.currentTab;\r\n    let selectedChannel = this.props.wargame.data[curTab].selectedChannel;\r\n    this.props.dispatch(deleteSelectedChannel(this.props.wargame.currentWargame, selectedChannel));\r\n  };\r\n\r\n  updateChannelName = (name) => {\r\n    this.setState({\r\n      newChannelName: name,\r\n    })\r\n  };\r\n\r\n  checkUnique() {\r\n    const curTab = this.props.wargame.currentTab;\r\n    let selectedChannel = this.props.wargame.data[curTab].selectedChannel;\r\n\r\n    let channelNames = this.props.wargame.data[curTab].channels.map((force) => force.channelName);\r\n        channelNames = _.pull(channelNames, selectedChannel);\r\n\r\n    if (!checkUnique(this.state.newChannelName, channelNames)) {\r\n      this.props.dispatch(addNotification(\"Channel name is not unique.\", \"warning\"));\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  saveChannel = () => {\r\n    const curTab = this.props.wargame.currentTab;\r\n    let selectedChannel = this.props.wargame.data[curTab].selectedChannel;\r\n\r\n    let newChannelData = this.props.wargame.data[curTab].channels.find((c) => c.channelName === selectedChannel);\r\n\r\n    if (typeof this.state.newChannelName === 'string' && this.state.newChannelName.length > 0) {\r\n\r\n      if (!this.checkUnique()) return;\r\n\r\n      this.props.dispatch(saveChannel(this.props.wargame.currentWargame, this.state.newChannelName, newChannelData, selectedChannel));\r\n    }\r\n\r\n    if (this.state.newChannelName === null) {\r\n      this.props.dispatch(saveChannel(this.props.wargame.currentWargame, selectedChannel, newChannelData, selectedChannel));\r\n    } else if (this.state.newChannelName.length === 0) {\r\n      alert('no channel name');\r\n    }\r\n  };\r\n\r\n\r\n  createChannelEditor() {\r\n\r\n    let curTab = this.props.wargame.currentTab;\r\n    let selectedChannel = this.props.wargame.data[curTab].selectedChannel;\r\n\r\n    let channelName = typeof this.state.newChannelName === 'string' ? this.state.newChannelName : selectedChannel;\r\n\r\n    return (\r\n      <div className=\"flex-content--fill channelsTab\">\r\n        <div className=\"flex-content--row\">\r\n          <TextInput\r\n            id=\"channel-editable\"\r\n            updateStore={this.updateChannelName}\r\n            options={{numInput: false}}\r\n            data={channelName}\r\n            validInput={this.props.wargame.validation.validChannelName}\r\n          />\r\n          <span className=\"link link--noIcon\" onClick={this.saveChannel}>save channel</span>\r\n          <span className=\"link link--secondary\" onClick={this.deleteChannel}><FontAwesomeIcon icon={faTrash} />Delete</span>\r\n        </div>\r\n        <p className=\"heading--sml\">Participants and messages</p>\r\n\r\n        <ChannelsTable data={this.props.wargame.data[curTab].channels.find((f) => f.channelName === selectedChannel).participants} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n\r\n    const curTab = this.props.wargame.currentTab;\r\n    const selectedChannel = this.props.wargame.data[curTab].selectedChannel;\r\n\r\n    return (\r\n      <div className=\"flex-content-wrapper\">\r\n        <div className=\"flex-content\">\r\n          <span className=\"link link--noIcon\" onClick={this.createChannel}>Add channel</span>\r\n          <TabsSearchList listData={this.state.channelList.map((channel) => channel.channelName)}\r\n                          filter={this.filterChannels}\r\n                          searchQuery={this.state.searchQuery}\r\n                          setSelected={this.setSelected}\r\n                          selected={selectedChannel}\r\n                          placeholder={\"Search channels\"}\r\n          />\r\n        </div>\r\n\r\n        {selectedChannel ?\r\n          this.createChannelEditor()\r\n        : null}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// temp use allMessages\r\nconst mapStateToProps = ({ messages, wargame }) => ({\r\n  messages,\r\n  wargame,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ForcesTab);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SettingsTab from \"./TabViews/SettingsTab\";\r\nimport ForcesTab from \"./TabViews/ForcesTab\";\r\nimport ChannelsTab from \"./TabViews/ChannelsTab\";\r\n// import ValidationNotification from \"../Components/ValidationNotification\";\r\nimport classNames from \"classnames\";\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n});\r\n\r\n\r\nclass TabbedView extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: 0,\r\n      activeTab: Object.keys(this.props.tabs)[0],\r\n      tabs: Object.keys(this.props.tabs),\r\n      invalidFields: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setCurrentTab(Object.keys(this.props.tabs)[0]);\r\n  }\r\n\r\n  changeTab = (value) => {\r\n    this.setState({ activeTab: value });\r\n    this.props.setCurrentTab(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <ul className=\"tab-nav\">\r\n          { this.state.tabs.map((tabName, i) => (\r\n                <li key={tabName}\r\n                    onClick={this.changeTab.bind(this, this.state.tabs[i])}\r\n                    className={classNames({ \"active-tab\": tabName === this.state.activeTab })}\r\n                >{tabName}</li>\r\n              )\r\n            )\r\n          }\r\n        </ul>\r\n        <div className=\"flex-content-margin\">\r\n          {this.state.activeTab === this.state.tabs[0] && <SettingsTab />}\r\n          {this.state.activeTab === this.state.tabs[1] && <ForcesTab />}\r\n          {this.state.activeTab === this.state.tabs[2] && <ChannelsTab />}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame }) => ({\r\n  wargame\r\n});\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(TabbedView));\r\n","import React, { Component } from 'react';\r\n\r\nclass ProgressBar extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"progress\">\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProgressBar;\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {\r\n  setCurrentTab,\r\n  saveWargameTitle, saveForce,\r\n} from \"../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nimport TabbedView from \"./TabbedView\";\r\nimport ProgressBar from \"../Components/ProgressBar/ProgressBar\";\r\n\r\nimport Link from \"../Components/Link\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n import _ from \"lodash\";\r\nimport checkUnique from \"../Helpers/checkUnique\";\r\n\r\nimport classNames from \"classnames\";\r\nimport TextInput from \"../Components/Inputs/TextInput\";\r\nimport {getAllMessageTypes} from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\nimport {addNotification} from \"../ActionsAndReducers/Notification/Notification_ActionCreators\";\r\n\r\nclass GameSetup extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      newWargameName: null,\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(getAllMessageTypes());\r\n  }\r\n\r\n  setCurrentTab = (tab) => {\r\n    this.props.dispatch(setCurrentTab(tab));\r\n  };\r\n\r\n  createIndicators() {\r\n    const that = this;\r\n\r\n    return Object.entries(this.props.wargame.data).map(function (entry) {\r\n      let active = that.props.wargame.currentTab === parseInt(entry[0]);\r\n      let completed = entry[1].complete;\r\n      return (<div key={entry[0]} className={classNames(\"progress-indicator\", {\"progress-indicator--active\": active, \"progress-indicator--complete\": completed})}></div>);\r\n    });\r\n  }\r\n\r\n  updateWargameTitle = (name) => {\r\n    this.setState({\r\n      newWargameName: name,\r\n    });\r\n  };\r\n\r\n\r\n  saveWargame = () => {\r\n\r\n    let wargameNames = this.props.wargame.wargameList.map((game) => game.title);\r\n        wargameNames = _.pull(wargameNames, this.props.wargame.wargameTitle);\r\n\r\n    if (!checkUnique(this.state.newWargameName, wargameNames)) {\r\n      this.props.dispatch(addNotification(\"Wargame name is not unique.\", \"warning\"));\r\n      return;\r\n    }\r\n\r\n    if (!this.checkWargameNameSaveable()) return;\r\n\r\n    if (this.checkAllValid()) {\r\n      if (typeof this.state.newWargameName === 'string' && this.state.newWargameName.length > 0) {\r\n        this.props.dispatch(saveWargameTitle(this.props.wargame.currentWargame, this.state.newWargameName));\r\n      }\r\n\r\n      if (this.state.newWargameName === null || this.state.newWargameName.length === 0) {\r\n        alert('no channel name');\r\n      }\r\n    }\r\n  };\r\n\r\n  checkWargameNameSaveable = () => {\r\n\r\n    if (this.state.newWargameName === this.props.wargame.wargameTitle) return false;\r\n    if (this.state.newWargameName === null || this.state.newWargameName.length === 0) return false;\r\n    return true;\r\n  };\r\n\r\n  checkAllValid = () => {\r\n    return Object.values(this.props.wargame.validation).every((entry) => entry === true);\r\n  };\r\n\r\n  render() {\r\n\r\n    let wargameTitle = typeof this.state.newWargameName === 'string' ? this.state.newWargameName : this.props.wargame.wargameTitle;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"view-wrapper view-wrapper-gamesetup\">\r\n          <div id=\"sidebar\">\r\n            <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n          </div>\r\n          <div className=\"flex-content-wrapper flex-content-wrapper--distribute\" id=\"game-setup-head\">\r\n            <div className=\"flex-content flex-content--row\">\r\n              <TextInput\r\n                id=\"title-editable\"\r\n                updateStore={this.updateWargameTitle}\r\n                options={{numInput: false}}\r\n                data={wargameTitle}\r\n                validInput={this.props.wargame.validation.validWargameName}\r\n              />\r\n              {this.checkWargameNameSaveable() ?\r\n                <FontAwesomeIcon className=\"savewargame-icon\" icon={faSave} onClick={this.saveWargame } size=\"2x\" />\r\n                : false\r\n              }\r\n            </div>\r\n            <ProgressBar>\r\n              {this.createIndicators()}\r\n            </ProgressBar>\r\n          </div>\r\n          <TabbedView\r\n            tabs={this.props.wargame.data}\r\n            setCurrentTab={this.setCurrentTab}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n// temp use allMessages\r\nconst mapStateToProps = ({ wargame }) => ({\r\n  wargame\r\n});\r\n\r\nexport default connect(mapStateToProps)(GameSetup);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\nimport check from \"check-types\";\r\nimport moment from \"moment\";\r\nconst Fragment = React.Fragment;\r\n\r\nclass MessagePreview extends Component {\r\n\r\n  createObjItem(pair) {\r\n    const that = this;\r\n    return (\r\n      <span key={`objItem--${pair[0]}-${pair[1]}`} className=\"group-section\">{ that.deconstructObj(pair[1]) }</span>\r\n    )\r\n  }\r\n\r\n  createBoolItem(pair) {\r\n    return <span key={`boolItem--${pair[0]}-${pair[1]}`}>{pair[1] ? pair[0] : false}</span>\r\n  }\r\n\r\n  createTimeItem(pair) {\r\n\r\n    return (\r\n      <Fragment key={`dateTime-${pair[0]}${pair[1]}`}>\r\n        <span className=\"detail\">{pair[0]}:</span>\r\n        <span className=\"data\">{moment(pair[1]).format('DD/MM/YY,HH:mm')}</span>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  createStrItem(pair, withoutName) {\r\n    return (\r\n      <Fragment key={`strItem-${pair[0]}${pair[1]}`}>\r\n        <span className=\"detail\">\r\n          {pair[0]}:\r\n        </span>\r\n        <span className=\"data\">\r\n          {pair[1]}\r\n        </span>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  deconstructArr(pair) {\r\n    const that = this;\r\n    return (\r\n      <Fragment key={`${pair[0]}-group`}>\r\n        <span className=\"detail\">{pair[0]}</span>\r\n        {pair[1].map((item) => {\r\n          // CHECK NAME PROP ON EVERY OBJ\r\n          return (\r\n              <span key={`section-${item.name}`}>{ that.deconstructObj(item) }</span>\r\n          );\r\n        })}\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n\r\n  deconstructObj(obj) {\r\n\r\n    const that = this;\r\n    const keyPropPairs = Object.entries(obj);\r\n\r\n    return keyPropPairs.map((pair, i) => {\r\n\r\n      if (check.object(pair[1])) return that.createObjItem(pair);\r\n      if (check.array.of.object(pair[1])) return that.deconstructArr(pair);\r\n      if (check.boolean(pair[1])) return that.createBoolItem(pair);\r\n\r\n      if (moment(pair[1], moment.ISO_8601, true).isValid()) return that.createTimeItem(pair);\r\n\r\n      return that.createStrItem(pair);\r\n\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    if (!this.props.detail) return false;\r\n\r\n    const that = this;\r\n    const keyPropPairs = Object.entries(this.props.detail);\r\n\r\n\r\n    return keyPropPairs.map((pair, i) => {\r\n\r\n      if (i===0) return (\r\n        <Fragment key={'from-force'}>\r\n          { this.props.from ? <>\r\n            <span className=\"detail\">\r\n              From:\r\n            </span>\r\n            <span className=\"data\">\r\n              {this.props.from}\r\n            </span></>\r\n          : false }\r\n        </Fragment>\r\n      );\r\n\r\n      if (check.object(pair[1])) return that.createObjItem(pair);\r\n      if (check.array.of.object(pair[1])) return that.deconstructArr(pair);\r\n      if (check.boolean(pair[1])) return that.createBoolItem(pair);\r\n      if (moment(pair[1], moment.ISO_8601, true).isValid()) return that.createTimeItem(pair);\r\n\r\n      return (\r\n        <Fragment key={`${pair[0]}-${pair[1]}`}>\r\n          <span className=\"detail\">{pair[0]}: </span>\r\n          <span className=\"data\">{pair[1]}</span>\r\n        </Fragment>\r\n      )\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport default connect()(MessagePreview);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Badge from \"react-bootstrap/Badge\";\r\n\r\nimport Collapsible from \"react-collapsible\";\r\nimport MessagePreview from \"../Components/MessagePreviewPlayerUi\";\r\n\r\nimport '../scss/App.scss';\r\n\r\nclass MessagesList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messages: []\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n    if (this.props.messages.length !== 0 && nextProps.messages.length !== this.props.messages.length) {\r\n\r\n      let newMessage = {\r\n        message: nextProps.messages[0],\r\n        open: false,\r\n      };\r\n\r\n      let messages = this.state.messages;\r\n      messages.unshift(newMessage);\r\n\r\n      this.setState({\r\n        messages,\r\n      });\r\n    }\r\n\r\n    if (\r\n      (this.props.messages.length === 0) ||\r\n      (this.props.curChannel !== nextProps.curChannel)\r\n    ) {\r\n      this.setState({\r\n        messages: nextProps.messages.map((item) => ({ message: item, open: false })).filter((item) => item.message.details.channel === nextProps.curChannel)\r\n      });\r\n    }\r\n  }\r\n\r\n  openSection = (el) => {\r\n\r\n    el.open = true;\r\n    let index = this.state.messages.findIndex((item) => item.message._id === el.message._id);\r\n    let messages = this.state.messages;\r\n\r\n    messages.splice(index, 1, el);\r\n\r\n    this.setState({\r\n      messages\r\n    });\r\n  };\r\n\r\n  closeSection = (el) => {\r\n\r\n    el.open = false;\r\n    let index = this.state.messages.findIndex((item) => item.message._id === el.message._id);\r\n    let messages = this.state.messages;\r\n\r\n    messages.splice(index, 1, el);\r\n\r\n    this.setState({\r\n      messages\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"message-list\">\r\n        {this.state.messages.map((item, i) => {\r\n          return (\r\n              <Collapsible\r\n                key={`${i}-title`}\r\n                trigger={<div className=\"wrap\">{item.message.message.title} <Badge pill variant=\"secondary\">{item.message.details.messageType}</Badge></div>}\r\n                transitionTime={200}\r\n                easing={'ease-in-out'}\r\n                open={item.open}\r\n                onOpening={this.openSection.bind(this, item)}\r\n                onClosing={this.closeSection.bind(this, item)}\r\n              >\r\n                <div key={i} className=\"message-preview-player wrap\"><MessagePreview detail={item.message.message} from={item.message.details.from.force} /></div>\r\n              </Collapsible>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = () => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps)(MessagesList);\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport JSONEditor from '@json-editor/json-editor';\r\nimport '../scss/App.scss';\r\n\r\nimport {\r\n  saveMessage,\r\n  getAllWargameMessages,\r\n} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\nclass JsonCreator extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.editor = null;\r\n    this.editorPreviewRef = React.createRef();\r\n\r\n    this.state = {\r\n      selectedSchema: ''\r\n    };\r\n  }\r\n\r\n  sendMessage = () => {\r\n\r\n    let messageDetails = {\r\n      channel: this.props.playerUi.selectedChannel,\r\n      from: {\r\n        force: this.props.playerUi.selectedForce,\r\n        role: this.props.selectedRole,\r\n      },\r\n      messageType: this.props.playerUi.messageSchema.title,\r\n    };\r\n\r\n    this.props.dispatch(saveMessage(this.props.playerUi.currentWargame, messageDetails, this.editor.getValue()));\r\n    this.props.dispatch(getAllWargameMessages(this.props.playerUi.currentWargame));\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n    if (this.editor) {\r\n      this.editor.destroy();\r\n      this.editor = null;\r\n    }\r\n\r\n    if (nextProps.schema && nextProps.schema.type) {\r\n        if (this.editor) return;\r\n\r\n      this.editor = new JSONEditor(this.editorPreviewRef.current, {\r\n        schema: nextProps.schema,\r\n        theme: 'bootstrap4',\r\n        disable_collapse: true,\r\n        disable_edit_json: true,\r\n        disable_properties: true,\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"message-creator\" ref={this.editorPreviewRef}></div>\r\n        <button name=\"send\" className=\"btn btn-action btn-action--primary\" onClick={this.sendMessage}>Send</button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ playerUi }) => ({\r\n  playerUi\r\n});\r\n\r\nexport default connect(mapStateToProps)(JsonCreator);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport '../scss/App.scss';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n  getMessageTemplate,\r\n} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\nimport MessageCreator from \"../Components/MessageCreator.jsx\";\r\nimport Collapsible from \"react-collapsible\";\r\nimport DropdownInput from \"../Components/Inputs/DropdownInput\";\r\n\r\nclass NewMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dropdownValue: '',\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n    if (this.props.curChannel !== nextProps.curChannel) {\r\n      this.setState({\r\n        dropdownValue: '',\r\n      })\r\n    }\r\n  }\r\n\r\n  setTemplate = (val) => {\r\n    this.props.dispatch(getMessageTemplate(val));\r\n    this.setState({\r\n      dropdownValue: val,\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    const templates = this.props.templates.map((item) => ({value: item.value, option: item.label }));\r\n\r\n    return (\r\n      <div className=\"new-message-creator wrap\">\r\n        <Collapsible\r\n          trigger={\"New Message\"}\r\n          transitionTime={200}\r\n          easing={'ease-in-out'}\r\n        >\r\n          <DropdownInput\r\n            updateStore={this.setTemplate}\r\n            data={this.state.dropdownValue}\r\n            selectOptions={templates}\r\n            placeholder=\"Select message\"\r\n            className=\"message-input\"\r\n          />\r\n          <MessageCreator schema={this.props.schema} />\r\n        </Collapsible>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNewMessage.propTypes = {\r\n  templates: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = () => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps)(NewMessage);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {\r\n  getAllWargameMessages,\r\n  setChannel,\r\n  setMessageSchema,\r\n} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\nimport MessagesList from \"./MessagesList\";\r\nimport NewMessage from \"../Components/NewMessage\";\r\n\r\nimport '../scss/App.scss';\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ display: \"flex\", flexDirection: \"column\", height: \"calc(100% - 48px)\" }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n});\r\n\r\nclass MessageFeeds extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: 0,\r\n    };\r\n\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(getAllWargameMessages(this.props.playerUi.currentWargame));\r\n  }\r\n\r\n  handleChange = (event, value) => {\r\n\r\n    let channel = Object.keys(this.props.playerUi.channels)[value];\r\n\r\n    this.props.dispatch(setChannel(channel));\r\n    this.props.dispatch(setMessageSchema({}));\r\n\r\n    this.setState({ value });\r\n  };\r\n\r\n  createTabs = () => {\r\n\r\n    let channels = this.props.playerUi.channels;\r\n    let tabs = [];\r\n\r\n    for (let prop in channels) {\r\n      tabs.push(<Tab key={prop} label={prop} />)\r\n    }\r\n\r\n    return tabs;\r\n  };\r\n\r\n\r\n  createMessageList = (tab) => {\r\n\r\n    let curChannel= this.props.playerUi.selectedChannel;\r\n\r\n    return (\r\n      <TabContainer>\r\n        <MessagesList\r\n          curChannel={curChannel}\r\n          messages={this.props.playerUi.messages}\r\n        />\r\n\r\n        <NewMessage\r\n          curChannel={curChannel}\r\n          schema={this.props.playerUi.messageSchema}\r\n          templates={this.props.playerUi.channels[curChannel].templates}\r\n        />\r\n      </TabContainer>\r\n    )\r\n  };\r\n\r\n  render() {\r\n\r\n    const { value } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className={classes.root}>\r\n          <AppBar position=\"static\" color=\"default\">\r\n            <Tabs\r\n              value={value}\r\n              onChange={this.handleChange}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              centered\r\n            >\r\n              {this.createTabs()}\r\n            </Tabs>\r\n          </AppBar>\r\n          {this.createMessageList(value)}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ playerUi }) => ({\r\n  playerUi,\r\n});\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(MessageFeeds));\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport '../scss/App.scss';\r\nimport {\r\n  getWargame,\r\n  setForce,\r\n  setRole,\r\n  setFilteredChannels,\r\n  // getAllMessages,\r\n} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\nimport MessageFeeds from \"./MessageFeeds\";\r\nimport DropdownInput from \"../Components/Inputs/DropdownInput\";\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass PlayerUi extends Component {\r\n\r\n  // componentWillMount() {\r\n  //   this.props.dispatch(getAllMessages());\r\n  // }\r\n\r\n  updateSelectedWargame = (wargamePath) => {\r\n    this.props.dispatch(getWargame(wargamePath));\r\n  };\r\n\r\n  updateSelectedForce = (force) => {\r\n    this.props.dispatch(setForce(force));\r\n  };\r\n\r\n  updateSelectedRole = (role) => {\r\n    this.props.dispatch(setRole(role));\r\n    this.props.dispatch(setFilteredChannels());\r\n  };\r\n\r\n  goBack = () => {\r\n    this.props.dispatch(setForce(\"\"));\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"flex-content-wrapper\">\r\n\r\n        <div className=\"flex-content flex-content--fill\">\r\n\r\n          {!this.props.playerUi.currentWargame ?\r\n            <div className=\"flex-content--center\">\r\n              <h1>Set wargame</h1>\r\n              <DropdownInput\r\n                updateStore={this.updateSelectedWargame}\r\n                selectOptions={this.props.wargame.wargameList.map((wargame) => ({option: wargame.title, value: wargame.name}))}\r\n              />\r\n            </div>\r\n            : false\r\n          }\r\n\r\n          {this.props.playerUi.currentWargame && !this.props.playerUi.selectedForce ?\r\n            <div className=\"flex-content--center\">\r\n              <h1>Set force</h1>\r\n              <DropdownInput\r\n                updateStore={this.updateSelectedForce}\r\n                selectOptions={this.props.playerUi.allForces.map((force) => ({option: force.forceName, value: force.forceName}))}\r\n              />\r\n            </div>\r\n            : false\r\n          }\r\n\r\n          {this.props.playerUi.selectedForce && !this.props.playerUi.selectedRole ?\r\n            <div className=\"flex-content--center\">\r\n              <h1>Set role</h1>\r\n              <FontAwesomeIcon icon={faArrowLeft} size=\"2x\" style={{cursor: 'pointer'}} onClick={this.goBack} />\r\n              <DropdownInput\r\n                updateStore={this.updateSelectedRole}\r\n                selectOptions={this.props.playerUi.allForces.find((f) => f.forceName === this.props.playerUi.selectedForce).roles.map((role) => ({option: role, value: role}))}\r\n              />\r\n            </div>\r\n            : false\r\n          }\r\n\r\n          {this.props.playerUi.selectedForce && this.props.playerUi.selectedRole ?\r\n\r\n            <div className=\"message-feeds\">\r\n              <MessageFeeds />\r\n            </div>\r\n            : false\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ playerUi, wargame }) => ({\r\n  playerUi,\r\n  wargame,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PlayerUi);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport UniversalRouter from \"universal-router\";\r\n\r\nimport ChooseInterface from \"../Views/ChooseInterface\";\r\nimport GameDesignerInterface from '../Views/GameDesignerInterface';\r\nimport UmpireMenu from '../Views/UmpireMenu';\r\nimport EditMessage from '../Views/EditMessage';\r\nimport CreateMessage from '../Views/CreateMessage';\r\nimport EditTemplate from '../Views/EditTemplate';\r\nimport CreateTemplate from '../Views/CreateTemplate';\r\nimport GameSetup from \"../Views/GameSetup\";\r\nimport PlayerUi from \"../Views/PlayerUi\";\r\n\r\nimport '../scss/App.scss';\r\n\r\nclass Router extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.routes = [\r\n      { path: '/client', action: () => <ChooseInterface /> },\r\n      { path: '/client/umpireMenu', action: () => <GameDesignerInterface/> },\r\n      { path: '/client/umpireMenu/:creatorType', action: () => <UmpireMenu /> },\r\n      { path: '/client/messageCreator', children: [\r\n          { path: '/create/template', action: () => <CreateTemplate /> },\r\n          { path: '/edit/template', action: () => <EditTemplate /> },\r\n          { path: '/create/message', action: () => <CreateMessage /> },\r\n          { path: '/edit/message', action: () => <EditMessage /> },\r\n        ]\r\n      },\r\n      { path: '/client/gameSetup', action: () => <GameSetup /> },\r\n      { path: '/client/playerUi', action: () => <PlayerUi /> },\r\n    ];\r\n\r\n    // let currentPath = new URL(window.location.href).pathname;\r\n\r\n    this.state = {\r\n      currentView: <ChooseInterface />\r\n    };\r\n\r\n    this.router = new UniversalRouter(this.routes);\r\n\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n    this.router.resolve({ pathname: nextProps.currentViewURI }).then(result => {\r\n      this.setState({\r\n        currentView: result,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        { this.state.currentView }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ currentViewURI }) => ({\r\n  currentViewURI\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(Router);\r\n","export default function deepCopy(objectpassed) {\r\n\r\n  // arrays return \"object\" in js so any object or array will be looped to copy deeply.\r\n  // strings, numbers and booleans are deep copied naturally, while any objects within arrays or objects\r\n  // or objects within arrays are only copied shallowly.\r\n  if (objectpassed === null || typeof objectpassed !== 'object') {\r\n    return objectpassed;\r\n  }\r\n\r\n  var temporaryStorage = objectpassed.constructor();\r\n\r\n  for (var key in objectpassed) {\r\n    temporaryStorage[key] = deepCopy((objectpassed[key]));\r\n  }\r\n  return temporaryStorage;\r\n}","import ActionConstant from '../ActionConstants';\r\nimport copyState from \"../copyStateHelper.js\";\r\n\r\nvar initialState = {\r\n  loadingDb: false,\r\n  isLoading: false,\r\n  messages: [],\r\n};\r\n\r\nexport const messageTypesReducer = (state = initialState, action) => {\r\n\r\n  var newState = copyState(state);\r\n\r\n  switch (action.type) {\r\n    case ActionConstant.DB_MESSAGE_TYPES_GET:\r\n      newState.isLoading = action.isLoading;\r\n      return newState;\r\n\r\n    case ActionConstant.DB_MESSAGE_TYPES_SAVED:\r\n      newState.messages = action.payload;\r\n      return newState;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\nimport copyState from \"../copyStateHelper.js\";\r\n\r\nvar initialState = {\r\n  isLoading: false,\r\n  messages: [],\r\n  messagePreviewId: '',\r\n  messagePreview: {}\r\n};\r\n\r\nexport const messagesReducer = (state = initialState, action) => {\r\n\r\n  // redux works on the principle of keeping your data immutable.\r\n  // directly editing the state will cause an error, it leaves immutability up to you,\r\n  // the simplest solution with smallest footprint I've found so far is to use this deepCopy helper I found online.\r\n  var newState = copyState(state);\r\n\r\n  switch (action.type) {\r\n    case ActionConstant.DB_MESSAGES_GET:\r\n      newState.isLoading = action.isLoading;\r\n      return newState;\r\n\r\n    case ActionConstant.DB_MESSAGE_SAVED:\r\n      newState.messages = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.DB_RETURNED_MESSAGE:\r\n      newState.messagePreviewId = action.payload._id;\r\n      newState.messagePreview = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.RESET_MESSAGE_PREVIEW:\r\n      newState.messagePreviewId = '';\r\n      newState.messagePreview = {};\r\n      return newState;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};","import ActionConstant from '../ActionConstants';\r\nimport deepCopy from \"../copyStateHelper.js\";\r\n\r\nconst initialState = {\r\n  selectedSchemaID: '',\r\n  previewSchema: {}\r\n};\r\n\r\nexport const umpireMenuReducer = (state = initialState, action) => {\r\n\r\n  let newState = deepCopy(state);\r\n\r\n  switch (action.type) {\r\n    case ActionConstant.SET_SELECTED_SCHEMA:\r\n      newState.selectedSchemaID = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.SET_PREVIEW_SCHEMA:\r\n      newState.previewSchema = action.payload;\r\n      return newState;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};","import ActionConstant from '../ActionConstants';\r\nimport copyState from \"../../Helpers/copyStateHelper\";\r\nimport uniqId from \"uniqid\";\r\n\r\nimport {\r\n  forceTemplate,\r\n  channelTemplate,\r\n  dbDefaultSettings,\r\n} from \"../../api/consts\";\r\n\r\nvar initialState = {\r\n  isLoading: false,\r\n  wargameList: [],\r\n  currentWargame: '',\r\n  wargameTitle: '',\r\n  validation: {\r\n    validWargameName: true,\r\n    validForceName: true,\r\n    validChannelName: true,\r\n  },\r\n  data: {...dbDefaultSettings.data},\r\n  currentTab: Object.keys(dbDefaultSettings.data)[0],\r\n};\r\n\r\nvar getNameFromPath = function (dbPath) {\r\n  let path = new URL(dbPath).pathname;\r\n  let index = path.lastIndexOf('/');\r\n  return path.substring(index + 1);\r\n};\r\n\r\nexport const wargamesReducer = (state = initialState, action) => {\r\n\r\n  let newState = copyState(state);\r\n\r\n  let tab = newState.currentTab;\r\n\r\n  let curChannel;\r\n  let participantIndex;\r\n  let listWithoutThis;\r\n  let uniqueName;\r\n\r\n  switch (action.type) {\r\n\r\n    case ActionConstant.ALL_WARGAME_NAMES_SAVED:\r\n      newState.wargameList = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.SET_CURRENT_WARGAME:\r\n\r\n      newState.currentWargame = action.payload.name;\r\n      newState.wargameTitle = action.payload.wargameTitle;\r\n      newState.data = action.payload.data;\r\n      return newState;\r\n\r\n    case ActionConstant.SET_WARGAME_NAME:\r\n\r\n      listWithoutThis = [];\r\n\r\n      newState.wargameList.forEach((game) => {\r\n        if (getNameFromPath(game.name) !== newState.currentWargame) listWithoutThis.push(game);\r\n      });\r\n\r\n      uniqueName = listWithoutThis.every((wargame) => wargame.title !== action.payload );\r\n\r\n      newState.validation.validWargameName = uniqueName;\r\n      newState.wargameTitle = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.SET_CURRENT_GAME_SETUP_TAB:\r\n      newState.currentTab = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_GAME_SETUP_DATA:\r\n      newState.data[tab] = {...newState.data[tab], ...action.payload};\r\n      break;\r\n\r\n    case ActionConstant.ADD_NEW_FORCE:\r\n\r\n      let newForce = forceTemplate;\r\n      newForce.forceName = action.payload;\r\n\r\n      newState.data[tab].forces.push(newForce);\r\n\r\n      break;\r\n\r\n    case ActionConstant.SET_SELECTED_FORCE:\r\n      newState.data[tab].selectedForce = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.ADD_NEW_CHANNEL:\r\n\r\n      let newChannel = channelTemplate;\r\n      newChannel.channelName = action.payload;\r\n      newState.data[tab].channels.push(newChannel);\r\n      break;\r\n\r\n    case ActionConstant.UPDATE_CHANNEL_NAME:\r\n\r\n      listWithoutThis = [];\r\n\r\n      let selectedChannel = newState.data[tab].data.selectedChannel;\r\n      let channels = Object.keys(newState.tabs[tab].data.channels);\r\n\r\n      channels.forEach((channel) => {\r\n        if (channel !== selectedChannel) listWithoutThis.push(channel);\r\n      });\r\n\r\n      uniqueName = listWithoutThis.every((channel) => channel !== action.name );\r\n\r\n      newState.validation.validChannelName = uniqueName;\r\n\r\n      if (uniqueName && action.name !== '') {\r\n        newState.tabs[tab].data.channels[action.name] = newState.tabs[tab].data.channels[selectedChannel];\r\n        newState.tabs[tab].data.selectedChannel = action.name;\r\n        delete newState.tabs[tab].data.channels[selectedChannel];\r\n\r\n      }\r\n      break;\r\n\r\n    case ActionConstant.SET_SELECTED_CHANNEL:\r\n      newState.data[tab].selectedChannel = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.DELETE_SELECTED_CHANNEL:\r\n\r\n      let channelIndex = newState.data[tab].channels.findIndex((channel) => channel.channelName === action.payload);\r\n\r\n      newState.data[tab].channels.splice(channelIndex, 1);\r\n      newState.data[tab].selectedChannel = '';\r\n      break;\r\n\r\n    case ActionConstant.SET_FORCE_OVERVIEW:\r\n      let selected = newState.data[tab].selectedForce;\r\n      newState.data[tab].forces.find((f) => f.forceName === selected).overview = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.ADD_NEW_RECIPIENT:\r\n      curChannel = newState.data[tab].selectedChannel;\r\n      let newParticipant = {...action.payload, subscriptionId: uniqId.time()};\r\n      newState.data[tab].channels.find((c) => c.channelName === curChannel).participants.push(newParticipant);\r\n      break;\r\n\r\n    case ActionConstant.UPDATE_RECIPIENT:\r\n      curChannel = newState.data[tab].selectedChannel;\r\n      participantIndex = newState.data[tab].channels.find((c) => c.channelName === curChannel).participants.findIndex((participant) => participant.subscriptionId === action.payload.id);\r\n      newState.data[tab].channels.find((c) => c.channelName === curChannel).participants.splice(participantIndex, 1, {...action.payload.data, subscriptionId: action.payload.id});\r\n      break;\r\n\r\n    case ActionConstant.REMOVE_RECIPIENT:\r\n      curChannel = newState.data[tab].selectedChannel;\r\n      participantIndex = newState.data[tab].channels.find((c) => c.channelName === curChannel).participants.findIndex((participant) => participant.subscriptionId === action.payload);\r\n      newState.data[tab].channels.find((c) => c.channelName === curChannel).participants.splice(participantIndex, 1);\r\n      break;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n\r\n  return newState;\r\n};\r\n","import ActionConstant from '../ActionConstants.js';\r\nimport copyState from \"../copyStateHelper.js\";\r\n\r\nconst initialState = [];\r\n\r\nexport const notificationReducer = (state = initialState, action) => {\r\n\r\n    let newState = copyState(state);\r\n\r\n    switch (action.type) {\r\n      case ActionConstant.ADD_NOTIFICATION:\r\n        console.log(action.payload);\r\n        newState.push(action.payload);\r\n        return newState;\r\n\r\n      case ActionConstant.HIDE_NOTIFICATION:\r\n\r\n        let index = newState.findIndex((item) => item.id === action.id);\r\n        newState.splice(index, 1);\r\n\r\n        return newState;\r\n\r\n      default:\r\n        return newState;\r\n    }\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\nimport copyState from \"../../Helpers/copyStateHelper\";\r\nimport _ from \"lodash\";\r\n\r\nconst initialState = {\r\n  selectedForce: '',\r\n  selectedRole: '',\r\n  selectedChannel: '',\r\n  currentWargame: '',\r\n  wargameTitle: '',\r\n  channels: {},\r\n  allChannels: {},\r\n  forces: {},\r\n  allForces: {},\r\n  messageSchema: {},\r\n  messages: [],\r\n};\r\n\r\nexport const playerUiReducer = (state = initialState, action) => {\r\n\r\n  let newState = copyState(state);\r\n\r\n  switch (action.type) {\r\n\r\n    case ActionConstant.SET_CURRENT_WARGAME_PLAYER:\r\n\r\n      newState.currentWargame = action.payload.name;\r\n      newState.wargameTitle = action.payload.wargameTitle;\r\n\r\n      newState.allChannels = action.payload.data.channels.channels;\r\n      newState.allForces = action.payload.data.forces.forces;\r\n\r\n      break;\r\n\r\n    case ActionConstant.SET_FORCE:\r\n      newState.selectedForce = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_ROLE:\r\n      newState.selectedRole = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_FILTERED_CHANNELS:\r\n\r\n      let channels = {};\r\n\r\n      newState.allChannels.forEach((channel) => {\r\n\r\n        let participants = channel.participants.filter((p) => p.force === newState.selectedForce && p.role === newState.selectedRole);\r\n        let channelActive = channel.participants.some((p) => p.force === newState.selectedForce && p.role === newState.selectedRole);\r\n\r\n        participants = _.uniqWith(participants, _.isEqual);\r\n\r\n        if (channelActive) {\r\n          channels[channel.channelName] = {\r\n            templates: _.flatMap(participants, (participant) => participant.templates),\r\n            messages: []\r\n          };\r\n        }\r\n\r\n        newState.selectedChannel = Object.keys(channels)[0];\r\n        newState.channels = channels;\r\n\r\n      });\r\n\r\n      break;\r\n\r\n    case ActionConstant.SET_CHANNEL:\r\n      newState.selectedChannel = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_MESSAGE_SCHEMA:\r\n      newState.messageSchema = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_LATEST_MESSAGES:\r\n      newState.messages = action.payload;\r\n      break;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n\r\n  return newState;\r\n};\r\n","import ActionConstant from './ActionConstants';\r\nimport copyState from \"./copyStateHelper.js\";\r\n\r\nvar initialState = {\r\n  loadingMessageTypes: true,\r\n  loadingWargames: true,\r\n};\r\n\r\nexport const loadingDbReducer = (state = initialState, action) => {\r\n\r\n  var newState = copyState(state);\r\n\r\n  switch (action.type) {\r\n\r\n    case ActionConstant.POPULATE_MESSAGE_TYPES_DB:\r\n      newState.loadingMessageTypes = action.isLoading;\r\n      return newState;\r\n\r\n    case ActionConstant.POPULATE_WARGAMES_DB:\r\n      newState.loadingWargames = action.isLoading;\r\n      return newState;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport { messageTypesReducer } from \"../ActionsAndReducers/dbMessageTypes/messageTypes_Reducer\";\r\nimport { messagesReducer } from \"../ActionsAndReducers/dbMessages/messages_Reducer\";\r\nimport { currentModal } from \"../ActionsAndReducers/Modal/Modal_Reducer\";\r\nimport { currentViewURIReducer } from \"../ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_Reducer\";\r\nimport { umpireMenuReducer } from \"../ActionsAndReducers/UmpireMenu/umpireMenu_Reducer\";\r\nimport { wargamesReducer } from \"../ActionsAndReducers/dbWargames/wargames_Reducer\";\r\nimport { notificationReducer } from \"../ActionsAndReducers/Notification/Notification_Reducer\";\r\nimport { playerUiReducer } from \"../ActionsAndReducers/playerUi/playerUi_Reducer\";\r\nimport { loadingDbReducer } from \"../ActionsAndReducers/loadingDb_Reducer\";\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\nconst middlewares = [thunk];\r\n\r\nif (process.env.NODE_ENV === `development`) {\r\n  const { logger } = require(`redux-logger`);\r\n  middlewares.push(logger);\r\n}\r\n\r\nexport default createStore(combineReducers({\r\n  messageTypes: messageTypesReducer,\r\n  messages: messagesReducer,\r\n  umpireMenu: umpireMenuReducer,\r\n  currentViewURI: currentViewURIReducer,\r\n  currentModal,\r\n  notifications: notificationReducer,\r\n  wargame: wargamesReducer,\r\n  playerUi: playerUiReducer,\r\n  dbLoading: loadingDbReducer,\r\n}), applyMiddleware(...middlewares));\r\n","import ActionConstant from '../ActionConstants';\r\n\r\nexport const currentViewURIReducer = (state = '/', action) => {\r\n\r\n  let newState = state;\r\n\r\n  switch (action.type) {\r\n    case ActionConstant.SET_CURRENT_VIEW_FROM_URI:\r\n      window.history.pushState({}, '', action.payload);\r\n      newState = action.payload;\r\n      return newState;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};","import ActionConstant from '../ActionConstants.js';\r\nimport copyState from \"../copyStateHelper.js\";\r\n\r\nexport const currentModal = (state = {}, action) => {\r\n\r\n    let newState = copyState(state);\r\n\r\n    switch (action.type) {\r\n      case ActionConstant.OPEN_MODAL:\r\n          newState = action.payload;\r\n          return newState;\r\n        case ActionConstant.CLOSE_MODAL:\r\n          newState = action.payload;\r\n          return newState;\r\n        default:\r\n          newState = {};\r\n          return newState;\r\n    }\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport ModalSwitch from \"./Components/Modals/ModalSwitch\";\r\nimport Notifications from \"./Components/Notifications\";\r\n\r\nimport Router from \"./Components/Router\";\r\n\r\nimport './scss/App.scss';\r\nimport Store from './Store/Store';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    document.title = \"Serge\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Provider store={Store}>\r\n          <Router />\r\n          <ModalSwitch />\r\n          <Notifications />\r\n        </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}