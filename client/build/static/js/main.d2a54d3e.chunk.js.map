{"version":3,"sources":["ActionsAndReducers/ActionConstants.js","ActionsAndReducers/Modal/Modal_ActionCreators.js","Components/Modals/ModalWrapper.jsx","api/consts.js","api/messageTypes_api.js","ActionsAndReducers/playerUi/playerUi_ActionCreators.js","api/wargames_api.js","ActionsAndReducers/Notification/Notification_ActionCreators.js","ActionsAndReducers/dbWargames/wargames_ActionCreators.js","Components/Modals/AddForceModal.jsx","api/messages_api.js","ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_ActionCreators.js","ActionsAndReducers/dbMessages/messages_ActionCreators.js","ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators.js","ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators.js","Components/Modals/DeleteModal.jsx","Components/Modals/AddChannelModal.jsx","Components/Modals/ModalSwitch.jsx","Components/Notification.jsx","Components/Link.jsx","Views/ChooseInterface.jsx","Components/WargameSearchList.jsx","Views/GameDesignerInterface.jsx","Components/JsonCreator.jsx","Components/MessagePreview.jsx","Components/SearchList.jsx","Views/UmpireMenu.jsx","Components/JsonEditor.jsx","Views/EditMessage.jsx","Views/CreateMessage.jsx","Components/jsonSchemaEditor/json-schema-editor/editor.js","Components/jsonSchemaEditor/jsonEditor.js","Components/jsonSchemaEditor/editorPreview.js","Components/jsonSchemaEditor/index.js","Views/EditTemplate.jsx","Views/CreateTemplate.jsx","Components/Inputs/TextInput.jsx","Components/Inputs/DropdownInput.jsx","Components/Layout/Row.jsx","Components/Inputs/TextArea.jsx","Views/TabViews/SettingsTab.jsx","Components/TabsSearchList.jsx","Components/Layout/RemovableGroupItem.jsx","Views/TabViews/ForcesTab.jsx","Components/Layout/EditSubscriptionRow.jsx","Components/Layout/ChannelsTable.jsx","Views/TabViews/ChannelsTab.jsx","Components/ValidationNotification.jsx","Views/TabbedView.jsx","Components/ProgressBar/ProgressBar.jsx","Views/GameSetup.jsx","Views/MessagesList.jsx","Components/MessageCreator.jsx","Components/NewMessage.jsx","Views/MessageFeeds.jsx","Views/PlayerUi.jsx","Components/Router.jsx","ActionsAndReducers/copyStateHelper.js","ActionsAndReducers/dbMessageTypes/messageTypes_Reducer.js","ActionsAndReducers/dbMessages/messages_Reducer.js","ActionsAndReducers/UmpireMenu/umpireMenu_Reducer.js","ActionsAndReducers/dbWargames/wargames_Reducer.js","ActionsAndReducers/Notification/Notification_Reducer.js","ActionsAndReducers/playerUi/playerUi_Reducer.js","Store/Store.jsx","ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_Reducer.js","ActionsAndReducers/Modal/Modal_Reducer.js","Helpers/copyStateHelper.js","App.jsx","index.jsx"],"names":["Object","freeze","ASYNC_SUCCESS","ASYNC_ERROR","ASYNC_LOADING","NORMAL_ACTION","DB_MESSAGE_STATUS","DB_MESSAGE_CREATION_LOADING","DB_MESSAGE_GET_LOADING","DB_SAVE_MESSAGES","DB_MESSAGE_TYPES_GET","DB_MESSAGE_TYPES_SAVED","SET_CURRENT_VIEW_FROM_URI","DB_MESSAGE_SAVED","DB_MESSAGES_GET","DB_RETURNED_MESSAGE","RESET_MESSAGE_PREVIEW","SET_SELECTED_SCHEMA","SET_PREVIEW_SCHEMA","OPEN_MODAL","CLOSE_MODAL","SET_CURRENT_GAME_SETUP_TAB","SET_GAME_SETUP_DATA","ALL_WARGAME_NAMES_SAVED","SET_CURRENT_WARGAME","ADD_NEW_FORCE","SET_SELECTED_FORCE","ADD_NEW_CHANNEL","SET_SELECTED_CHANNEL","SET_WARGAME_NAME","SET_FORCE_OVERVIEW","GAME_TITLE_INVALID","ADD_NEW_RECIPIENT","SHOW_NOTIFICATION","HIDE_NOTIFICATION","UPDATE_RECIPIENT","REMOVE_RECIPIENT","SET_CURRENT_WARGAME_PLAYER","SET_FORCE","SET_ROLE","SET_FILTERED_CHANNELS","SET_CHANNEL","SET_MESSAGE_SCHEMA","SET_LATEST_MESSAGES","modalAction","open","openModal","type","ActionConstant","payload","modal","close","ModalWrapper","handleBackgroundClick","e","target","currentTarget","_this","props","dispatch","setSize","this","editable","react_default","a","createElement","className","onClick","children","Component","connect","serverPath","databasePath","forceTemplate","overview","roles","channelTemplate","dbDefaultSettings","_id","wargameTitle","tabs","0","name","data","gameDescription","spatialRepresentation","planningInterval","replayInterval","turnStrategy","1","forces","selectedForce","2","channels","selectedChannel","db","PouchDB","allDocs","then","entries","rows","length","machine","Date","toISOString","lastUpdated","title","details","machineryFailure","completed","put","setTimeout","weather","weatherForecast","console","log","populateDb","postNewMessage","schema","Promise","resolve","reject","asyncToGenerator","regenerator_default","mark","_callee","allMessages","time","schemaObj","wrap","_context","prev","next","getAllMessagesFromDb","sent","find","messageType","toLowerCase","abrupt","result","catch","err","stop","duplicateMessageInDb","id","get","doc","concat","uniqid","updateMessageInDb","_callee2","_context2","_rev","deleteMessageFromDb","remove","changes","since","include_docs","descending","results","map","filter","hasOwnProperty","setForce","setRole","setFilteredChannels","setChannel","setMessageSchema","setWargameMessages","messages","saveMessage","dbName","message","_ref2","wargame","wargamesApi","_x2","apply","arguments","getMessageTemplate","_ref3","_callee3","template","_context3","messageTemplatesApi","_x3","getAllMessages","_ref4","_callee4","_context4","_x4","wargameDbStore","populateWargame","fetch","response","json","dbs","wargameNames","toCreate","_","difference","pull","forEach","live","on","unshift","promises","game","res","all","createWargame","uniqId","settings","objectSpread","editWargame","dbPath","getNameFromPath","updateWargame","getAllWargames","games","some","updateLocalDoc","duplicateWargame","newDb","newDbName","getWargame","dbId","path","URL","pathname","index","lastIndexOf","substring","showNotification","hideNotification","setCurrentTab","tab","setGameData","setWargameTitle","addNewForce","setSelectedForce","addNewChannel","setSelectedChannel","setForceOverview","saveAllWargameNames","names","setCurrentWargame","addRecipientToChannel","updateRecipient","createNewWargameDB","wargames","omit","clearWargames","window","location","reload","_ref5","_callee5","localDoc","_context5","_x5","AddForceModal","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hideModal","setState","forceName","setNewForceName","value","sameName","currentTab","addForce","state","currentModal","disable","Modals_ModalWrapper","autoFocus","onChange","disabled","_ref","addMessage","messageDetail","el","updatedMessage","getMessage","setCurrentViewFromURI","DBMessageSaveStatus","status","DBSaveMessageArray","DBSaveMessagePreview","loadingDBMessageCreate","isLoading","loadingDBMessageGet","resetMessagePreview","createMessage","check","object","Error","messagesApi","ok","t0","alert","_x","duplicateMessage","messageId","string","updateMessage","responses","_message","toConsumableArray","deleteMessage","getSingleMessage","_ref6","createMessageType","messageTypesApi","duplicateMessageType","updateMessageType","deleteMessageType","getAllMessageTypes","setSelectedSchema","schemaId","setPreviewSchema","DeleteModal","currentViewURI","umpireMenu","selectedSchemaID","messagePreviewId","AddChannelModal","channelName","setChannelName","addChannel","ModalSwitch","Modals_AddForceModal","Modals_DeleteModal","Modals_AddChannelModal","Fragment","Notification","onClickHandler","notification","react_fontawesome_index_es","icon","faTimes","Link","onClickMethod","aNewTab","metaKey","ctrlKey","anExternalLink","href","startsWith","preventDefault","class","UmpireMenu","Components_Link","WargameSearchList","filterMessages","input","searchInput","searchQuery","listData","indexOf","displayControls","activeTitle","hideControls","messageList","nextProps","nextState","nextContext","sameMessagesQuantity","_callee6","_context6","_x6","that","list","key","placeholder","onMouseOver","bind","onMouseLeave","faPencilAlt","setSelectedWargame","faClone","GameDesignerInterface","Components_WargameSearchList","wargameList","JsonCreator","messageTypes","mes","editor","getValue","editorPreviewRef","React","createRef","selectedSchema","destroy","JSONEditor","current","theme","setValue","faSave","ref","MessagePreview","pair","deconstructObj","moment","format","withoutName","item","obj","i","createObjItem","array","of","deconstructArr","boolean","createBoolItem","ISO_8601","isValid","createTimeItem","createStrItem","detail","SearchList","setSelected","active","selected","date","classNames","searchlist-title","setSelectedSchemaId","creatorType","newState","duplicateTemplate","deleteTemplate","split","buildMessageBoard","_ref7","faPlus","Components_SearchList","faTrash","faArrowLeft","size","createSearchListSection","Components_JsonCreator","previewForm","Components_MessagePreview","messagePreview","createTemplatesActions","createMessagesActions","EditMessage","messageToEdit","JsonEditor","Editor","elementId","jsonEditor","renderZone","document","getElementById","PreviewEditor","SchemaEditor","isObjectPropertiesButton","node","matches","span","parentElement","querySelector","innerText","observer","MutationObserver","mutationsList","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","addedNodes","nodeType","classList","add","return","observe","childList","subtree","prototype","updateSchema","validate","getJSON","create","defineProperty","enumerable","writable","no_additional_properties","custom_validators","errors","minimum","maximum","push","property","button","root","getButton","button_holder","getHeaderButtonHolder","appendChild","header","parentNode","insertBefore","nextSibling","addEventListener","contents","blob","Blob","JSON","stringify","navigator","msSaveOrOpenBlob","download","createObjectURL","dataset","downloadurl","join","dispatchEvent","MouseEvent","view","bubbles","cancelable","JsonSchemaEditor","content","schemaEditor","editorBox","assertThisInitialized","updateEditor","saved","defaultValue","newValue","options","newJson","save","counter","defaults","object_layout","layout","booleanOptions","Card","CardHeader","CardBody","CardFooter","EditorPreview","previewBox","editorPreview","iconlib","updateMetaSchema","updatePreviewSchema","updateOptions","properties","Status","enum","Description","metaSchema","jsonMetaSchema","previewSchema","metaschema","jsonSchemaEditor","saveSchema","TextInput","updateStore","numInput","invalid","validInput","DropdownInput","selectOptions","opt","Row","TextArea","style","resize","SettingsTab","updateDescription","updateSpatialRepresentation","updatePlanningInterval","updateReplayInterval","updateTurnStrategy","Inputs_TextArea","Layout_Row","Inputs_DropdownInput","Inputs_TextInput","TabsSearchList","prop","list-title","createList","RemovableGroupItem","ForcesTab","force","updateOverview","curTab","role","Layout_RemovableGroupItem","Components_TabsSearchList","createForceEditor","EditSubscriptionRow","updateSubscriptionForce","option","editSubscriptionForce","updateSubscriptionRole","editSubscriptionRole","updateSubscriptionTemplates","editSubscriptionTemplates","updateChannel","subscriptionData","label","templates","subscriptionId","cancelEdit","react_select_esm","forceOptions","roleOptions","templateOptions","isMulti","ChannelsTable","subscriptionToEdit","setSelectedRole","selectedRole","setSelectedTemplate","selectedTemplates","addToChannel","channelData","values","d","row","j","removeSubscription","editSubscription","_this2","Layout_EditSubscriptionRow","createRow","isDisabled","filterChannels","channelList","curPropsState","keys","nextPropsState","Layout_ChannelsTable","createChannelEditor","ValidationNotification","TabContainer","Typography","component","padding","TabbedView","handleChange","event","invalidFields","classes","AppBar","position","color","Tabs","indicatorColor","textColor","centered","tabName","Tab","TabViews_SettingsTab","TabViews_ForcesTab","ChannelsTab","Components_ValidationNotification","validation","withStyles","flexGrow","backgroundColor","palette","background","paper","ProgressBar","GameSetup","updateWargameTitle","saveWargame","checkAllValid","currentWargame","reduce","entry","parseInt","complete","progress-indicator--active","progress-indicator--complete","validWargameName","link","link--noIcon","link--disabled","Components_ProgressBar_ProgressBar","createIndicators","Views_TabbedView","MessagesList","channel","curChannel","sendMessage","messageDetails","playerUi","from","NewMessage","setTemplate","val","MessageCreator","MessageFeeds","createTabs","createMessageList","MessageFeeds_TabContainer","Views_MessagesList","Components_NewMessage","messageSchema","PlayerUi","updateSelectedForce","updateSelectedRole","goBack","allForces","cursor","Views_MessageFeeds","Router","routes","action","ChooseInterface","Views_GameDesignerInterface","Views_UmpireMenu","CreateTemplate","EditTemplate","CreateMessage","Views_EditMessage","Views_GameSetup","Views_PlayerUi","currentView","router","UniversalRouter","deepCopy","objectpassed","temporaryStorage","constructor","initialState","allChannels","middlewares","thunk","createStore","combineReducers","copyState","history","pushState","recipientIndex","listWithoutThis","uniqueName","every","newParticipant","findIndex","recipient","splice","inputResults","flatMapDeep","flatten","n","isEmpty","isArray","isObject","channelsTab","forcesTab","channelParticipants","channelActive","uniqWith","isEqual","flatMap","participant","applyMiddleware","App","es","store","Store","Components_Router","Modals_ModalSwitch","Components_Notification","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.d2a54d3e.chunk.js","sourcesContent":["export default Object.freeze({\r\n  ASYNC_SUCCESS: 'ASYNC_SUCCESS',\r\n  ASYNC_ERROR: 'ASYNC_ERROR',\r\n  ASYNC_LOADING: 'ASYNC_LOADING',\r\n  NORMAL_ACTION: 'NORMAL_ACTION',\r\n  DB_MESSAGE_STATUS: 'DB_MESSAGE_STATUS',\r\n  DB_MESSAGE_CREATION_LOADING:  'DB_MESSAGE_CREATION_LOADING',\r\n  DB_MESSAGE_GET_LOADING: 'DB_MESSAGE_GET_LOADING',\r\n  DB_SAVE_MESSAGES: 'DB_SAVE_MESSAGES',\r\n  DB_MESSAGE_TYPES_GET: 'DB_MESSAGE_TYPES_GET',\r\n  DB_MESSAGE_TYPES_SAVED: 'DB_MESSAGE_TYPES_SAVED',\r\n  SET_CURRENT_VIEW_FROM_URI: 'SET_CURRENT_VIEW_FROM_URI',\r\n  DB_MESSAGE_SAVED: 'DB_MESSAGE_SAVED',\r\n  DB_MESSAGES_GET: 'DB_MESSAGES_GET',\r\n  DB_RETURNED_MESSAGE: 'DB_RETURNED_MESSAGE',\r\n  RESET_MESSAGE_PREVIEW: 'RESET_MESSAGE_PREVIEW',\r\n  SET_SELECTED_SCHEMA: 'SET_SELECTED_SCHEMA',\r\n  SET_PREVIEW_SCHEMA: 'SET_PREVIEW_SCHEMA',\r\n  OPEN_MODAL: 'OPEN_MODAL',\r\n  CLOSE_MODAL: 'CLOSE_MODAL',\r\n  SET_CURRENT_GAME_SETUP_TAB: 'SET_CURRENT_GAME_SETUP_TAB',\r\n  SET_GAME_SETUP_DATA: 'SET_GAME_SETUP_DATA',\r\n  ALL_WARGAME_NAMES_SAVED: 'ALL_WARGAME_NAMES_SAVED',\r\n  SET_CURRENT_WARGAME: 'SET_CURRENT_WARGAME',\r\n  ADD_NEW_FORCE: 'ADD_NEW_FORCE',\r\n  SET_SELECTED_FORCE: 'SET_SELECTED_FORCE',\r\n  ADD_NEW_CHANNEL: 'ADD_NEW_CHANNEL',\r\n  SET_SELECTED_CHANNEL: 'SET_SELECTED_CHANNEL',\r\n  SET_WARGAME_NAME: 'SET_WARGAME_NAME',\r\n  SET_FORCE_OVERVIEW: 'SET_FORCE_OVERVIEW',\r\n  GAME_TITLE_INVALID: 'GAME_TITLE_INVALID',\r\n  ADD_NEW_RECIPIENT: 'ADD_NEW_RECIPIENT',\r\n  SHOW_NOTIFICATION: 'SHOW_NOTIFICATION',\r\n  HIDE_NOTIFICATION: 'HIDE_NOTIFICATION',\r\n  UPDATE_RECIPIENT: 'UPDATE_RECIPIENT',\r\n  REMOVE_RECIPIENT: 'REMOVE_RECIPIENT',\r\n  SET_CURRENT_WARGAME_PLAYER: 'SET_CURRENT_WARGAME_PLAYER',\r\n  SET_FORCE: 'SET_FORCE',\r\n  SET_ROLE: 'SET_ROLE',\r\n  SET_FILTERED_CHANNELS: 'SET_FILTERED_CHANNELS',\r\n  SET_CHANNEL: 'SET_CHANNEL',\r\n  SET_MESSAGE_SCHEMA: 'SET_MESSAGE_SCHEMA',\r\n  SET_LATEST_MESSAGES: 'SET_LATEST_MESSAGES',\r\n});\r\n","import ActionConstant from '../ActionConstants.js';\r\n\r\nexport const modalAction = {\r\n  open: (openModal) => ({\r\n    type: ActionConstant.OPEN_MODAL,\r\n    payload: {\r\n      open: true,\r\n      modal: openModal,\r\n    },\r\n  }),\r\n\r\n  close: () => ({\r\n    type: ActionConstant.CLOSE_MODAL,\r\n    payload: {\r\n      open: false,\r\n      modal: '',\r\n    },\r\n  })\r\n};\r\n","import React, {Component}  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\n\r\nclass ModalWrapper extends Component {\r\n\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  handleBackgroundClick = (e) => {\r\n    if (e.target === e.currentTarget) this.props.dispatch(modalAction.close());\r\n  };\r\n\r\n  render() {\r\n    const setSize = this.props.editable ? \"modal setsize\": 'modal';\r\n\r\n    return (\r\n      <div className=\"modal-bg\" onClick={this.handleBackgroundClick}>\r\n        <div className={setSize}>\r\n          {this.props.children}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default connect()(ModalWrapper);","\r\nexport const serverPath = 'https://serge-dev.herokuapp.com/';\r\nexport const databasePath = 'https://serge-dev.herokuapp.com/db/';\r\n// export const serverPath = 'http://localhost:8080/';\r\n// export const databasePath = 'http://localhost:8080/db/';\r\nexport const MSG_STORE = \"messages\";\r\nexport const MSG_TYPE_STORE = \"message_types\";\r\n\r\nexport const headers = {\r\n  'Content-Type': 'application/json',\r\n  'Access-Control-Allow-Origin': '*',\r\n  'Access-Control-Allow-Methods': 'POST',\r\n  'Access-Control-Allow-Headers': 'Authorization, Lang'\r\n};\r\n\r\nexport const forceTemplate = {\r\n  overview: 'An overview written here..',\r\n  roles: ['General']\r\n};\r\n\r\nexport const channelTemplate = [];\r\n\r\n\r\nexport const dbDefaultSettings = {\r\n  _id: '_local/settings',\r\n  wargameTitle: 'wargame',\r\n  tabs: {\r\n    0: {\r\n      name: \"Overview - settings\",\r\n      data: {\r\n        gameDescription: '',\r\n        spatialRepresentation: '',\r\n        planningInterval: null,\r\n        replayInterval: null,\r\n        turnStrategy: '',\r\n      }\r\n    },\r\n    1: {\r\n      name: \"Forces\",\r\n      data: {\r\n        forces: {},\r\n        roles: ['General'],\r\n        selectedForce: '',\r\n      },\r\n    },\r\n    2: {\r\n      name: \"Channels\",\r\n      data: {\r\n        channels: {},\r\n        selectedChannel: '',\r\n      },\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// export const channelTemplate = [{\r\n//   force: 'white',\r\n//   role: 'General',\r\n//   template: {\r\n//     name: '',\r\n//     id: '',\r\n//   },\r\n//   // subscriptionId: uniqid.time(),\r\n// }];\r\n","import uniqid from \"uniqid\";\r\n\r\nimport PouchDB from \"pouchdb\";\r\nimport { databasePath,\r\n         MSG_TYPE_STORE } from \"./consts\";\r\n\r\nimport machineryFailure from '../Schemas/machinery_failure.json';\r\nimport weatherForecast from '../Schemas/weather_forecase.json';\r\n\r\nvar db = new PouchDB(databasePath+MSG_TYPE_STORE);\r\n\r\nvar populateDb = function () {\r\n  var machine = {\r\n    _id: new Date().toISOString(),\r\n    lastUpdated: new Date().toISOString(),\r\n    title: 'machinery failure',\r\n    details: machineryFailure,\r\n    completed: false\r\n  };\r\n  db.put(machine);\r\n\r\n  setTimeout(function () {\r\n    var weather = {\r\n      _id: new Date().toISOString(),\r\n      lastUpdated: new Date().toISOString(),\r\n      title: 'weather forecast',\r\n      details: weatherForecast,\r\n      completed: false\r\n    };\r\n    db.put(weather).then(() => {\r\n      console.log('DATA BASE COMPLETE');\r\n    });\r\n  },2000);\r\n};\r\n\r\ndb.allDocs().then(entries => {\r\n  if (entries.rows.length === 0) {\r\n    populateDb();\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\nexport const postNewMessage = (schema) => {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    (async() => {\r\n\r\n      const allMessages = await getAllMessagesFromDb();\r\n\r\n      const matchedName = allMessages.find((messageType) => messageType.title.toLowerCase() === schema.title.toLowerCase());\r\n\r\n      if (matchedName) {\r\n        reject(\"Message title already used\");\r\n        return;\r\n      }\r\n\r\n      let time = new Date().toISOString();\r\n\r\n      var schemaObj = {\r\n        _id: time,\r\n        lastUpdated: time,\r\n        title: schema.title,\r\n        details: schema,\r\n        completed: false\r\n      };\r\n\r\n      return db.put(schemaObj)\r\n        .then(function (result) {\r\n          resolve(result);\r\n        })\r\n        .catch(function (err) {\r\n          console.log(err);\r\n          reject(false);\r\n        });\r\n\r\n    })();\r\n  });\r\n};\r\n\r\nexport const duplicateMessageInDb = (id) => {\r\n\r\n  let time = new Date().toISOString();\r\n\r\n  return new Promise((resolve, reject) => {\r\n    db.get(id)\r\n      .then(function (doc) {\r\n\r\n        // var updatedMessage = doc.details;\r\n\r\n        doc.details.title = `${doc.details.title} Copy-${uniqid.time()}`;\r\n\r\n        return db.put({\r\n          _id: time,\r\n          lastUpdated: time,\r\n          title: doc.details.title,\r\n          details: doc.details,\r\n        });\r\n      })\r\n      .then(function () {\r\n        resolve(true);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        reject(false);\r\n      })\r\n  });\r\n};\r\n\r\nexport const updateMessageInDb = (schema, id) => {\r\n  return new Promise((resolve, reject) => {\r\n    (async() => {\r\n\r\n      const allMessages = await getAllMessagesFromDb();\r\n\r\n      const matchedName = allMessages.find((messageType) => messageType.title.toLowerCase() === schema.title.toLowerCase());\r\n\r\n      if (matchedName) {\r\n        reject(\"Message title already used\");\r\n        return;\r\n      }\r\n\r\n      db.get(id)\r\n        .then(function (doc) {\r\n          return db.put({\r\n            _id: doc._id,\r\n            lastUpdated: new Date().toISOString(),\r\n            _rev: doc._rev,\r\n            title: schema.title,\r\n            details: schema\r\n          });\r\n        })\r\n        .then(function (result) {\r\n          resolve(result);\r\n        })\r\n        .catch(function (err) {\r\n          console.log(err);\r\n          reject(false);\r\n        })\r\n\r\n    })();\r\n  });\r\n};\r\n\r\nexport const deleteMessageFromDb = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    db.get(id)\r\n      .then(function (doc) {\r\n        return db.remove(doc);\r\n      })\r\n      .then(function (result) {\r\n        resolve(result);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        reject(false);\r\n      })\r\n  });\r\n};\r\n\r\nexport const getAllMessagesFromDb = () => {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    return db.changes({\r\n      since: 1,\r\n      include_docs: true,\r\n      descending: true,\r\n    })\r\n      .then(function (changes) {\r\n\r\n        let results = changes.results.map((a) => a.doc);\r\n        results = results.filter((a) => !a.hasOwnProperty('_deleted') && a.hasOwnProperty('details'));\r\n\r\n        resolve(results);\r\n      })\r\n      .catch(function (err) {\r\n        // handle errors\r\n        reject(err);\r\n        console.log(err);\r\n      });\r\n  });\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\nimport * as wargamesApi from \"../../api/wargames_api\";\r\nimport * as messageTemplatesApi from \"../../api/messageTypes_api\";\r\n\r\nconst setCurrentWargame = (data) => ({\r\n  type: ActionConstant.SET_CURRENT_WARGAME_PLAYER,\r\n  payload: data\r\n});\r\n\r\nexport const setForce = (data) => ({\r\n  type: ActionConstant.SET_FORCE,\r\n  payload: data\r\n});\r\n\r\nexport const setRole = (data) => ({\r\n  type: ActionConstant.SET_ROLE,\r\n  payload: data\r\n});\r\n\r\nexport const setFilteredChannels = () => ({\r\n  type: ActionConstant.SET_FILTERED_CHANNELS,\r\n});\r\n\r\nexport const setChannel = (data) => ({\r\n  type: ActionConstant.SET_CHANNEL,\r\n  payload: data,\r\n});\r\n\r\nexport const setMessageSchema = (schema) => ({\r\n  type: ActionConstant.SET_MESSAGE_SCHEMA,\r\n  payload: schema,\r\n});\r\n\r\nexport const setWargameMessages = (messages) => ({\r\n  type: ActionConstant.SET_LATEST_MESSAGES,\r\n  payload: messages,\r\n});\r\n\r\nexport const getWargame = () => {\r\n  return async (dispatch) => {\r\n\r\n    await wargamesApi.populateWargame();\r\n\r\n    // will get active wargame during later stages\r\n    let wargame = await wargamesApi.getWargame();\r\n    dispatch(setCurrentWargame(wargame));\r\n  }\r\n};\r\n\r\nexport const saveMessage = (dbName, details, message) => {\r\n  return async (dispatch) => {\r\n\r\n    await wargamesApi.postNewMessage(dbName, details, message);\r\n\r\n    let wargame = await wargamesApi.getWargame();\r\n    let messages = await wargamesApi.getAllMessages(wargame.name);\r\n\r\n    dispatch(setWargameMessages(messages));\r\n  }\r\n};\r\n\r\nexport const getMessageTemplate = (id) => {\r\n  return async (dispatch) => {\r\n    let messages = await messageTemplatesApi.getAllMessagesFromDb();\r\n\r\n    var template = messages.find((message) => message._id === id);\r\n\r\n    dispatch(setMessageSchema(template.details));\r\n  }\r\n};\r\n\r\nexport const getAllMessages = () => {\r\n  return async (dispatch) => {\r\n\r\n    var wargame = await wargamesApi.getWargame();\r\n\r\n    var messages = await wargamesApi.getAllMessages(wargame.name);\r\n\r\n    dispatch(setWargameMessages(messages));\r\n  }\r\n};\r\n","import uniqid from \"uniqid\";\r\nimport _ from \"lodash\";\r\nimport {fetch} from \"whatwg-fetch\";\r\n\r\nimport PouchDB from \"pouchdb\";\r\nimport {  databasePath,\r\n          serverPath,\r\n          dbDefaultSettings,\r\n          MSG_STORE,\r\n          MSG_TYPE_STORE } from \"./consts\";\r\n\r\nimport {setWargameMessages} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\n\r\nvar wargameDbStore = [];\r\n\r\nexport const populateWargame = (dispatch) => {\r\n  return fetch(serverPath+'allDbs')\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((dbs) => {\r\n      let wargameNames = wargameDbStore.map((db) => db.name);\r\n      let toCreate = _.difference(dbs, wargameNames);\r\n      toCreate = _.pull(toCreate, MSG_STORE, MSG_TYPE_STORE, \"_replicator\", \"_users\");\r\n\r\n      toCreate.forEach((name) => {\r\n        var db = new PouchDB(databasePath+name);\r\n\r\n        db.changes({since: 'now', live: true})\r\n          .on('change', function () {\r\n            (async () => {\r\n              let messages = await getAllMessages(name);\r\n              dispatch(setWargameMessages(messages));\r\n            })();\r\n          });\r\n\r\n        wargameDbStore.unshift({name, db});\r\n      });\r\n\r\n      let promises = wargameDbStore.map((game) => {\r\n        return game.db.get(dbDefaultSettings._id)\r\n          .then(function (res) {\r\n            return {\r\n              name: game.db.name,\r\n              title: res.wargameTitle\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      });\r\n      return Promise.all(promises);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const clearWargames = () => {\r\n  fetch(serverPath+'clearAll')\r\n    .then(() => {\r\n      window.location.reload(true);\r\n    });\r\n};\r\n\r\nexport const createWargame = () => {\r\n  let uniqId = uniqid.time();\r\n\r\n  var name = `wargame-${uniqId}`;\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    var db = new PouchDB(databasePath+name);\r\n\r\n    wargameDbStore.unshift({name, db});\r\n\r\n    let settings = {...dbDefaultSettings, name: name};\r\n    settings.wargameTitle = `${settings.wargameTitle}-${uniqId}`;\r\n\r\n    db.put(settings)\r\n      .then(() => {\r\n        resolve(db.get(settings._id));\r\n      });\r\n  });\r\n};\r\n\r\nexport const editWargame = (dbPath) => {\r\n\r\n  let dbName = getNameFromPath(dbPath);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      var db = wargameDbStore.find((db) => db.name === dbName).db;\r\n      db.get(dbDefaultSettings._id)\r\n        .then((res) => {\r\n          resolve(res);\r\n        });\r\n    } catch (err) {\r\n      reject(err);\r\n      return;\r\n    }\r\n  });\r\n};\r\n\r\nexport const updateWargame = (dbName, data, title) => {\r\n\r\n  return getAllWargames()\r\n    .then(function (games) {\r\n      if (games.some((game) => game.title === title && getNameFromPath(game.name) !== dbName)) return 'invalid';\r\n      return updateLocalDoc(dbName, data, title);\r\n    })\r\n    .catch(function (err) {\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const duplicateWargame = (dbPath) => {\r\n\r\n  let dbName = getNameFromPath(dbPath);\r\n\r\n  let db = wargameDbStore.find((db) => db.name === dbName).db;\r\n  let uniqId = uniqid.time();\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    var newDb;\r\n    var newDbName = `wargame-${uniqId}`;\r\n\r\n    db.get(dbDefaultSettings._id)\r\n      .then((res) => {\r\n        newDb = new PouchDB(databasePath+newDbName);\r\n        return res;\r\n      })\r\n      .then((res) => {\r\n        return newDb.put({\r\n          _id: dbDefaultSettings._id,\r\n          name: newDbName,\r\n          wargameTitle: `${res.wargameTitle}-${uniqId}`,\r\n          tabs: res.tabs,\r\n        })\r\n          .then(() => {\r\n            return res;\r\n          })\r\n      })\r\n      .then(() => {\r\n        wargameDbStore.unshift({name: newDbName, db: newDb});\r\n        return getAllWargames();\r\n      })\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n        console.log(err);\r\n      })\r\n  });\r\n};\r\n\r\nexport const getWargame = () => {\r\n  return new Promise((resolve, reject) => {\r\n    wargameDbStore[0].db.get(dbDefaultSettings._id)\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      })\r\n  });\r\n};\r\n\r\nexport const postNewMessage = (dbName, details, message) => {\r\n\r\n  let db = wargameDbStore.find((db) => db.name === dbName).db;\r\n  let uniqId = uniqid.time();\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    db.put({\r\n      _id: uniqId,\r\n      details,\r\n      message,\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  });\r\n};\r\n\r\nexport const getAllMessages = (dbId) => {\r\n\r\n  let db = wargameDbStore.find((db) => db.name === dbId).db;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    return db.changes({\r\n      since: 1,\r\n      include_docs: true,\r\n      descending: true,\r\n    })\r\n      .then(function (changes) {\r\n\r\n        let results = changes.results.map((a) => a.doc);\r\n        resolve(results);\r\n      })\r\n      .catch(function (err) {\r\n        // handle errors\r\n        reject(err);\r\n        console.log(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport var getAllWargames = function () {\r\n\r\n  let promises = wargameDbStore.map((game) => {\r\n    return game.db.get(dbDefaultSettings._id)\r\n      .then(function (res) {\r\n        return {\r\n          name: game.db.name,\r\n          title: res.wargameTitle\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  });\r\n  return Promise.all(promises);\r\n};\r\n\r\nvar updateLocalDoc = function(dbName, tabs, title) {\r\n\r\n  console.log(dbName);\r\n\r\n  var db = wargameDbStore.find((db) => db.name === dbName).db;\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    db.get(dbDefaultSettings._id)\r\n      .then((res) => {\r\n        db.put({\r\n          _id: dbDefaultSettings._id,\r\n          _rev: res._rev,\r\n          name: dbName,\r\n          wargameTitle: title,\r\n          tabs: tabs,\r\n        })\r\n          .then(() => {\r\n            resolve(db.get(dbDefaultSettings._id));\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          })\r\n      });\r\n  });\r\n};\r\n\r\nvar getNameFromPath = function (dbPath) {\r\n  let path = new URL(dbPath).pathname;\r\n  let index = path.lastIndexOf('/');\r\n  return path.substring(index + 1);\r\n};\r\n","import ActionConstant from '../ActionConstants.js';\r\n\r\nexport const showNotification = (payload) => ({\r\n  type: ActionConstant.SHOW_NOTIFICATION,\r\n  payload: {\r\n    open: true,\r\n    message: payload,\r\n  },\r\n});\r\n\r\nexport const hideNotification = () => ({\r\n  type: ActionConstant.HIDE_NOTIFICATION,\r\n  payload: {\r\n    open: false,\r\n    message: '',\r\n  },\r\n});\r\n","import ActionConstant from '../ActionConstants';\r\nimport 'whatwg-fetch';\r\nimport _ from \"lodash\";\r\n\r\nimport * as wargamesApi from \"../../api/wargames_api\";\r\nimport { showNotification } from \"../Notification/Notification_ActionCreators\";\r\n\r\nexport const setCurrentTab = (tab) => ({\r\n  type: ActionConstant.SET_CURRENT_GAME_SETUP_TAB,\r\n  payload: tab\r\n});\r\n\r\nexport const setGameData = (data) => ({\r\n  type: ActionConstant.SET_GAME_SETUP_DATA,\r\n  payload: data,\r\n});\r\n\r\nexport const setWargameTitle = (data) => ({\r\n  type: ActionConstant.SET_WARGAME_NAME,\r\n  payload: data,\r\n});\r\n\r\nexport const gameTitleInvalid = (data) => ({\r\n  type: ActionConstant.GAME_TITLE_INVALID,\r\n  payload: data,\r\n});\r\n\r\nexport const addNewForce = (data) => ({\r\n  type: ActionConstant.ADD_NEW_FORCE,\r\n  payload: data,\r\n});\r\n\r\nexport const setSelectedForce = (payload) => ({\r\n  type: ActionConstant.SET_SELECTED_FORCE,\r\n  payload\r\n});\r\n\r\n\r\nexport const addNewChannel = (data) => ({\r\n  type: ActionConstant.ADD_NEW_CHANNEL,\r\n  payload: data,\r\n});\r\n\r\n\r\nexport const setSelectedChannel = (payload) => ({\r\n  type: ActionConstant.SET_SELECTED_CHANNEL,\r\n  payload\r\n});\r\n\r\n\r\nexport const setForceOverview = (payload) => ({\r\n  type: ActionConstant.SET_FORCE_OVERVIEW,\r\n  payload,\r\n});\r\n\r\n\r\nconst saveAllWargameNames = (names) => ({\r\n  type: ActionConstant.ALL_WARGAME_NAMES_SAVED,\r\n  payload: names\r\n});\r\n\r\n\r\nconst setCurrentWargame = (data) => ({\r\n  type: ActionConstant.SET_CURRENT_WARGAME,\r\n  payload: data\r\n});\r\n\r\n\r\nexport const addRecipientToChannel = (data) => ({\r\n  type: ActionConstant.ADD_NEW_RECIPIENT,\r\n  payload: data,\r\n});\r\n\r\nexport const updateRecipient = (id, data) => ({\r\n  type: ActionConstant.UPDATE_RECIPIENT,\r\n  payload: { id,data }\r\n});\r\n\r\nexport const removeRecipient = (id) => ({\r\n  type: ActionConstant.REMOVE_RECIPIENT,\r\n  payload: id\r\n});\r\n\r\n\r\nexport const populateWargameStore = () => {\r\n  return async (dispatch) => {\r\n\r\n    var wargameNames = await wargamesApi.populateWargame(dispatch);\r\n\r\n    dispatch(saveAllWargameNames(wargameNames));\r\n  }\r\n};\r\n\r\n\r\nexport const createNewWargameDB = () => {\r\n\r\n  return async (dispatch) => {\r\n\r\n    var wargame = await wargamesApi.createWargame();\r\n\r\n    let wargames = await wargamesApi.getAllWargames();\r\n\r\n    dispatch(saveAllWargameNames(wargames));\r\n\r\n    dispatch(setCurrentWargame(_.omit(wargame, ['_id', '_rev'])));\r\n  }\r\n};\r\n\r\n\r\nexport const clearWargames = () => {\r\n\r\n  return async (dispatch) => {\r\n\r\n    await wargamesApi.clearWargames();\r\n\r\n    let wargames = await wargamesApi.getAllWargames();\r\n    dispatch(saveAllWargameNames(wargames));\r\n\r\n  }\r\n};\r\n\r\n\r\nexport const editWargame = (name) => {\r\n  return async (dispatch) => {\r\n\r\n    let wargame = await wargamesApi.editWargame(name);\r\n\r\n    dispatch(setCurrentWargame(wargame));\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const updateWargame = (dbName, data, title) => {\r\n\r\n  return async (dispatch) => {\r\n\r\n    let localDoc = await wargamesApi.updateWargame(dbName, data, title);\r\n\r\n    let wargames = await wargamesApi.getAllWargames();\r\n\r\n    dispatch(saveAllWargameNames(wargames));\r\n\r\n    dispatch(setCurrentWargame(localDoc));\r\n\r\n    dispatch(showNotification(\"wargame saved.\"));\r\n\r\n  }\r\n};\r\n\r\n\r\nexport const duplicateWargame = (dbName) => {\r\n  return async (dispatch) => {\r\n\r\n    var games = await wargamesApi.duplicateWargame(dbName);\r\n\r\n    dispatch(saveAllWargameNames(games));\r\n  }\r\n};\r\n\r\n","import React, {Component} from 'react';\r\nimport ModalWrapper from './ModalWrapper';\r\nimport \"../../scss/App.scss\";\r\nimport { connect } from 'react-redux';\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport {addNewForce, setSelectedForce} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nclass AddForceModal extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      forceName: ''\r\n    };\r\n  }\r\n\r\n  hideModal = () => {\r\n\r\n    this.setState({\r\n      forceName: '',\r\n    });\r\n\r\n    this.props.dispatch(modalAction.close());\r\n  };\r\n\r\n\r\n  setNewForceName = (e) => {\r\n\r\n    this.setState({\r\n      forceName: e.target.value,\r\n      sameName: this.props.wargame.tabs[this.props.wargame.currentTab].data.forces[e.target.value]\r\n    });\r\n  };\r\n\r\n  addForce = () => {\r\n    this.props.dispatch(addNewForce(this.state.forceName));\r\n    this.props.dispatch(setSelectedForce(this.state.forceName));\r\n  };\r\n\r\n  render() {\r\n\r\n    if (!this.props.currentModal.open) return false;\r\n\r\n    var disable = this.state.forceName.length < 1 || this.state.sameName;\r\n\r\n    return (\r\n      <ModalWrapper>\r\n        <div className=\"display-text-wrapper\">\r\n          <h3>Create force</h3>\r\n          {this.state.sameName ? <p className=\"notification\">Already exists</p> : false}\r\n          <input autoFocus className=\"modal-input\" type=\"text\" onChange={this.setNewForceName} />\r\n          <div className=\"buttons\">\r\n            <button disabled={disable} name=\"add\" className=\"btn btn-action btn-action--primary\" onClick={this.addForce}>Add</button>\r\n            <button name=\"cancel\" className=\"btn btn-action btn-action--secondary\" onClick={this.hideModal}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </ModalWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame, currentModal }) => ({\r\n  wargame,\r\n  currentModal\r\n});\r\n\r\nexport default connect(mapStateToProps)(AddForceModal);\r\n","import uniqid from \"uniqid\";\r\n\r\nimport PouchDB from \"pouchdb\";\r\nimport {  databasePath,\r\n          MSG_STORE} from \"./consts\";\r\n\r\n\r\nvar db = new PouchDB(databasePath+MSG_STORE);\r\n\r\n\r\nexport const addMessage = (messageDetail, schema) => {\r\n  return new Promise((resolve, reject) => {\r\n    (async() => {\r\n\r\n      const allMessages = await getAllMessagesFromDb();\r\n      const matchedName = allMessages.find((el) => el.details.title === messageDetail.title && el._id !== messageDetail.id);\r\n\r\n      if (matchedName) {\r\n        reject(\"Message title already used\");\r\n        return;\r\n      }\r\n\r\n      let time = new Date().toISOString();\r\n\r\n      let message = {\r\n        _id: time,\r\n        lastUpdated: time,\r\n        details: messageDetail,\r\n        schema: schema,\r\n        completed: false\r\n      };\r\n\r\n      return db.put(message)\r\n        .then(function (result) {\r\n          resolve(result);\r\n        })\r\n        .catch(function (err) {\r\n          console.log(err);\r\n          reject(false);\r\n        })\r\n\r\n    })();\r\n  });\r\n};\r\n\r\nexport const duplicateMessageInDb = (id) => {\r\n\r\n  let time = new Date().toISOString();\r\n\r\n  return new Promise((resolve, reject) => {\r\n    db.get(id)\r\n      .then(function (doc) {\r\n\r\n        var updatedMessage = doc.details;\r\n\r\n        updatedMessage.title = `${updatedMessage.title} Copy-${uniqid.time()}`;\r\n\r\n        return db.put({\r\n          _id: time,\r\n          lastUpdated: time,\r\n          details: updatedMessage,\r\n          schema: doc.schema\r\n        });\r\n      })\r\n      .then(function () {\r\n        resolve(true);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        reject(false);\r\n      })\r\n  });\r\n};\r\n\r\nexport const getAllMessagesFromDb = () => {\r\n  return new Promise((resolve, reject) => {\r\n    return db.changes({\r\n      since: 0,\r\n      include_docs: true,\r\n      descending: true,\r\n    })\r\n      .then(function (changes) {\r\n\r\n        let results = changes.results.map((a) => a.doc);\r\n        results = results.filter((a) => !a.hasOwnProperty('_deleted') && a.hasOwnProperty('details'));\r\n\r\n        resolve(results);\r\n      })\r\n      .catch(function (err) {\r\n        // handle errors\r\n        reject(err);\r\n        console.log(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const updateMessageInDb = (id, message) => {\r\n  return new Promise((resolve, reject) => {\r\n    (async() => {\r\n\r\n      const allMessages = await getAllMessagesFromDb();\r\n      const matchedName = allMessages.find((el) => el.details.title === message.title && el._id !== id);\r\n\r\n      if (matchedName) {\r\n        reject(\"Message title already used\");\r\n        return;\r\n      }\r\n\r\n      db.get(id)\r\n        .then(function (doc) {\r\n          return db.put({\r\n            _id: id,\r\n            lastUpdated: new Date().toISOString(),\r\n            _rev: doc._rev,\r\n            details: message,\r\n            schema: doc.schema\r\n          });\r\n        })\r\n        .then(function (result) {\r\n          resolve(result);\r\n        })\r\n        .catch(function (err) {\r\n          console.log(err);\r\n          reject(false);\r\n        });\r\n\r\n    })();\r\n  });\r\n};\r\n\r\nexport const getMessage = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    db.get(id, {include_docs: true}, function(err, doc) {\r\n      if (err) reject('something went wrong');\r\n      resolve(doc);\r\n    });\r\n  });\r\n};\r\n\r\nexport const deleteMessageFromDb = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    db.get(id)\r\n      .then(function (doc) {\r\n        return db.remove(doc);\r\n      })\r\n      .then(function (result) {\r\n        resolve(result);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        reject(false);\r\n      })\r\n  });\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\n\r\nexport const setCurrentViewFromURI = (path) => ({\r\n  type: ActionConstant.SET_CURRENT_VIEW_FROM_URI,\r\n  payload: path\r\n});","import ActionConstant from '../ActionConstants';\r\nimport 'whatwg-fetch';\r\nimport check from 'check-types';\r\n\r\nimport * as messagesApi from \"../../api/messages_api\";\r\n\r\nimport { showNotification } from \"../Notification/Notification_ActionCreators\";\r\nimport {setCurrentViewFromURI} from \"../setCurrentViewFromURI/setCurrentViewURI_ActionCreators\";\r\n\r\nconst DBMessageSaveStatus = (status) => ({\r\n  type: ActionConstant.DB_MESSAGE_STATUS,\r\n  payload: status\r\n});\r\n\r\nconst DBSaveMessageArray = (messages) => ({\r\n  type: ActionConstant.DB_MESSAGE_SAVED,\r\n  payload: messages\r\n});\r\n\r\nconst DBSaveMessagePreview = (message) => ({\r\n  type: ActionConstant.DB_RETURNED_MESSAGE,\r\n  payload: message\r\n});\r\n\r\nconst loadingDBMessageCreate = (isLoading) => ({\r\n  type: ActionConstant.DB_MESSAGE_CREATION_LOADING,\r\n  isLoading\r\n});\r\n\r\nconst loadingDBMessageGet = (isLoading) => ({\r\n  type: ActionConstant.DB_MESSAGES_GET,\r\n  isLoading\r\n});\r\n\r\nexport const resetMessagePreview = () => ({\r\n  type: ActionConstant.RESET_MESSAGE_PREVIEW,\r\n});\r\n\r\n\r\nexport const createMessage = (message, schema) => {\r\n\r\n  if (!check.object(message)) throw Error(`createMessageType() requires object with message, from & to NOT. ${message}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    try {\r\n      var result = await messagesApi.addMessage(message, schema);\r\n\r\n      if (result.err) {\r\n        dispatch(showNotification(result.err));\r\n      }\r\n\r\n      if (result.ok) {\r\n        dispatch(DBMessageSaveStatus(result));\r\n        let messages = await messagesApi.getAllMessagesFromDb();\r\n        dispatch(DBSaveMessageArray(messages));\r\n        dispatch(loadingDBMessageCreate(false));\r\n        dispatch(setCurrentViewFromURI(\"/client/umpireMenu/library\"));\r\n      }\r\n    } catch(e) {\r\n      dispatch(loadingDBMessageCreate(false));\r\n      alert(e);\r\n    }\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const duplicateMessage = (messageId) => {\r\n\r\n  if (!check.string(messageId)) throw Error(`duplicateMessage() requires a string Not. ${messageId}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    var result = await messagesApi.duplicateMessageInDb(messageId);\r\n\r\n    if (result) {\r\n      dispatch(DBMessageSaveStatus(result));\r\n      let messages = await messagesApi.getAllMessagesFromDb();\r\n      dispatch(DBSaveMessageArray(messages));\r\n    }\r\n    dispatch(loadingDBMessageCreate(false));\r\n  }\r\n};\r\n\r\n\r\nexport const updateMessage = (message, id) => {\r\n\r\n  if (!check.object(message)) throw Error(`updateMessage() requires object with message, from & to NOT. ${message}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    try {\r\n      const result = await messagesApi.updateMessageInDb(id, message);\r\n\r\n      if (result.err) {\r\n        dispatch(showNotification(result.err));\r\n      }\r\n\r\n      if (result.ok) {\r\n        dispatch(DBMessageSaveStatus(result));\r\n\r\n        let responses = await Promise.all([messagesApi.getAllMessagesFromDb(), messagesApi.getMessage(result.id)]);\r\n        let [messages, message] = [...responses];\r\n\r\n        dispatch(DBSaveMessagePreview(message));\r\n        dispatch(DBSaveMessageArray(messages));\r\n        dispatch(loadingDBMessageCreate(false));\r\n        dispatch(setCurrentViewFromURI(\"/client/umpireMenu/library\"));\r\n\r\n      }\r\n    } catch (e) {\r\n      // CREATE ERROR WARNING MESSAGE\r\n      dispatch(loadingDBMessageCreate(false));\r\n      alert(e);\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport const deleteMessage = (messageId) => {\r\n\r\n  if (!check.string(messageId)) throw Error(`duplicateMessage() requires a string Not. ${messageId}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    var result = await messagesApi.deleteMessageFromDb(messageId);\r\n\r\n    if (result) {\r\n      let messages = await messagesApi.getAllMessagesFromDb();\r\n      dispatch(DBSaveMessageArray(messages));\r\n      dispatch(resetMessagePreview());\r\n    } else {\r\n      // error action\r\n    }\r\n\r\n    dispatch(loadingDBMessageCreate(false));\r\n  }\r\n};\r\n\r\n\r\nexport const getSingleMessage = (id) => {\r\n\r\n  if (!check.string(id)) throw Error(`duplicateMessage() requires a string id..`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageGet(true));\r\n\r\n    let result = await messagesApi.getMessage(id);\r\n\r\n    dispatch(DBSaveMessagePreview(result));\r\n    dispatch(loadingDBMessageGet(false));\r\n  }\r\n};\r\n\r\nexport const getAllMessages = () => {\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageGet(true));\r\n\r\n    let result = await messagesApi.getAllMessagesFromDb();\r\n\r\n    dispatch(DBSaveMessageArray(result));\r\n    dispatch(loadingDBMessageGet(false));\r\n  }\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\nimport 'whatwg-fetch';\r\nimport check from 'check-types';\r\n\r\nimport * as messageTypesApi from \"../../api/messageTypes_api\";\r\n\r\nimport {setCurrentViewFromURI} from \"../setCurrentViewFromURI/setCurrentViewURI_ActionCreators\";\r\nimport {showNotification} from \"../Notification/Notification_ActionCreators\";\r\n\r\nconst DBMessageSaveStatus = (status) => ({\r\n  type: ActionConstant.DB_MESSAGE_STATUS,\r\n  payload: status\r\n});\r\n\r\nconst DBSaveMessageArray = (messages) => ({\r\n  type: ActionConstant.DB_MESSAGE_TYPES_SAVED,\r\n  payload: messages\r\n});\r\n\r\nconst loadingDBMessageCreate = (isLoading) => ({\r\n  type: ActionConstant.DB_MESSAGE_CREATION_LOADING,\r\n  isLoading\r\n});\r\n\r\nconst loadingDBMessageGet = (isLoading) => ({\r\n  type: ActionConstant.DB_MESSAGE_TYPES_GET,\r\n  isLoading\r\n});\r\n\r\n\r\nexport const createMessageType = (schema) => {\r\n\r\n  if (!check.object(schema)) throw Error(`createMessageType() requires schema object & NOT. ${schema}`);\r\n\r\n  return async (dispatch) => {\r\n\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    try {\r\n\r\n      var result = await messageTypesApi.postNewMessage(schema);\r\n\r\n      if (result.err) {\r\n        dispatch(showNotification(result.err));\r\n        dispatch(loadingDBMessageCreate(false));\r\n      }\r\n\r\n      if (result.ok) {\r\n        dispatch(DBMessageSaveStatus(result));\r\n        let messages = await messageTypesApi.getAllMessagesFromDb();\r\n        dispatch(DBSaveMessageArray(messages));\r\n\r\n        dispatch(loadingDBMessageCreate(false));\r\n        dispatch(setCurrentViewFromURI(\"/client/umpireMenu/templates\"));\r\n      }\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport const duplicateMessageType = (id) => {\r\n\r\n  if (!check.string(id)) throw Error(`duplicateTemplate() requires a string Not. ${id}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    var result = await messageTypesApi.duplicateMessageInDb(id);\r\n\r\n    if (result) {\r\n      dispatch(DBMessageSaveStatus(true));\r\n      let messages = await messageTypesApi.getAllMessagesFromDb();\r\n      dispatch(DBSaveMessageArray(messages));\r\n    }\r\n    dispatch(loadingDBMessageCreate(false));\r\n  }\r\n};\r\n\r\nexport const updateMessageType = (schema, id) => {\r\n\r\n  if (!check.object(schema)) throw Error(`updateMessageType() requires schema & not ${schema}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    try {\r\n      const result = await messageTypesApi.updateMessageInDb(schema, id);\r\n\r\n      if (result.err) {\r\n        dispatch(showNotification(result.err));\r\n        dispatch(loadingDBMessageCreate(false));\r\n      }\r\n\r\n      if (result.ok) {\r\n        dispatch(DBMessageSaveStatus(result.ok));\r\n\r\n        let allMessages = await messageTypesApi.getAllMessagesFromDb();\r\n\r\n        dispatch(DBSaveMessageArray(allMessages));\r\n        dispatch(loadingDBMessageCreate(false));\r\n        dispatch(setCurrentViewFromURI(\"/client/umpireMenu/templates\"));\r\n\r\n      }\r\n    } catch (e) {\r\n      // CREATE ERROR WARNING MESSAGE\r\n      dispatch(loadingDBMessageCreate(false));\r\n      alert(e);\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport const deleteMessageType = (messageId) => {\r\n\r\n  if (!check.string(messageId)) throw Error(`deleteMessage() requires a string of id not. ${messageId}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    var result = await messageTypesApi.deleteMessageFromDb(messageId);\r\n\r\n    if (result) {\r\n      let messages = await messageTypesApi.getAllMessagesFromDb();\r\n      dispatch(DBSaveMessageArray(messages));\r\n    } else {\r\n      // error action\r\n    }\r\n\r\n    dispatch(loadingDBMessageCreate(false));\r\n  }\r\n};\r\n\r\n\r\nexport const getAllMessageTypes = () => {\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageGet(true));\r\n\r\n    let result = await messageTypesApi.getAllMessagesFromDb();\r\n\r\n    dispatch(DBSaveMessageArray(result));\r\n    dispatch(loadingDBMessageGet(false));\r\n  }\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\n\r\nexport const setSelectedSchema = (schemaId) => ({\r\n  type: ActionConstant.SET_SELECTED_SCHEMA,\r\n  payload: schemaId\r\n});\r\n\r\n\r\nexport const setPreviewSchema = (schema) => ({\r\n  type: ActionConstant.SET_PREVIEW_SCHEMA,\r\n  payload: schema\r\n});","import React, {Component} from 'react';\r\nimport ModalWrapper from './ModalWrapper';\r\nimport \"../../scss/App.scss\";\r\nimport { connect } from 'react-redux';\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport { deleteMessage } from \"../../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\nimport { deleteMessageType } from \"../../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\nimport {setPreviewSchema, setSelectedSchema} from \"../../ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators\";\r\n\r\nclass DeleteModal extends Component {\r\n\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  hideModal = () => {\r\n    this.props.dispatch(modalAction.close());\r\n  };\r\n\r\n  deleteMessage = () => {\r\n    if (this.props.currentViewURI === \"/client/umpireMenu/templates\") {\r\n      this.props.dispatch(deleteMessageType(this.props.umpireMenu.selectedSchemaID));\r\n      this.props.dispatch(setPreviewSchema(\"\"));\r\n      this.props.dispatch(setSelectedSchema(\"\"));\r\n    } else {\r\n      this.props.dispatch(deleteMessage(this.props.messages.messagePreviewId));\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    if (!this.props.currentModal.open) return false; // needed ?\r\n\r\n    return (\r\n      <ModalWrapper>\r\n        <div className=\"display-text-wrapper\">\r\n          <h3>Delete</h3>\r\n          <p>This will permanently remove the message.<br/>Are you sure?</p>\r\n          <div className=\"buttons\">\r\n            <button name=\"delete\" className=\"btn btn-action btn-action--primary\" onClick={this.deleteMessage}>Delete</button>\r\n            <button name=\"cancel\" className=\"btn btn-action btn-action--secondary\" onClick={this.hideModal}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </ModalWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ currentModal, messages, umpireMenu, currentViewURI }) => ({\r\n  currentModal,\r\n  messages,\r\n  umpireMenu,\r\n  currentViewURI\r\n});\r\n\r\nexport default connect(mapStateToProps)(DeleteModal);\r\n","import React, {Component} from 'react';\r\nimport ModalWrapper from './ModalWrapper';\r\nimport \"../../scss/App.scss\";\r\nimport { connect } from 'react-redux';\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport {\r\n  addNewChannel,\r\n  setSelectedChannel\r\n} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nclass AddChannelModal extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      channelName: ''\r\n    };\r\n  }\r\n\r\n  hideModal = () => {\r\n\r\n    this.setState({\r\n      channelName: '',\r\n    });\r\n\r\n    this.props.dispatch(modalAction.close());\r\n  };\r\n\r\n\r\n  setChannelName = (e) => {\r\n\r\n    this.setState({\r\n      channelName: e.target.value,\r\n      sameName: this.props.wargame.tabs[this.props.wargame.currentTab].data.channels[e.target.value]\r\n    });\r\n  };\r\n\r\n  addChannel = () => {\r\n    this.props.dispatch(addNewChannel(this.state.channelName));\r\n    this.props.dispatch(setSelectedChannel(this.state.channelName));\r\n  };\r\n\r\n  render() {\r\n\r\n    if (!this.props.currentModal.open) return false;\r\n\r\n    var disable = this.state.channelName.length < 1 || this.state.sameName;\r\n\r\n    return (\r\n      <ModalWrapper>\r\n        <div className=\"display-text-wrapper\">\r\n          <h3>Create channel</h3>\r\n          {this.state.sameName ? <p className=\"notification\">Already exists</p> : false}\r\n          <input autoFocus className=\"modal-input\" type=\"text\" onChange={this.setChannelName} />\r\n          <div className=\"buttons\">\r\n            <button disabled={disable} name=\"add\" className=\"btn btn-action btn-action--primary\" onClick={this.addChannel}>Add</button>\r\n            <button name=\"cancel\" className=\"btn btn-action btn-action--secondary\" onClick={this.hideModal}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </ModalWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame, currentModal }) => ({\r\n  wargame,\r\n  currentModal\r\n});\r\n\r\nexport default connect(mapStateToProps)(AddChannelModal);\r\n","import React, {Component} from 'react';\r\nimport \"../../scss/App.scss\";\r\nimport { connect } from 'react-redux';\r\nimport AddForceModal from \"./AddForceModal\";\r\nimport DeleteModal from './DeleteModal';\r\nimport AddChannelModal from \"./AddChannelModal\";\r\n\r\nclass ModalSwitch extends Component {\r\n\r\n  render() {\r\n\r\n    var modal;\r\n\r\n    switch (this.props.currentModal.modal) {\r\n\r\n      case \"addForce\":\r\n        modal = <AddForceModal />;\r\n        break;\r\n\r\n      case \"delete\":\r\n        modal = <DeleteModal />;\r\n        break;\r\n\r\n      case \"addChannel\":\r\n        modal = <AddChannelModal />;\r\n        break;\r\n\r\n      default:\r\n        modal = false;\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {modal}\r\n      </>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = ({ currentModal }) => ({\r\n  currentModal,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ModalSwitch);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\n\r\nimport { hideNotification } from \"../ActionsAndReducers/Notification/Notification_ActionCreators\";\r\n\r\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nclass Notification extends Component {\r\n\r\n  onClickHandler = (e) => {\r\n\r\n    this.props.dispatch(hideNotification());\r\n\r\n  };\r\n\r\n  render() {\r\n\r\n\r\n    if (!this.props.notification.open) return false;\r\n\r\n    return (\r\n        <div id=\"notification\">\r\n          {this.props.notification.message}<FontAwesomeIcon icon={faTimes} onClick={this.onClickHandler} />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ notification }) => ({\r\n  notification,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Notification);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport { setCurrentViewFromURI } from \"../ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_ActionCreators\"\r\n\r\nimport '../scss/App.scss';\r\n\r\nclass Link extends Component {\r\n\r\n  onClickHandler = (e) => {\r\n\r\n    if (this.props.onClickMethod) this.props.onClickMethod();\r\n\r\n    const aNewTab = e.metaKey || e.ctrlKey;\r\n    const anExternalLink = this.props.href.startsWith('http');\r\n\r\n    if (!aNewTab && !anExternalLink) {\r\n      e.preventDefault();\r\n      this.props.dispatch(setCurrentViewFromURI(this.props.href));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <a href={this.props.href} onClick={this.onClickHandler} id={this.props.id ? this.props.id : null} className={this.props.class ? this.props.class : null}>\r\n        {this.props.children}\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default connect()(Link);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Link from \"../Components/Link\";\r\n\r\nimport '../scss/App.scss';\r\nimport {populateWargameStore} from \"../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nclass UmpireMenu extends Component {\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(populateWargameStore());\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"umpire\" className=\"flex-content-wrapper\">\r\n        <div className=\"flex-content flex-content--fill\">\r\n          <Link href=\"/client/umpireMenu\" class=\"link link--secondary link--large\">Umpire Menu</Link>\r\n          <Link href=\"/client/playerUi\" class=\"link link--secondary link--large\">Player UI</Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = () => ({});\r\n\r\nexport default connect(mapStateToProps)(UmpireMenu);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\nimport _ from \"lodash\";\r\n\r\nimport {\r\n  editWargame,\r\n  duplicateWargame,\r\n} from \"../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nimport {setCurrentViewFromURI} from \"../ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_ActionCreators\";\r\n\r\nimport {faClone, faPencilAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nclass WargameSearchList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageList: this.props.listData,\r\n      searchQuery: this.props.listData,\r\n      searchInput: \"\",\r\n    };\r\n  }\r\n\r\n\r\n  componentWillUpdate(nextProps, nextState, nextContext) {\r\n\r\n    let sameMessagesQuantity = _.difference(nextProps.listData, this.state.messageList).length;\r\n\r\n    if (\r\n      nextProps.listData.length !== this.state.messageList.length ||\r\n      (sameMessagesQuantity !== 0 && this.state.searchInput.length === 0)\r\n    ) {\r\n      this.setState({\r\n        messageList: nextProps.listData\r\n      });\r\n    }\r\n\r\n    if (\r\n      this.state.searchInput.length > 0 &&\r\n      sameMessagesQuantity !== 0\r\n    ) {\r\n      this.filterMessages();\r\n    }\r\n  }\r\n\r\n  setSelectedWargame(name) {\r\n    this.props.dispatch(editWargame(name));\r\n    this.props.dispatch(setCurrentViewFromURI('/client/gameSetup'));\r\n  }\r\n\r\n  duplicateWargame(name) {\r\n    this.props.dispatch(duplicateWargame(name));\r\n  }\r\n\r\n  filterMessages = (input) => {\r\n\r\n    let value = input ? input.target.value : this.state.searchInput;\r\n\r\n    let searchQuery = this.props.listData.filter(function(db) {\r\n      return db.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n    });\r\n\r\n    this.setState({\r\n      searchQuery,\r\n      searchInput: input ? value : this.state.searchInput\r\n    });\r\n  };\r\n\r\n  displayControls = (activeTitle) => {\r\n    this.setState({\r\n      activeTitle,\r\n    });\r\n  };\r\n\r\n  hideControls = () => {\r\n    this.setState({\r\n      activeTitle: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    var that = this;\r\n\r\n    var list = this.state.searchInput ? this.state.searchQuery : this.state.messageList;\r\n\r\n    return (\r\n      <div className=\"searchlist\">\r\n        <input type=\"text\" className=\"searchlist-input\" key=\"search-templates\" placeholder=\"Search games\" onChange={ this.filterMessages } value={this.state.searchInput} />\r\n        <div className=\"searchlist-list\">\r\n          { list.map(function(db) {\r\n            // let active\r\n            return (\r\n              <span className=\"searchlist-title\" key={db.title} onMouseOver={that.displayControls.bind(that, db.title)} onMouseLeave={that.hideControls}>\r\n                {db.title}\r\n                {that.state.activeTitle === db.title ?\r\n                  <>\r\n                    <FontAwesomeIcon icon={faPencilAlt} onClick={that.setSelectedWargame.bind(that, db.name)} />\r\n                    <FontAwesomeIcon icon={faClone} onClick={that.duplicateWargame.bind(that, db.name)} />\r\n                  </>\r\n                  : null\r\n                }\r\n              </span>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// empty mapStateToProps is here for react-redux to wire up the dispatch function to props so firing actions is possible.\r\nconst mapStateToProps = () => ({});\r\n\r\n\r\nexport default connect(mapStateToProps)(WargameSearchList);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Link from \"../Components/Link\";\r\n\r\nimport '../scss/App.scss';\r\n// import SearchList from \"../Components/SearchList\";\r\n\r\nimport {\r\n  createNewWargameDB,\r\n  clearWargames,\r\n} from \"../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nimport WargameSearchList from \"../Components/WargameSearchList\";\r\n\r\nclass GameDesignerInterface extends Component {\r\n\r\n  createWargame = () => {\r\n    this.props.dispatch(createNewWargameDB());\r\n  };\r\n\r\n  clearWargames = () => {\r\n    this.props.dispatch(clearWargames());\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"umpire\" className=\"flex-content-wrapper\">\r\n        <div className=\"flex-content flex-content--big\">\r\n          <Link href=\"/client/umpireMenu/templates\" class=\"link link--secondary link--large\">Message Templates</Link>\r\n          <Link href=\"/client/umpireMenu/library\" class=\"link link--secondary link--large\">Message Library</Link>\r\n        </div>\r\n        <div className=\"flex-content flex-content--big\">\r\n          <span>Games</span>\r\n          <Link\r\n            href=\"/client/gameSetup\"\r\n            class=\"link link--noIcon\"\r\n            onClickMethod={this.createWargame}\r\n          >Create</Link>\r\n          <Link\r\n            href=\"/client/umpireMenu\"\r\n            class=\"link link--noIcon link--secondary\"\r\n            onClickMethod={this.clearWargames}\r\n          >Clear wargames</Link>\r\n          <WargameSearchList key=\"searchlist\"\r\n                             listData={this.props.wargame.wargameList}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// empty mapStateToProps is here for react-redux to wire up the dispatch function to props so firing actions is possible.\r\nconst mapStateToProps = ({wargame}) => ({\r\n  wargame\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(GameDesignerInterface);\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createMessage,\r\n} from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport JSONEditor from '@json-editor/json-editor';\r\n// import flatpickr from \"flatpickr\";\r\n// for json.. datetime-local\r\n// \"flatpickr\": {\r\n//   \"wrap\": true,\r\n//     \"time_24hr\": true,\r\n//     \"allowInput\": true\r\n// }\r\nimport '../scss/App.scss';\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSave} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nclass JsonCreator extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.editor = null;\r\n    this.editorPreviewRef = React.createRef();\r\n\r\n    this.state = {\r\n      selectedSchema: ''\r\n    };\r\n  }\r\n\r\n\r\n  componentWillUpdate(nextProps, nextState, nextContext) {\r\n\r\n    if (this.editor && nextProps.umpireMenu.selectedSchemaID !== this.props.umpireMenu.selectedSchemaID) {\r\n      this.editor.destroy();\r\n      this.editor = null;\r\n    }\r\n\r\n    if (\r\n      nextProps.umpireMenu.selectedSchemaID.length > 0 &&\r\n      nextProps.messageTypes &&\r\n      nextProps.messageTypes.messages.length > 0\r\n    ) {\r\n\r\n      if (this.editor) return;\r\n\r\n      this.editor = new JSONEditor(this.editorPreviewRef.current, {\r\n        schema: nextProps.messageTypes.messages.find((mes) => mes._id === nextProps.umpireMenu.selectedSchemaID).details,\r\n        theme: 'bootstrap4'\r\n      });\r\n    }\r\n\r\n    if (\r\n      nextProps.messages.messagePreviewId.length > 0 &&\r\n      nextProps.messageTypes.messages.length > 0 &&\r\n      !nextProps.disabled\r\n    ) {\r\n\r\n      const data = nextProps.messages.messages.find(function(mes) {\r\n        return mes._id.toLowerCase().indexOf(nextProps.messages.messagePreviewId.toLowerCase()) > -1;\r\n      });\r\n      this.editor.setValue(data.details);\r\n    }\r\n\r\n    if (this.props.disabled && this.editor) {\r\n      this.editor.disable();\r\n    }\r\n  }\r\n\r\n\r\n  saveMessage = () => {\r\n    let schema = this.props.messageTypes.messages.find((mes) => mes._id === this.props.umpireMenu.selectedSchemaID).details;\r\n\r\n    this.props.dispatch(createMessage(this.editor.getValue(), {...schema, _id: this.props.umpireMenu.selectedSchemaID}));\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"button-wrap\">\r\n          {!this.props.disabled ? <span onClick={this.saveMessage} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span> : null }\r\n        </div>\r\n          <div id=\"preview-editor\" ref={this.editorPreviewRef}></div>\r\n        <div className=\"button-wrap\">\r\n          {!this.props.disabled ? <span onClick={this.saveMessage} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span> : null }\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, selectedSchema, umpireMenu }) => ({\r\n  messages,\r\n  messageTypes,\r\n  selectedSchema,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(JsonCreator);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\nimport check from \"check-types\";\r\nimport moment from \"moment\";\r\n\r\nclass MessagePreview extends Component {\r\n\r\n  createObjItem(pair) {\r\n    const that = this;\r\n    return (\r\n      <>\r\n        {/*<h3>{pair[0]}</h3>*/}\r\n        <span key={`objItem--${pair[0]}-${pair[1]}`} className=\"group-section\">{ that.deconstructObj(pair[1]) }</span>\r\n      </>\r\n    )\r\n  }\r\n\r\n  createBoolItem(pair) {\r\n    return <span key={`boolItem--${pair[0]}-${pair[1]}`}>{pair[1] ? pair[0] : false}</span>\r\n  }\r\n\r\n  createTimeItem(pair) {\r\n\r\n    return (\r\n      <>\r\n        <h3>{pair[0]}</h3>\r\n        <span key={`dateTime-${pair[1]}`}>{moment(pair[1]).format('Do MMMM YYYY, HH:mm')}</span>\r\n      </>\r\n    )\r\n  }\r\n\r\n  createStrItem(pair, withoutName) {\r\n    return <span key={`strItem-${pair[0]}-${pair[1]}`}><b>{pair[0]}: </b>{pair[1]}</span>\r\n  }\r\n\r\n  deconstructArr(pair) {\r\n    const that = this;\r\n    return (\r\n      <>\r\n        <h3>{pair[0]}</h3>\r\n        {pair[1].map((item) => {\r\n          // CHECK NAME PROP ON EVERY OBJ\r\n          return (\r\n              <span key={`section-${item.name}`}>{ that.deconstructObj(item) }</span>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\n  deconstructObj(obj) {\r\n\r\n    const that = this;\r\n    const keyPropPairs = Object.entries(obj);\r\n\r\n    return keyPropPairs.map((pair, i) => {\r\n\r\n      if (check.object(pair[1])) return that.createObjItem(pair);\r\n      if (check.array.of.object(pair[1])) return that.deconstructArr(pair);\r\n      if (check.boolean(pair[1])) return that.createBoolItem(pair);\r\n\r\n      if (moment(pair[1], moment.ISO_8601, true).isValid()) return that.createTimeItem(pair);\r\n\r\n      return that.createStrItem(pair);\r\n\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    if (!this.props.detail) return false;\r\n\r\n    const that = this;\r\n    const keyPropPairs = Object.entries(this.props.detail);\r\n\r\n    return keyPropPairs.map((pair, i) => {\r\n\r\n      if (i===0) return <h2 key={`title-${pair[1]}`}>{pair[1]}</h2>;\r\n\r\n      if (check.object(pair[1])) return that.createObjItem(pair);\r\n      if (check.array.of.object(pair[1])) return that.deconstructArr(pair);\r\n      if (check.boolean(pair[1])) return that.createBoolItem(pair);\r\n      if (moment(pair[1], moment.ISO_8601, true).isValid()) return that.createTimeItem(pair);\r\n\r\n      return (\r\n        <>\r\n          <h3>{pair[0]}</h3>\r\n          <span key={`${pair[0]}-${pair[1]}`}>{pair[1]}</span>\r\n        </>\r\n      )\r\n\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport default connect()(MessagePreview);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\n\r\nimport moment from \"moment\";\r\nimport classNames from \"classnames\";\r\nimport {PropTypes} from \"prop-types\";\r\n\r\nclass SearchList extends Component {\r\n\r\n  setSelected = (item) => {\r\n    this.props.setSelected(item);\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    var that = this;\r\n\r\n    return (\r\n      <div className=\"searchlist\">\r\n        <input type=\"text\" className=\"searchlist-input\" key=\"search-templates\" placeholder={this.props.placeholder} onChange={ this.props.filter } value={this.props.searchQuery} />\r\n        <div className=\"searchlist-list\">\r\n          { this.props.listData.map(function(item) {\r\n\r\n            // onClick handlers should not contain instantiating () to pass a specific value, .bind can be used here this is a simpler\r\n            // ES5 way to pass properties to click handlers from arrays, another option is to build a sub-component but I don't like\r\n            // how the data moves back and forth, it breaks Reacts initial idea of 1 way data flow.\r\n\r\n            let active = item._id === that.props.selected ? 'active' : null;\r\n\r\n            let title = item.details.title;\r\n            let date = moment(item.lastUpdated).format('DD/MM/YY');\r\n            return <span className={classNames({\"searchlist-title\": true, active})} href=\"#\" onClick={that.setSelected.bind(that, item)} key={item._id}>{title} - {date}</span>\r\n          })\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// empty mapStateToProps is here for react-redux to wire up the dispatch function to props so firing actions is possible.\r\nconst mapStateToProps = ({ currentViewURI, umpireMenu }) => ({\r\n  currentViewURI,\r\n  umpireMenu\r\n});\r\n\r\nSearchList.propTypes = {\r\n  listData: PropTypes.array.isRequired,\r\n  filter: PropTypes.func.isRequired,\r\n  selected: PropTypes.string.isRequired,\r\n  setSelected: PropTypes.func.isRequired,\r\n  searchQuery: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nexport default connect(mapStateToProps)(SearchList);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Link from \"../Components/Link\";\r\n\r\nimport {\r\n  getAllMessageTypes,\r\n  duplicateMessageType,\r\n} from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n\r\nimport {\r\n  getAllMessages,\r\n  duplicateMessage, getSingleMessage\r\n} from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport { modalAction } from \"../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\n\r\n\r\nimport JsonCreator from \"../Components/JsonCreator\";\r\nimport MessagePreview from \"../Components/MessagePreview\";\r\nimport '../scss/App.scss';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPencilAlt, faClone, faTrash, faArrowLeft,faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport SearchList from \"../Components/SearchList\";\r\nimport {setSelectedSchema} from \"../ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators\";\r\n\r\nclass UmpireMenu extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let creatorType = this.props.currentViewURI.split('/')[3];\r\n\r\n    this.state = {\r\n      searchQuery: '',\r\n      creatorType: creatorType,\r\n      messageList: creatorType === 'templates' ? this.props.messageTypes.messages : this.props.messages.messages,\r\n    };\r\n\r\n    this.buildMessageBoard();\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(setSelectedSchema(\"\"));\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.state.searchQuery.length === 0) {\r\n      // only on page load\r\n      this.setState({\r\n        messageList: this.state.creatorType === 'templates' ? nextProps.messageTypes.messages : nextProps.messages.messages,\r\n      });\r\n    }\r\n\r\n    if (nextProps.messages.messages.length !== this.props.messages.messages.length) setTimeout(this.filterMessages, 1); // setTimeout to wait one tick to allow messageList to update\r\n  }\r\n\r\n\r\n  buildMessageBoard() {\r\n\r\n    switch (this.state.creatorType) {\r\n\r\n      case 'templates':\r\n        // get template data action\r\n        this.props.dispatch(getAllMessageTypes());\r\n        break;\r\n\r\n      case 'library':\r\n        // get library data action\r\n        this.props.dispatch(getAllMessages());\r\n        break;\r\n\r\n      default:\r\n        // throw developer an error\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  setSelectedSchemaId = (item) => {\r\n\r\n    switch (this.state.creatorType) {\r\n      case 'templates':\r\n        this.props.dispatch(setSelectedSchema(item._id));\r\n        break;\r\n\r\n      case 'library':\r\n        this.props.dispatch(setSelectedSchema(item.schema._id));\r\n        this.props.dispatch(getSingleMessage(item._id));\r\n        break;\r\n\r\n      default:\r\n        console.log('error');\r\n        break;\r\n    }\r\n  };\r\n\r\n\r\n  // event listener functions from the DOM will lose scope of this to the React Class unless stated as an arrow function\r\n  // or this is bound to them within the constructor like.. this.filterMessages = this.filterMessages.bind(this);\r\n  // arrow functions are es6 syntax and preferable if babel compiler can compile them. - They have the scope of where they're\r\n  // defined unlike a normal function that has it's own scope.\r\n  filterMessages = (input) => {\r\n\r\n    let value = input ? input.target.value : this.state.searchQuery;\r\n\r\n    let newState;\r\n\r\n    switch (this.state.creatorType) {\r\n      case 'templates':\r\n        newState = this.props.messageTypes.messages.filter(function(mes) {\r\n          return mes.details.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n        });\r\n        break;\r\n\r\n      case 'library':\r\n        newState = this.props.messages.messages.filter(function(mes) {\r\n          return mes.details.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n        });\r\n        break;\r\n\r\n      default:\r\n        newState = [];\r\n        break;\r\n    }\r\n\r\n    this.setState({\r\n      messageList: newState,\r\n      searchQuery: value\r\n    });\r\n  };\r\n\r\n\r\n  createSearchListSection() {\r\n\r\n    switch (this.state.creatorType) {\r\n\r\n      case 'templates':\r\n\r\n        return [\r\n            <Link href=\"/client/messageCreator/create/template\" key=\"templates\" class=\"link\"><FontAwesomeIcon icon={faPlus} />Create new template</Link>,\r\n            <SearchList key=\"searchlist\"\r\n                        listData={this.state.messageList}\r\n                        searchQuery={this.state.searchQuery}\r\n                        filter={this.filterMessages}\r\n                        selected={this.props.umpireMenu.selectedSchemaID}\r\n                        setSelected={this.setSelectedSchemaId}\r\n                        placeholder={'Select template'}\r\n            />\r\n        ];\r\n\r\n      case 'library':\r\n\r\n        return [\r\n            <Link href=\"/client/messageCreator/create/message\" key=\"messages\" class=\"link\"><FontAwesomeIcon icon={faPlus} />Create new Message</Link>,\r\n            <SearchList key=\"searchlist\"\r\n                        listData={this.state.messageList}\r\n                        searchQuery={this.state.searchQuery}\r\n                        filter={this.filterMessages}\r\n                        selected={this.props.messages.messagePreviewId}\r\n                        setSelected={this.setSelectedSchemaId}\r\n                        placeholder={'Select template'}\r\n            />\r\n        ];\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  createMessagesActions() {\r\n    return this.props.messages.messagePreviewId.length > 0 ?\r\n      <>\r\n        <Link class=\"link link--secondary\" href={this.state.creatorType === 'templates' ? \"/messageCreator/edit/template\" : \"/messageCreator/edit/message\"}><FontAwesomeIcon icon={faPencilAlt} />Edit</Link>\r\n        <span className=\"link link--secondary\" onClick={this.duplicateMessage}><FontAwesomeIcon icon={faClone} />Duplicate</span>\r\n        <span className=\"link link--secondary\" onClick={this.deleteMessage}><FontAwesomeIcon icon={faTrash} />Delete</span>\r\n      </>\r\n      :\r\n      null;\r\n  }\r\n\r\n\r\n  createTemplatesActions() {\r\n    return this.props.umpireMenu.selectedSchemaID.length > 0 ?\r\n      <>\r\n        <Link class=\"link link--secondary\" href={this.state.creatorType === 'templates' ? \"/messageCreator/edit/template\" : \"/messageCreator/edit/message\"}><FontAwesomeIcon icon={faPencilAlt} />Edit</Link>\r\n        <span className=\"link link--secondary\" onClick={this.duplicateTemplate}><FontAwesomeIcon icon={faClone} />Duplicate</span>\r\n        <span className=\"link link--secondary\" onClick={this.deleteTemplate}><FontAwesomeIcon icon={faTrash} />Delete</span>\r\n      </>\r\n      :\r\n      null;\r\n  };\r\n\r\n\r\n  duplicateTemplate = () => {\r\n    this.props.dispatch(duplicateMessageType(this.props.umpireMenu.selectedSchemaID))\r\n  };\r\n\r\n\r\n  deleteTemplate = () => {\r\n    this.props.dispatch(modalAction.open(\"delete\"));\r\n  };\r\n\r\n\r\n  duplicateMessage = () => {\r\n    this.props.dispatch(duplicateMessage(this.props.messages.messagePreviewId));\r\n  };\r\n\r\n\r\n  deleteMessage = () => {\r\n    this.props.dispatch(modalAction.open(\"delete\"));\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message {this.state.creatorType}</h1>\r\n        <div className=\"flex-content-wrapper\">\r\n          <div id=\"selection\" className=\"flex-content\">\r\n            { this.createSearchListSection() }\r\n          </div>\r\n          <div id=\"preview\" className=\"flex-content flex-content--big\">\r\n            <p className=\"heading--sml\">Preview</p>\r\n            { this.state.creatorType === 'templates' ?\r\n              <JsonCreator id=\"preview\"\r\n                           disabled={true}\r\n                           previewForm={true}\r\n              />\r\n            :\r\n              <div id=\"message-preview\">\r\n                <MessagePreview detail={this.props.messages.messagePreview.details} />\r\n              </div>\r\n            }\r\n          </div>\r\n          <div id=\"function\" className=\"flex-content flex-content--sml\">\r\n            <p className=\"heading--sml\">Actions</p>\r\n\r\n            {this.state.creatorType === 'templates' ?\r\n              this.createTemplatesActions()\r\n            :\r\n              this.createMessagesActions()\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messageTypes, messages, currentViewURI, umpireMenu }) => ({\r\n  messageTypes,\r\n  messages,\r\n  currentViewURI,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(UmpireMenu);\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  updateMessage,\r\n} from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport JSONEditor from '@json-editor/json-editor';\r\nimport '../scss/App.scss';\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSave} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nclass JsonCreator extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.editor = null;\r\n    this.editorPreviewRef = React.createRef();\r\n\r\n    this.state = {\r\n      selectedSchema: ''\r\n    };\r\n  }\r\n\r\n\r\n  componentWillUpdate(nextProps, nextState, nextContext) {\r\n\r\n    if (this.editor && nextProps.umpireMenu.selectedSchemaID !== this.props.umpireMenu.selectedSchemaID) {\r\n      this.editor.destroy();\r\n      this.editor = null;\r\n    }\r\n\r\n    // check logic\r\n    if (\r\n      nextProps.messages.messagePreviewId.length > 0 ||\r\n      nextProps.umpireMenu.selectedSchemaID.length > 0\r\n      // nextProps.messages.messagePreviewId.length > 0 &&\r\n      // nextProps.umpireMenu.selectedSchemaID.length > 0\r\n    ) {\r\n\r\n      if (this.editor) return;\r\n\r\n      this.editor = new JSONEditor(this.editorPreviewRef.current, {\r\n        schema: nextProps.messages.messagePreview.schema,\r\n        theme: 'bootstrap4'\r\n      });\r\n    }\r\n\r\n    if (nextProps.messages.messagePreview.details) {\r\n      this.editor.setValue(nextProps.messages.messagePreview.details);\r\n    }\r\n\r\n    if (this.props.disabled && this.editor) {\r\n      this.editor.disable();\r\n    }\r\n  }\r\n\r\n\r\n  saveMessage = () => {\r\n    this.props.dispatch(updateMessage(this.editor.getValue(), this.props.messages.messagePreviewId));\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"button-wrap\">\r\n          {!this.props.disabled ? <span onClick={this.saveMessage} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span> : null }\r\n        </div>\r\n          <div id=\"preview-editor\" ref={this.editorPreviewRef}></div>\r\n        <div className=\"button-wrap\">\r\n          {!this.props.disabled ? <span onClick={this.saveMessage} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span> : null }\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, selectedSchema, umpireMenu }) => ({\r\n  messages,\r\n  messageTypes,\r\n  selectedSchema,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(JsonCreator);\r\n","import React, { Component } from 'react';\r\nimport '../scss/App.scss';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport JsonEditor from \"../Components/JsonEditor\";\r\n\r\nimport { getAllMessageTypes } from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n// import { resetMessagePreview } from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport Link from \"../Components/Link\";\r\n// import SearchList from \"../Components/SearchList\";\r\n// import {setCurrentViewFromURI} from \"../ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_ActionCreators\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faArrowLeft} from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass EditMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageToEdit: this.props.messages.messagePreviewId,\r\n      messageList: this.props.messages.messages, // set to state for filter, without filter don't set props to state to avoid bugs\r\n      searchInput: '',\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(getAllMessageTypes());\r\n  }\r\n\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.props.messages.messages.length !== nextProps.messages.messages.length) {\r\n      this.setState({\r\n        messageToEdit: nextProps.messages.messagePreviewId,\r\n        messageList:  nextProps.messages.messages\r\n      });\r\n    }\r\n  }\r\n\r\n  filterMessages = (input) => {\r\n\r\n    let value = input.target.value;\r\n\r\n    let newState = this.props.messages.messages.filter(function(mes) {\r\n      return mes.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n    });\r\n\r\n    this.setState({\r\n      messageList: newState,\r\n      searchInput: value.toLowerCase()\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message library</h1>\r\n        <div className=\"flex-content-wrapper\">\r\n          <div id=\"preview\" className=\"flex-content flex-content--solo-item\">\r\n            <JsonEditor id=\"preview\"\r\n                         disabled={ false }\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes }) => ({\r\n  messages,\r\n  messageTypes\r\n});\r\n\r\nexport default connect(mapStateToProps)(EditMessage);\r\n","import React, { Component } from 'react';\r\nimport '../scss/App.scss';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport JsonCreator from \"../Components/JsonCreator\";\r\n\r\nimport {getAllMessageTypes} from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\nimport { resetMessagePreview } from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport Link from \"../Components/Link\";\r\nimport SearchList from \"../Components/SearchList\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {setSelectedSchema} from \"../ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators\";\r\n\r\nclass EditMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageList: this.props.messageTypes.messages, // set to state for filter, without filter don't set props to state to avoid bugs\r\n      searchInput: '',\r\n    };\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(resetMessagePreview());\r\n    this.props.dispatch(getAllMessageTypes());\r\n  };\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.props.messageTypes.messages.length !== nextProps.messageTypes.messages.length) {\r\n      this.setState({\r\n        messageList: nextProps.messageTypes.messages\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  filterMessages = (input) => {\r\n\r\n    let value = input.target.value;\r\n\r\n    let newState = this.props.messageTypes.messages.filter(function(mes) {\r\n      return mes.details.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n    });\r\n\r\n    this.setState({\r\n      messageList: newState,\r\n      searchQuery: value\r\n    });\r\n  };\r\n\r\n  setSelectedSchemaId = (item) => {\r\n    this.props.dispatch(setSelectedSchema(item._id));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message library</h1>\r\n         <div className=\"flex-content-wrapper\">\r\n          <div id=\"selection\" className=\"flex-content\">\r\n            <SearchList key=\"search-templates\"\r\n                        listData={this.state.messageList}\r\n                        searchQuery={this.state.searchQuery}\r\n                        filter={this.filterMessages}\r\n                        selected={this.props.umpireMenu.selectedSchemaID}\r\n                        setSelected={this.setSelectedSchemaId}\r\n                        placeholder={'Select template'}\r\n            />\r\n          </div>\r\n          <div id=\"preview\" className=\"flex-content flex-content--big\">\r\n            <JsonCreator id=\"preview\" disabled={false} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, umpireMenu, currentViewURI }) => ({\r\n  messages,\r\n  messageTypes,\r\n  umpireMenu,\r\n  currentViewURI\r\n});\r\n\r\nexport default connect(mapStateToProps)(EditMessage);\r\n","import JSONEditor from '@json-editor/json-editor'\r\n// -------- Editor class ---------------------------------------------------\r\n\r\n// create a JSON Editor, elementId is the id in which to render the editor\r\nfunction Editor(elementId) {\r\n    this.jsonEditor = null;\r\n    this.renderZone = typeof elementId === \"string\" ? document.getElementById(elementId) : elementId.current;\r\n}\r\n\r\n// Destroy editor, and remove it from view\r\nEditor.prototype.destroy = function() {\r\n    if(this.jsonEditor) {\r\n        this.jsonEditor.destroy();\r\n        this.jsonEditor = null;\r\n    }\r\n}\r\n\r\n// Recreate a new editor based on the given schema and start value\r\n// If schema is undefined, the editor is not recreated, but only destroyed\r\nEditor.prototype.updateSchema = function(schema) {\r\n    this.destroy();\r\n    this.jsonEditor = new JSONEditor(this.renderZone, { schema: schema });\r\n}\r\n\r\n// Validate JSON\r\nEditor.prototype.validate = function() {\r\n    return this.jsonEditor.validate();\r\n}\r\n\r\n// Get generated JSON\r\nEditor.prototype.getJSON = function() {\r\n    return this.jsonEditor.getValue();\r\n}\r\n\r\n// --------------- PreviewEditor subclass ------------------------------------\r\n\r\n// create a JSON Editor that doesn't allow specifying additional properties,\r\n// but only those specified in the schema can be set.\r\n// elementId is the id in which to render the editor,\r\nexport function PreviewEditor(elementId) {\r\n    Editor.call(this, elementId);\r\n}\r\n\r\n// Inherit Editor methods\r\nPreviewEditor.prototype = Object.create(Editor.prototype);\r\n\r\n// After `PreviewEditor.prototype = Object.create(Editor.prototype)` instruction,\r\n// PreviewEditor.prototype is a copy of Editor.prototype,\r\n// so the `constructor` property of PreviewEditor.prototype is Editor,\r\n// but a PreviewEditor object is created with the PreviewEditor constructor,\r\n// so we override the `constructor` property of PreviewEditor.prototype to PreviewEditor\r\nObject.defineProperty(PreviewEditor.prototype, 'constructor', {\r\n    value: PreviewEditor,\r\n    enumerable: false, // so that it does not appear in 'for in' loop\r\n    writable: true\r\n});\r\n\r\nPreviewEditor.prototype.updateSchema = function(schema) {\r\n    this.destroy();\r\n    this.jsonEditor = new JSONEditor(this.renderZone, {\r\n        schema: schema,\r\n        no_additional_properties: true\r\n    });\r\n}\r\n\r\n\r\n// --------------- SchemaEditor subclass -------------------------------------\r\n\r\n// create a JSON Editor for a JSON Schema, it adds a save button\r\n// to save the Schema to a file, and also\r\n// makes the 'Properties' buttons distinguishable to avoid confusion between\r\n// schema properties and object properties.\r\n// elementId is the id in which to render the editor,\r\nexport function SchemaEditor(elementId) {\r\n    Editor.call(this, elementId);\r\n\r\n    // Check whether the node is a properties button for an object,\r\n    // and not for the schema of an object named properties\r\n    var isObjectPropertiesButton = function(node) {\r\n        // Does the path end in '.properties'?\r\n        if(node.matches('div[data-schemapath$=\".properties\"] > h3 > div > button.json-editor-btntype-properties')) {\r\n            var containingDiv = node.parentElement.parentElement.parentElement;\r\n            var span = containingDiv.querySelector('h3 > span');\r\n\r\n            // Is it an object properties or a property named properties?\r\n            if(span && span.innerText === 'properties') {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    this.observer = new MutationObserver(function(mutationsList, observer) {\r\n        for(var mutation of mutationsList) {\r\n            mutation.addedNodes.forEach(function(node) {\r\n                if(node.nodeType === 1) {\r\n                    if(isObjectPropertiesButton(node)) {\r\n                        node.querySelector('span').innerText = 'Add/Remove';\r\n                    }\r\n                    else if(node.matches('button.json-editor-btntype-properties')) {\r\n                        // For other properties buttons, remove the 'Properties' label,\r\n                        // and use a cog as icon\r\n                        var icon = node.querySelector('i');\r\n                        icon.classList.remove('fa-pen');\r\n                        icon.classList.add('fa-cog');\r\n\r\n                        var span = node.querySelector('span');\r\n                        span.innerText = '';\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    this.observer.observe(this.renderZone, { childList: true, subtree: true });\r\n}\r\n\r\n// Inherit Editor methods\r\nSchemaEditor.prototype = Object.create(Editor.prototype);\r\n\r\n// After `SchemaEditor.prototype = Object.create(Editor.prototype)` instruction,\r\n// SchemaEditor.prototype is a copy of Editor.prototype,\r\n// so the `constructor` property of SchemaEditor.prototype is Editor,\r\n// but a SchemaEditor object is created with the SchemaEditor constructor,\r\n// so we override the `constructor` property of SchemaEditor.prototype to SchemaEditor\r\nObject.defineProperty(SchemaEditor.prototype, 'constructor', {\r\n    value: SchemaEditor,\r\n    enumerable: false, // so that it does not appear in 'for in' loop\r\n    writable: true\r\n});\r\n\r\n// Override the updateSchema function\r\nSchemaEditor.prototype.updateSchema = function(schema) {\r\n    this.destroy();\r\n\r\n    // Add extra validation logic for integer Schemas that use the `range` format.\r\n    // For integer Schemas that use the `range` format we require that minimum and maximum properties are set, too.\r\n    var range_integer_validator = function(schema, value, path) {\r\n        var errors = [];\r\n        if(value !== null && value.type === 'integer' && value.format === 'range') {\r\n            if(typeof value.minimum === 'undefined' || typeof value.maximum === 'undefined') {\r\n                errors.push({\r\n                    path: path,\r\n                    property: 'format',\r\n                    message: 'The range format requires that you specify both minimum and maximum properties, too.'\r\n                });\r\n            }\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    // Check that if minimum and maximum are specified, minimum <= maximum\r\n    var min_max_consistence_validator = function(schema, value, path) {\r\n        var errors = [];\r\n        if(value !== null && (value.type === 'integer' || value.type === 'number')) {\r\n            if(typeof value.minimum !== 'undefined' && typeof value.minimum !== 'undefined' && value.minimum > value.maximum) {\r\n                errors.push({\r\n                    path: path,\r\n                    property: 'maximum',\r\n                    message: 'The maximum value must be greater than or equal than the minimum value.'\r\n                });\r\n            }\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    // Recreate the JSON-Editor\r\n    this.jsonEditor = new JSONEditor(this.renderZone, {\r\n        schema: schema,\r\n        custom_validators: [ range_integer_validator, min_max_consistence_validator ]\r\n    });\r\n\r\n\r\n    // Add a save button\r\n    var filename = 'schema.json';\r\n    var saveButtonLabel = 'Save';\r\n\r\n    this.jsonEditor.on('ready', function() {\r\n        var button = this.root.getButton(saveButtonLabel, 'save', saveButtonLabel);\r\n        var button_holder = this.root.theme.getHeaderButtonHolder();\r\n        button_holder.appendChild(button);\r\n        this.root.header.parentNode.insertBefore(button_holder, this.root.header.nextSibling);\r\n\r\n        var jsonEditor = this;\r\n        button.addEventListener('click', function(e) {\r\n            e.preventDefault();\r\n            var contents = jsonEditor.getValue();\r\n            var blob = new Blob([JSON.stringify(contents, null, 2)], {\r\n                type: \"application/json;charset=utf-8\"\r\n            });\r\n\r\n            if(window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n                window.navigator.msSaveOrOpenBlob(blob, filename);\r\n            }\r\n            else {\r\n                var a = document.createElement('a');\r\n                a.download = filename;\r\n                a.href = URL.createObjectURL(blob);\r\n                a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n\r\n                a.dispatchEvent(new MouseEvent('click', {\r\n                    'view': window,\r\n                    'bubbles': true,\r\n                    'cancelable': false\r\n                }));\r\n            }\r\n        }, false);\r\n    });\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Card, CardHeader, CardBody, CardFooter } from 'reactstrap';\r\nimport { SchemaEditor } from './json-schema-editor/editor';\r\nimport PropTypes from 'prop-types';\r\nimport JSONEditor from '@json-editor/json-editor';\r\n\r\nclass JsonSchemaEditor extends Component {\r\n\r\n  constructor(props, content) {\r\n    super(props, content);\r\n\r\n    this.schemaEditor = null;\r\n    this.editorBox = React.createRef();\r\n    this.onChange = this.onChange.bind(this);\r\n    this.updateEditor = this.updateEditor.bind(this);\r\n    this.saved = \"\";\r\n    this.value = this.props.defaultValue;\r\n  }\r\n\r\n  onChange(newValue, e) {\r\n    const errors = this.schemaEditor.validate();\r\n    console.log(errors);\r\n    if(errors.length) {\r\n      alert('Invalid schema');\r\n    }\r\n    else {\r\n      if(this.props.onChange) {\r\n        this.value = this.schemaEditor.jsonEditor.getValue();\r\n        this.props.onChange(this.schemaEditor.getJSON());\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.schemaEditor = new SchemaEditor(this.editorBox);\r\n    this.updateEditor(this.props.schema, this.props.options);\r\n  }\r\n\r\n  componentWillReceiveProps({schema, options}) {\r\n    this.updateEditor(schema, options);\r\n  }\r\n\r\n  updateEditor(schema, options) {\r\n    try {\r\n      const newJson = JSON.stringify(schema);\r\n      if(newJson !== this.save || options.counter !== this.props.options.counter) {\r\n\r\n        JSONEditor.defaults.options.object_layout = options.layout;\r\n        JSONEditor.defaults.options = {\r\n          ...JSONEditor.defaults.options,\r\n          ...options.booleanOptions\r\n        };\r\n\r\n        this.save = newJson;\r\n        this.schemaEditor.updateSchema(schema);\r\n        this.schemaEditor.jsonEditor.setValue(this.value);\r\n        this.schemaEditor.jsonEditor.on('change', this.onChange);\r\n      }\r\n    }\r\n    catch(err) {\r\n      alert('Invalid json schema');\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          Schema Editor\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div id=\"schema-editor\" ref={this.editorBox} />\r\n        </CardBody>\r\n        <CardFooter>\r\n        </CardFooter>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nJsonSchemaEditor.propTypes = {\r\n  schema: PropTypes.object.isRequired,\r\n  onChange: PropTypes.func\r\n};\r\n\r\nexport default JsonSchemaEditor;\r\n","import React, { Component } from 'react';\r\nimport { Card, CardHeader, CardBody, CardFooter } from 'reactstrap';\r\nimport { PreviewEditor } from './json-schema-editor/editor';\r\n\r\nclass EditorPreview extends Component {\r\n\r\n  constructor(props, content) {\r\n    super(props, content);\r\n\r\n    this.previewBox = React.createRef();\r\n    this.editorPreview = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.editorPreview = new PreviewEditor(this.previewBox);\r\n  }\r\n\r\n  componentWillReceiveProps({ schema }) {\r\n    this.editorPreview.destroy();\r\n    if (schema !== null) this.editorPreview.updateSchema(schema);\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          Editor Preview\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div id='editor-preview' ref={this.previewBox}/>\r\n        </CardBody>\r\n        <CardFooter>\r\n          The Editor Preview will be updated as you make changes in the Schema Editor\r\n        </CardFooter>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditorPreview;\r\n","import React, { Component } from 'react';\r\nimport jsonMetaSchema from './data.json';\r\nimport JSONEditor from '@json-editor/json-editor';\r\nimport Editor from './jsonEditor';\r\nimport Preview from './editorPreview';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\nimport { setPreviewSchema } from \"../../ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass SchemaEditor extends Component {\r\n\r\n  constructor(props, content) {\r\n    super(props, content);\r\n\r\n    JSONEditor.defaults.options.iconlib = \"fontawesome5\";\r\n    JSONEditor.defaults.options.theme   = 'bootstrap4';\r\n    this.updateMetaSchema = this.updateMetaSchema.bind(this);\r\n    this.updatePreviewSchema = this.updatePreviewSchema.bind(this);\r\n    this.updateOptions = this.updateOptions.bind(this);\r\n\r\n    this.schemaEditor = null;\r\n    this.editorPreview = null;\r\n\r\n    this.defaultValue = {\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"title\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"Date\": {\r\n          \"type\": \"string\",\r\n          \"format\": \"datetime-local\"\r\n        },\r\n        \"Status\": {\r\n          \"type\": \"string\",\r\n          \"enum\": [\r\n            \"Minor\",\r\n            \"Major\",\r\n            \"Critical\"\r\n          ]\r\n        },\r\n        \"Description\": {\r\n          \"type\": \"string\",\r\n          \"format\": \"textarea\"\r\n        }\r\n      },\r\n      \"title\": \"Machinery Failure\",\r\n      \"format\": \"grid\"\r\n    };\r\n\r\n\r\n    if (this.props.schemaId) {\r\n      this.defaultValue = this.props.messageTypes.messages.find((mes) => mes._id === this.props.schemaId).details;\r\n    }\r\n\r\n\r\n    this.state = {\r\n      metaSchema: jsonMetaSchema,\r\n      previewSchema: null,\r\n      options: {\r\n        layout: JSONEditor.defaults.options.object_layout,\r\n        booleanOptions: {}\r\n      }\r\n    }\r\n  }\r\n\r\n  updatePreviewSchema(schema) {\r\n    console.log(\"preview update\");\r\n    this.setState({previewSchema: schema});\r\n\r\n    this.props.dispatch(setPreviewSchema(schema));\r\n  }\r\n\r\n  updateOptions(options) {\r\n    console.log(\"options update\");\r\n    this.setState({options: options});\r\n  }\r\n\r\n  updateMetaSchema(schema) {\r\n    console.log(\"editor update\");\r\n    this.setState({metaschema: schema});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"flex-content flex-content--left50\">\r\n          <Editor\r\n            schema={this.state.metaSchema}\r\n            onChange={this.updatePreviewSchema}\r\n            options={this.state.options}\r\n            defaultValue={this.defaultValue}\r\n          />\r\n        </div>\r\n        <div className=\"flex-content flex-content--right50\">\r\n          <Preview schema={this.state.previewSchema}/>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ umpireMenu, }) => ({\r\n  umpireMenu,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SchemaEditor);","import React, { Component } from 'react';\r\nimport '../scss/App.scss';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getAllMessageTypes,\r\n  updateMessageType } from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n\r\nimport { resetMessagePreview } from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport Link from \"../Components/Link\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport SchemaEditor from \"../Components/jsonSchemaEditor/index\";\r\n\r\nclass EditMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageList: this.props.messageTypes.messages, // set to state for filter, without filter don't set props to state to avoid bugs\r\n      searchInput: '',\r\n    };\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(resetMessagePreview());\r\n    this.props.dispatch(getAllMessageTypes());\r\n  };\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.props.messageTypes.messages.length !== nextProps.messageTypes.messages.length) {\r\n      this.setState({\r\n        messageList: nextProps.messageTypes.messages\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  filterMessages = (input) => {\r\n\r\n    let value = input.target.value;\r\n\r\n    let newState = this.props.messageTypes.messages.filter(function(mes) {\r\n      return mes.details.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n    });\r\n\r\n    this.setState({\r\n      messageList: newState,\r\n      searchInput: value.toLowerCase()\r\n    });\r\n  };\r\n\r\n  updateSchema = () => {\r\n    this.props.dispatch(updateMessageType(this.props.umpireMenu.previewSchema, this.props.umpireMenu.selectedSchemaID));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message template</h1>\r\n        <div className=\"button-wrap\">\r\n          <span onClick={this.updateSchema} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span>\r\n        </div>\r\n        <div className=\"flex-content-wrapper\">\r\n          <SchemaEditor\r\n            schemaId={this.props.umpireMenu.selectedSchemaID}\r\n            messageTypes={this.props.messageTypes}\r\n          />\r\n        </div>\r\n        <div className=\"button-wrap\">\r\n          <span onClick={this.updateSchema} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, currentViewURI, umpireMenu }) => ({\r\n  messages,\r\n  messageTypes,\r\n  currentViewURI,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(EditMessage);\r\n","import React, { Component } from 'react';\r\nimport '../scss/App.scss';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getAllMessageTypes,\r\n  createMessageType\r\n} from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n\r\nimport { resetMessagePreview } from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport Link from \"../Components/Link\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport SchemaEditor from \"../Components/jsonSchemaEditor/index\";\r\n\r\nclass EditMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageList: this.props.messageTypes.messages, // set to state for filter, without filter don't set props to state to avoid bugs\r\n      searchInput: '',\r\n    };\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(resetMessagePreview());\r\n    this.props.dispatch(getAllMessageTypes());\r\n  };\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.props.messageTypes.messages.length !== nextProps.messageTypes.messages.length) {\r\n      this.setState({\r\n        messageList: nextProps.messageTypes.messages\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  saveSchema = () => {\r\n    this.props.dispatch(createMessageType(this.props.umpireMenu.previewSchema));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message template</h1>\r\n        <div className=\"button-wrap\">\r\n          <span onClick={this.saveSchema} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span>\r\n        </div>\r\n        <div className=\"flex-content-wrapper\">\r\n          <SchemaEditor />\r\n        </div>\r\n        <div className=\"button-wrap\">\r\n          <span onClick={this.saveSchema} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, currentViewURI, umpireMenu }) => ({\r\n  messages,\r\n  messageTypes,\r\n  currentViewURI,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(EditMessage);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport '../../scss/App.scss';\r\n\r\nclass TextInput extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      type: this.props.options.numInput ? \"number\" : \"text\",\r\n    };\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.props.updateStore(e.target.value);\r\n  };\r\n\r\n  render() {\r\n\r\n    let invalid = !this.props.validInput ? 'invalid-input' : '';\r\n\r\n    return (\r\n      <>\r\n        <input className={invalid} id={this.props.id ? this.props.id : null} type={this.state.type} onChange={this.onChange} value={this.props.data ? this.props.data : \"\"} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nTextInput.propTypes = {\r\n  updateStore: PropTypes.func.isRequired,\r\n  options: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nexport default TextInput;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport '../../scss/App.scss';\r\n\r\nclass DropdownInput extends Component {\r\n\r\n  onChange = (e) => {\r\n    this.props.updateStore(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <select disabled={this.props.disabled} value={this.props.data ? this.props.data : \"placeholder\"} onChange={this.onChange}>\r\n        <option value=\"placeholder\">{this.props.placeholder}</option>\r\n        { this.props.selectOptions.map((opt, i) => {\r\n          return (<option key={`${opt}${i}`} value={opt}>{opt}</option>)\r\n        })}\r\n      </select>\r\n    );\r\n  }\r\n}\r\n\r\nDropdownInput.propTypes = {\r\n  updateStore: PropTypes.func.isRequired,\r\n  selectOptions: PropTypes.array.isRequired,\r\n  // options: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nexport default DropdownInput;\r\n","import React, { Component } from 'react';\r\n\r\nclass Row extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"flex-content flex-content--row\">\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Row;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport '../../scss/App.scss';\r\n\r\nclass TextArea extends Component {\r\n\r\n  onChange = (e) => {\r\n    this.props.updateStore(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <textarea value={this.props.data} onChange={this.onChange} style={{resize: \"none\"}}></textarea>\r\n    );\r\n  }\r\n}\r\n\r\nTextArea.propTypes = {\r\n  updateStore: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default TextArea;\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport TextInput from \"../../Components/Inputs/TextInput\";\r\nimport DropdownInput from \"../../Components/Inputs/DropdownInput\";\r\nimport Row from \"../../Components/Layout/Row\";\r\n\r\nimport { setGameData } from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\nimport TextArea from \"../../Components/Inputs/TextArea\";\r\n\r\nclass SettingsTab extends Component {\r\n\r\n  updateDescription = (value) => {\r\n    this.props.dispatch(setGameData({gameDescription: value}));\r\n  };\r\n\r\n  updateSpatialRepresentation = (value) => {\r\n    this.props.dispatch(setGameData({spatialRepresentation: value}));\r\n  };\r\n\r\n  updatePlanningInterval = (value) => {\r\n    this.props.dispatch(setGameData({planningInterval: value}));\r\n  };\r\n\r\n  updateReplayInterval = (value) => {\r\n    this.props.dispatch(setGameData({replayInterval: value}));\r\n  };\r\n\r\n  updateTurnStrategy = (value) => {\r\n    this.props.dispatch(setGameData({turnStrategy: value}));\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"flex-content-wrapper\">\r\n\r\n        <div className=\"flex-content flex-content--left50\">\r\n          <p className=\"heading--sml\">Game description &amp; objectives</p>\r\n          <TextArea\r\n            updateStore={this.updateDescription}\r\n            data={this.props.wargame.tabs[this.props.wargame.currentTab].data.gameDescription}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex-content flex-content--right50\">\r\n\r\n          <Row>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml\">Spatial Representation</p>\r\n            </div>\r\n            <div className=\"flex-content flex-content--fill\">\r\n              <DropdownInput\r\n                updateStore={this.updateSpatialRepresentation}\r\n                selectOptions={[\"opt1\", \"opt2\", \"opt3\"]}\r\n                placeholder=\"Select spatial representation\"\r\n                data={this.props.wargame.tabs[this.props.wargame.currentTab].data.spatialRepresentation}\r\n              />\r\n            </div>\r\n          </Row>\r\n\r\n          <Row>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml\">Planning Interval</p>\r\n            </div>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <TextInput\r\n                updateStore={this.updatePlanningInterval}\r\n                options={{ numInput: true }}\r\n                data={this.props.wargame.tabs[this.props.wargame.currentTab].data.planningInterval}\r\n                validInput={true}\r\n              />\r\n            </div>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml heading--mleft\">min.</p>\r\n            </div>\r\n          </Row>\r\n\r\n          <Row>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml\">Replay interval</p>\r\n            </div>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <TextInput\r\n                updateStore={this.updateReplayInterval}\r\n                options={{ numInput: true }}\r\n                data={this.props.wargame.tabs[this.props.wargame.currentTab].data.replayInterval}\r\n                validInput={true}\r\n              />\r\n            </div>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml heading--mleft\">min.</p>\r\n            </div>\r\n          </Row>\r\n\r\n          <Row>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml\">Turn Strategy</p>\r\n            </div>\r\n            <div className=\"flex-content flex-content--fill\">\r\n              <DropdownInput\r\n                updateStore={this.updateTurnStrategy}\r\n                selectOptions={[\"opt1\", \"opt2\", \"opt3\"]}\r\n                placeholder=\"Not implemented yet\"\r\n                data={this.props.wargame.tabs[this.props.wargame.currentTab].data.turnStrategy}\r\n                // disabled={true}\r\n              />\r\n            </div>\r\n          </Row>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame }) => ({\r\n  wargame,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SettingsTab);\r\n","import React, { Component } from 'react';\r\nimport classNames from \"classnames\";\r\nimport '../scss/App.scss';\r\nimport {PropTypes} from \"prop-types\";\r\n\r\nclass TabsSearchList extends Component {\r\n\r\n  setSelected = (item) => {\r\n    this.props.setSelected(item);\r\n  };\r\n\r\n  createList() {\r\n    var data = this.props.listData;\r\n\r\n    var list = [];\r\n    for (var prop in data) {\r\n      let active = prop === this.props.selected ? 'active' : '';\r\n      list.unshift(<span href=\"#\" onClick={this.setSelected.bind(this, prop)} key={prop} className={classNames({\"list-title\": true, active})}>{prop}</span>);\r\n    }\r\n    return list;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"list\">\r\n        {this.props.filter ?\r\n          <input type=\"text\" className=\"list-input\" key=\"search-templates\" placeholder={this.props.placeholder} onChange={ this.props.filter } value={this.props.searchQuery} />\r\n          : false\r\n        }\r\n        <div className=\"list-list\">\r\n          { this.createList() }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTabsSearchList.propTypes = {\r\n  listData: PropTypes.object.isRequired,\r\n  filter: PropTypes.func,\r\n  selected: PropTypes.string.isRequired,\r\n  setSelected: PropTypes.func.isRequired,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nexport default TabsSearchList;\r\n","import React, { Component } from 'react';\r\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nclass RemovableGroupItem extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <span className=\"group-item\" key={this.props.children}>\r\n        {this.props.children}\r\n        <FontAwesomeIcon icon={faTimes} />\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RemovableGroupItem;\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport TabsSearchList from \"../../Components/TabsSearchList\";\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport {\r\n  setSelectedForce,\r\n  setForceOverview\r\n} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\nimport '../../scss/App.scss';\r\nimport TextArea from \"../../Components/Inputs/TextArea\";\r\nimport RemovableGroupItem from \"../../Components/Layout/RemovableGroupItem\";\r\n\r\nclass ForcesTab extends Component {\r\n\r\n  openModal = () => {\r\n    this.props.dispatch(modalAction.open(\"addForce\"));\r\n  };\r\n\r\n  setSelected = (force) => {\r\n    this.props.dispatch(setSelectedForce(force));\r\n  };\r\n\r\n  updateOverview = (overview) => {\r\n    this.props.dispatch(setForceOverview(overview));\r\n  };\r\n\r\n  createForceEditor() {\r\n\r\n    let curTab = this.props.wargame.currentTab;\r\n    let selectedForce = this.props.wargame.tabs[curTab].data.selectedForce;\r\n\r\n    return (\r\n      <div className=\"flex-content--fill forcesTab\">\r\n\r\n        <h3>{selectedForce}</h3>\r\n\r\n        <span className=\"link link--secondary link--noIcon link--disabled\">Change icon</span>\r\n\r\n        <p className=\"heading--sml\">Overview &amp; Objectives</p>\r\n        <TextArea\r\n          updateStore={this.updateOverview}\r\n          data={this.props.wargame.tabs[curTab].data.forces[selectedForce].overview}\r\n        />\r\n\r\n        <p className=\"heading--sml\">Roles</p>\r\n        <span className=\"link link--secondary link--noIcon link--disabled\">Add a new role</span>\r\n\r\n        <div className=\"flex-content\">\r\n          {this.props.wargame.tabs[curTab].data.forces[selectedForce].roles.map((role) => {\r\n            return (<RemovableGroupItem key={role}>{role}</RemovableGroupItem>)\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n\r\n    let curTab = this.props.wargame.currentTab;\r\n    let selectedForce = this.props.wargame.tabs[curTab].data.selectedForce;\r\n\r\n    return (\r\n      <div className=\"flex-content-wrapper\">\r\n        <div className=\"flex-content\">\r\n          <span className=\"link link--noIcon\" onClick={this.openModal}>Add a new force</span>\r\n          <TabsSearchList listData={this.props.wargame.tabs[curTab].data.forces}\r\n                          setSelected={this.setSelected}\r\n                          selected={selectedForce}\r\n          />\r\n        </div>\r\n\r\n        {selectedForce ?\r\n          this.createForceEditor()\r\n        : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// temp use allMessages\r\nconst mapStateToProps = ({ messages, wargame }) => ({\r\n  messages,\r\n  wargame,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ForcesTab);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../../scss/App.scss';\r\nimport Select from \"react-select\";\r\n\r\nclass EditSubscriptionRow extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      subscriptionId: this.props.data.subscriptionId,\r\n      editSubscriptionForce: {value: this.props.data.force, label: this.props.data.force},\r\n      editSubscriptionRole: {value: this.props.data.role, label: this.props.data.role},\r\n      editSubscriptionTemplates: this.props.data.templates,\r\n    };\r\n  }\r\n\r\n  updateSubscriptionForce = (option) => {\r\n    this.setState({\r\n      editSubscriptionForce: option,\r\n    });\r\n  };\r\n\r\n  updateSubscriptionRole = (option) => {\r\n    this.setState({\r\n      editSubscriptionRole: option,\r\n    });\r\n  };\r\n\r\n  updateSubscriptionTemplates = (option) => {\r\n    this.setState({\r\n      editSubscriptionTemplates: option,\r\n    });\r\n  };\r\n\r\n  updateChannel = () => {\r\n    let subscriptionData = {\r\n      force: this.state.editSubscriptionForce.label,\r\n      role: this.state.editSubscriptionRole.label,\r\n      templates: this.state.editSubscriptionTemplates,\r\n    };\r\n    this.props.updateRecipient(this.state.subscriptionId, subscriptionData);\r\n    this.props.cancelEdit();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <tr>\r\n        <td>\r\n          <Select\r\n            value={this.state.editSubscriptionForce}\r\n            options={this.props.forceOptions}\r\n            onChange={this.updateSubscriptionForce}\r\n          />\r\n        </td>\r\n        <td>\r\n          <Select\r\n            value={this.state.editSubscriptionRole}\r\n            options={this.props.roleOptions}\r\n            onChange={this.updateSubscriptionRole}\r\n          />\r\n        </td>\r\n        <td>\r\n          <Select\r\n            value={this.state.editSubscriptionTemplates}\r\n            options={this.props.templateOptions}\r\n            onChange={this.updateSubscriptionTemplates}\r\n            isMulti\r\n          />\r\n        </td>\r\n        <td>\r\n          <button\r\n            className=\"btn btn-action btn-action--secondary\"\r\n            onClick={this.updateChannel}\r\n            // disabled={!this.state.selectedTemplates.length > 0}\r\n          >\r\n            Save</button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default connect()(EditSubscriptionRow);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  addRecipientToChannel,\r\n  updateRecipient,\r\n  removeRecipient,\r\n} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators.js\";\r\n\r\nimport EditSubscriptionRow from \"./EditSubscriptionRow\";\r\nimport Select from \"react-select\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTrash,\r\n  faPencilAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass ChannelsTable extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var tabs = Object.values(this.props.wargame.tabs);\r\n    let forces = tabs.find((d) => d.name === \"Forces\").data.forces;\r\n\r\n    let forceOptions = [];\r\n    for (let prop in forces) {\r\n      forceOptions.push({\r\n        value: prop,\r\n        label: prop,\r\n      });\r\n    }\r\n\r\n    let templateOptions = this.props.messageTypes.messages.map((messageType) => {\r\n      return {\r\n        value: messageType._id,\r\n        label: messageType.title,\r\n      }\r\n    });\r\n\r\n    this.state = {\r\n      selectedForce: {value: null, label: null},\r\n      forceOptions: forceOptions,\r\n      selectedRole:  {value: null, label: null},\r\n      roleOptions: [],\r\n      selectedTemplates:  [],\r\n      templateOptions: templateOptions,\r\n      subscriptionToEdit: null,\r\n      editSubscriptionForce: '',\r\n      editSubscriptionRole: '',\r\n      editSubscriptionTemplates: [],\r\n    }\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState, nextContext) {\r\n\r\n    if (nextState.selectedForce.value === null) return;\r\n\r\n    if (this.state.selectedForce.value !== nextState.selectedForce.value) {\r\n\r\n      var tabs = Object.values(this.props.wargame.tabs);\r\n\r\n      let roleOptions = [];\r\n      var roles = tabs.find((d) => d.name === \"Forces\").data.forces[nextState.selectedForce.value].roles;\r\n\r\n      roles.forEach((role) => {\r\n\r\n        roleOptions.push({\r\n          value: role,\r\n          label: role,\r\n        });\r\n      });\r\n\r\n      this.setState({\r\n        roleOptions,\r\n      });\r\n    }\r\n  }\r\n\r\n  createRow(data, i) {\r\n    var row = [];\r\n    for (var prop in data) {\r\n      if (prop === \"subscriptionId\") continue;\r\n\r\n      var value = '';\r\n      if (typeof data[prop] !== \"string\") {\r\n\r\n        for (var j=0 ; j<data[prop].length ; j++) {\r\n          let item = data[prop][j];\r\n          value += item.label;\r\n          if (j !== data[prop].length-1) value+=', ';\r\n        }\r\n      } else {\r\n        value = data[prop];\r\n      }\r\n      row.push(<td key={`${value}${i}`}>{value}</td>)\r\n    }\r\n    row.push(\r\n      <td key={`edit-delete${i}`}>\r\n        <FontAwesomeIcon icon={faTrash} onClick={this.removeSubscription.bind(this, data.subscriptionId)} />\r\n        <FontAwesomeIcon icon={faPencilAlt} onClick={this.editSubscription.bind(this, data.subscriptionId)} />\r\n      </td>\r\n    );\r\n    return (<tr key={`row-${i}`}>{row}</tr>);\r\n  }\r\n\r\n  removeSubscription(subscriptionId) {\r\n    this.props.dispatch(removeRecipient(subscriptionId))\r\n  };\r\n\r\n  editSubscription(subscriptionId) {\r\n    this.setState({\r\n      subscriptionToEdit: subscriptionId,\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      subscriptionToEdit: \"\",\r\n    });\r\n  };\r\n\r\n  updateRecipient = (id, data) => {\r\n    this.props.dispatch(updateRecipient(id, data));\r\n  };\r\n\r\n  setSelectedForce = (option) => {\r\n    this.setState({\r\n      selectedForce: option,\r\n    });\r\n  };\r\n\r\n  setSelectedRole = (option) => {\r\n    this.setState({\r\n      selectedRole: option,\r\n    });\r\n  };\r\n\r\n  setSelectedTemplate = (option) => {\r\n    this.setState({\r\n      selectedTemplates: option,\r\n    });\r\n  };\r\n\r\n  addToChannel = () => {\r\n\r\n    let channelData = {\r\n      force: this.state.selectedForce.value,\r\n      role: this.state.selectedRole.value,\r\n      templates: this.state.selectedTemplates,\r\n    };\r\n    this.props.dispatch(addRecipientToChannel(channelData));\r\n\r\n    this.setState({\r\n      selectedForce: {value: null, label: null},\r\n      selectedRole: {value: null, label: null},\r\n      selectedTemplates: [],\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"flex-content\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Force</th>\r\n              <th>Roles</th>\r\n              <th>Templates</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.data.map((data, i) => {\r\n              return data.subscriptionId === this.state.subscriptionToEdit ? <EditSubscriptionRow\r\n                                                                                  key={data.subscriptionId}\r\n                                                                                  data={data}\r\n                                                                                  forceOptions={this.state.forceOptions}\r\n                                                                                  roleOptions={this.state.roleOptions}\r\n                                                                                  templateOptions={this.state.templateOptions}\r\n                                                                                  cancelEdit={this.cancelEdit}\r\n                                                                                  updateRecipient={this.updateRecipient}\r\n                                                                            /> : this.createRow(data, i);\r\n            })}\r\n            <tr>\r\n              <td>\r\n                <Select\r\n                  value={this.state.selectedForce}\r\n                  options={this.state.forceOptions}\r\n                  onChange={this.setSelectedForce}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Select\r\n                  value={this.state.selectedRole}\r\n                  options={this.state.roleOptions}\r\n                  onChange={this.setSelectedRole}\r\n                  isDisabled={!this.state.selectedForce.value}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Select\r\n                  value={this.state.selectedTemplates}\r\n                  options={this.state.templateOptions}\r\n                  onChange={this.setSelectedTemplate}\r\n                  isDisabled={!this.state.selectedRole.value}\r\n                  isMulti\r\n                />\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-action btn-action--secondary\"\r\n                  onClick={this.addToChannel}\r\n                  disabled={!this.state.selectedTemplates.length > 0}>\r\n                  Save</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame, messageTypes }) => ({\r\n  wargame,\r\n  messageTypes,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ChannelsTable);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport {\r\n  setSelectedChannel,\r\n  setForceOverview\r\n} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nimport '../../scss/App.scss';\r\n\r\nimport TabsSearchList from \"../../Components/TabsSearchList\";\r\nimport ChannelsTable from \"../../Components/Layout/ChannelsTable\";\r\n\r\nclass ForcesTab extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      channelList: this.props.wargame.tabs[this.props.wargame.currentTab].data.channels,\r\n      searchQuery: '',\r\n    }\r\n  };\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    const curPropsState = Object.keys(this.props.wargame.tabs[this.props.wargame.currentTab].data.channels);\r\n    const nextPropsState = Object.keys(nextProps.wargame.tabs[nextProps.wargame.currentTab].data.channels);\r\n\r\n    if (curPropsState.length !== nextPropsState.length) {\r\n      this.setState({\r\n        channelList: nextProps.wargame.tabs[nextProps.wargame.currentTab].data.channels\r\n      });\r\n    }\r\n  }\r\n\r\n  openModal = () => {\r\n    this.props.dispatch(modalAction.open(\"addChannel\"));\r\n  };\r\n\r\n  setSelected = (force) => {\r\n    this.props.dispatch(setSelectedChannel(force));\r\n  };\r\n\r\n  updateOverview = (overview) => {\r\n    this.props.dispatch(setForceOverview(overview));\r\n  };\r\n\r\n  filterChannels = (input) => {\r\n\r\n    let value = input.target.value;\r\n\r\n    let list = this.props.wargame.tabs[this.props.wargame.currentTab].data.channels;\r\n\r\n    let newState = {};\r\n    for (let prop in list) {\r\n      if (prop.toLowerCase().indexOf(value.toLowerCase()) > -1) newState[prop] = list[prop];\r\n    }\r\n\r\n    this.setState({\r\n      channelList: newState,\r\n      searchQuery: value\r\n    });\r\n  };\r\n\r\n  createChannelEditor() {\r\n\r\n    let curTab = this.props.wargame.currentTab;\r\n    let selectedChannel = this.props.wargame.tabs[curTab].data.selectedChannel;\r\n\r\n    return (\r\n      <div className=\"flex-content--fill channelsTab\">\r\n        <h3>{selectedChannel}</h3>\r\n\r\n        <p className=\"heading--sml\">Participants and messages</p>\r\n\r\n        <ChannelsTable data={this.props.wargame.tabs[curTab].data.channels[selectedChannel]} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n\r\n    const curTab = this.props.wargame.currentTab;\r\n    const selectedChannel = this.props.wargame.tabs[curTab].data.selectedChannel;\r\n\r\n    return (\r\n      <div className=\"flex-content-wrapper\">\r\n        <div className=\"flex-content\">\r\n          <span className=\"link link--noIcon\" onClick={this.openModal}>Add channel</span>\r\n          <TabsSearchList listData={this.state.channelList}\r\n                          filter={this.filterChannels}\r\n                          searchQuery={this.state.searchQuery}\r\n                          setSelected={this.setSelected}\r\n                          selected={selectedChannel}\r\n                          placeholder={\"Search channels\"}\r\n          />\r\n        </div>\r\n\r\n        {selectedChannel ?\r\n          this.createChannelEditor()\r\n        : null}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// temp use allMessages\r\nconst mapStateToProps = ({ messages, wargame }) => ({\r\n  messages,\r\n  wargame,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ForcesTab);\r\n","import React, { Component } from 'react';\r\n\r\nimport '../scss/App.scss';\r\n\r\nclass ValidationNotification extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"invalid-notification\"><p>{this.props.children}</p></div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default ValidationNotification;\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SettingsTab from \"./TabViews/SettingsTab\";\r\nimport ForcesTab from \"./TabViews/ForcesTab\";\r\nimport ChannelsTab from \"./TabViews/ChannelsTab\";\r\nimport ValidationNotification from \"../Components/ValidationNotification\";\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n});\r\n\r\n\r\nclass TabbedView extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    console.log(this.props.tabs);\r\n\r\n    this.state = {\r\n      value: 0,\r\n      tabs: Object.values(this.props.tabs).map((item) => item.name),\r\n      invalidFields: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setCurrentTab(0);\r\n  }\r\n\r\n\r\n  handleChange = (event, value) => {\r\n    this.setState({ value });\r\n    this.props.setCurrentTab(value);\r\n  };\r\n\r\n  render() {\r\n\r\n    const { value } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className={classes.root}>\r\n          <AppBar position=\"static\" color=\"default\">\r\n            <Tabs\r\n              value={value}\r\n              onChange={this.handleChange}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              centered\r\n            >\r\n              { this.state.tabs.map((tabName, i) => <Tab key={tabName + i} label={tabName} />) }\r\n            </Tabs>\r\n          </AppBar>\r\n          {value === 0 && <TabContainer><SettingsTab /></TabContainer>}\r\n          {/*{value === 1 && <TabContainer>PlatformTypes.jsx</TabContainer>}*/}\r\n          {value === 1 && <TabContainer><ForcesTab /></TabContainer>}\r\n          {/*{value === 3 && <TabContainer>BackHistory.jsx</TabContainer>}*/}\r\n          {/*{value === 4 && <TabContainer>Positions.jsx</TabContainer>}*/}\r\n          {value === 2 && <TabContainer><ChannelsTab /></TabContainer>}\r\n          {/*{value === 6 && <TabContainer>PlayControl.jsx</TabContainer>}*/}\r\n        </div>\r\n        <ValidationNotification validation={ this.props.wargame.validation } />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame }) => ({\r\n  wargame\r\n});\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(TabbedView));\r\n","import React, { Component } from 'react';\r\n\r\nclass ProgressBar extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"progress\">\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProgressBar;\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {\r\n  setCurrentTab,\r\n  setWargameTitle,\r\n  updateWargame,\r\n} from \"../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nimport TabbedView from \"./TabbedView\";\r\nimport ProgressBar from \"../Components/ProgressBar/ProgressBar\";\r\n\r\nimport Link from \"../Components/Link\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport classNames from \"classnames\";\r\nimport TextInput from \"../Components/Inputs/TextInput\";\r\nimport {getAllMessageTypes} from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n\r\nclass GameSetup extends Component {\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(getAllMessageTypes());\r\n  }\r\n\r\n  setCurrentTab = (tab) => {\r\n    this.props.dispatch(setCurrentTab(tab));\r\n  };\r\n\r\n  createIndicators() {\r\n    const that = this;\r\n\r\n    return Object.entries(this.props.wargame.tabs).map(function (entry) {\r\n\r\n      let active = that.props.wargame.currentTab === parseInt(entry[0]);\r\n      let completed = entry[1].complete;\r\n      return (<div key={entry[0]} className={classNames(\"progress-indicator\", {\"progress-indicator--active\": active, \"progress-indicator--complete\": completed})}></div>);\r\n    });\r\n  }\r\n\r\n  updateWargameTitle = (name) => {\r\n    this.props.dispatch(setWargameTitle(name));\r\n  };\r\n\r\n\r\n  saveWargame = () => {\r\n    if (this.checkAllValid()) {\r\n      this.props.dispatch(updateWargame(this.props.wargame.currentWargame, this.props.wargame.tabs, this.props.wargame.wargameTitle));\r\n    }\r\n  };\r\n\r\n  checkAllValid = () => {\r\n    return Object.values(this.props.wargame.validation).reduce((entry) => entry === true);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"view-wrapper view-wrapper-gamesetup\">\r\n          <div id=\"sidebar\">\r\n            <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n          </div>\r\n          <div className=\"flex-content-wrapper flex-content-wrapper--distribute\" id=\"game-setup-head\">\r\n            <TextInput\r\n              id=\"title-editable\"\r\n              updateStore={this.updateWargameTitle}\r\n              options={{numInput: false}}\r\n              data={this.props.wargame.wargameTitle}\r\n              validInput={this.props.wargame.validation.validWargameName}\r\n            />\r\n            <span className={classNames({\"link\": true, \"link--noIcon\": true, \"link--disabled\": !this.checkAllValid()})} onClick={this.saveWargame}>save</span>\r\n            <ProgressBar>\r\n              {this.createIndicators()}\r\n            </ProgressBar>\r\n          </div>\r\n          <TabbedView\r\n            tabs={this.props.wargame.tabs}\r\n            setCurrentTab={this.setCurrentTab}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n// temp use allMessages\r\nconst mapStateToProps = ({ wargame }) => ({\r\n  wargame\r\n});\r\n\r\nexport default connect(mapStateToProps)(GameSetup);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport MessagePreview from \"../Components/MessagePreview\";\r\n\r\nimport '../scss/App.scss';\r\n\r\nclass MessagesList extends Component {\r\n\r\n  render() {\r\n    let messages = this.props.messages.filter((item) => item.details.channel === this.props.curChannel);\r\n\r\n    return (\r\n      <>\r\n        {messages.map((item, i) => {\r\n          return (<div className=\"message-preview\"><MessagePreview key={i} detail={item.message} /></div>);\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = () => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps)(MessagesList);\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport JSONEditor from '@json-editor/json-editor';\r\nimport '../scss/App.scss';\r\n\r\nimport {\r\n  saveMessage,\r\n  getAllMessages,\r\n} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\nclass JsonCreator extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.editor = null;\r\n    this.editorPreviewRef = React.createRef();\r\n\r\n    this.state = {\r\n      selectedSchema: ''\r\n    };\r\n  }\r\n\r\n  sendMessage = () => {\r\n\r\n    let messageDetails = {\r\n      channel: this.props.playerUi.selectedChannel,\r\n      from: {\r\n        force: this.props.playerUi.selectedForce,\r\n        role: this.props.selectedRole,\r\n      },\r\n    };\r\n\r\n    this.props.dispatch(saveMessage(this.props.playerUi.currentWargame, messageDetails, this.editor.getValue()));\r\n    this.props.dispatch(getAllMessages());\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n    if (this.editor) {\r\n      this.editor.destroy();\r\n      this.editor = null;\r\n    }\r\n\r\n    if (nextProps.schema && nextProps.schema.type) {\r\n        if (this.editor) return;\r\n\r\n        this.editor = new JSONEditor(this.editorPreviewRef.current, {\r\n          schema: nextProps.schema,\r\n          theme: 'bootstrap4'\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"preview-editor\" ref={this.editorPreviewRef}></div>\r\n        <button name=\"send\" className=\"btn btn-action btn-action--primary\" onClick={this.sendMessage}>Send</button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ playerUi }) => ({\r\n  playerUi\r\n});\r\n\r\nexport default connect(mapStateToProps)(JsonCreator);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Select from \"react-select\";\r\nimport '../scss/App.scss';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n  getMessageTemplate,\r\n} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\nimport MessageCreator from \"../Components/MessageCreator.jsx\";\r\n\r\nclass NewMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      template: {value: '', label: ''},\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n    if (this.props.curChannel !== nextProps.curChannel) {\r\n      this.setState({\r\n        template: {value: '', label: ''},\r\n      });\r\n    }\r\n  }\r\n\r\n  setTemplate = (val) => {\r\n    this.props.dispatch(getMessageTemplate(val.value));\r\n    this.setState({\r\n      template: val,\r\n    })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"\">\r\n        <Select\r\n          value={this.state.template}\r\n          options={this.props.templates}\r\n          onChange={this.setTemplate}\r\n        />\r\n        <MessageCreator schema={this.props.schema} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNewMessage.propTypes = {\r\n  templates: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = () => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps)(NewMessage);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {\r\n  getAllMessages,\r\n  setChannel,\r\n  setMessageSchema,\r\n} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\nimport MessagesList from \"./MessagesList\";\r\nimport NewMessage from \"../Components/NewMessage\";\r\n\r\nimport '../scss/App.scss';\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n});\r\n\r\nclass MessageFeeds extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: 0,\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(getAllMessages());\r\n  }\r\n\r\n  handleChange = (event, value) => {\r\n\r\n    let channel = Object.keys(this.props.playerUi.channels)[value];\r\n\r\n    this.props.dispatch(setChannel(channel));\r\n    this.props.dispatch(setMessageSchema({}));\r\n\r\n    this.setState({ value });\r\n  };\r\n\r\n  createTabs = () => {\r\n\r\n    let channels = this.props.playerUi.channels;\r\n    let tabs = [];\r\n\r\n    for (let prop in channels) {\r\n      tabs.push(<Tab key={prop} label={prop} />)\r\n    }\r\n\r\n    return tabs;\r\n  };\r\n\r\n  createMessageList = (tab) => {\r\n\r\n    let curChannel= this.props.playerUi.selectedChannel;\r\n\r\n    return (\r\n      <TabContainer>\r\n        <MessagesList\r\n          curChannel={curChannel}\r\n          messages={this.props.playerUi.messages}\r\n        />\r\n\r\n        <NewMessage\r\n          curChannel={curChannel}\r\n          schema={this.props.playerUi.messageSchema}\r\n          templates={this.props.playerUi.channels[curChannel].templates}\r\n        />\r\n      </TabContainer>\r\n    )\r\n  };\r\n\r\n  render() {\r\n\r\n    const { value } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className={classes.root}>\r\n          <AppBar position=\"static\" color=\"default\">\r\n            <Tabs\r\n              value={value}\r\n              onChange={this.handleChange}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              centered\r\n            >\r\n              {this.createTabs()}\r\n            </Tabs>\r\n          </AppBar>\r\n          {this.createMessageList(value)}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ playerUi }) => ({\r\n  playerUi,\r\n});\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(MessageFeeds));\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport '../scss/App.scss';\r\nimport {\r\n  getWargame,\r\n  setForce,\r\n  setRole,\r\n  setFilteredChannels,\r\n  getAllMessages,\r\n} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\nimport MessageFeeds from \"./MessageFeeds\";\r\nimport DropdownInput from \"../Components/Inputs/DropdownInput\";\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass PlayerUi extends Component {\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(getWargame());\r\n    this.props.dispatch(getAllMessages());\r\n  }\r\n\r\n  updateSelectedForce = (force) => {\r\n    this.props.dispatch(setForce(force));\r\n  };\r\n\r\n  updateSelectedRole = (role) => {\r\n    this.props.dispatch(setRole(role));\r\n    this.props.dispatch(setFilteredChannels());\r\n  };\r\n\r\n  goBack = () => {\r\n    this.props.dispatch(setForce(\"\"));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"flex-content-wrapper\">\r\n\r\n        <div className=\"flex-content flex-content--fill\">\r\n          {!this.props.playerUi.selectedForce ?\r\n            <div className=\"flex-content--center\">\r\n              <h1>Set force</h1>\r\n              <DropdownInput updateStore={this.updateSelectedForce} selectOptions={Object.keys(this.props.playerUi.allForces)}/>\r\n            </div>\r\n            : false\r\n          }\r\n\r\n          {this.props.playerUi.selectedForce && !this.props.playerUi.selectedRole ?\r\n            <div className=\"flex-content--center\">\r\n              <h1>Set role</h1>\r\n              <FontAwesomeIcon icon={faArrowLeft} size=\"2x\" style={{cursor: 'pointer'}} onClick={this.goBack} />\r\n              <DropdownInput updateStore={this.updateSelectedRole} selectOptions={this.props.playerUi.allForces[this.props.playerUi.selectedForce].roles}/>\r\n            </div>\r\n            : false\r\n          }\r\n\r\n          {this.props.playerUi.selectedForce && this.props.playerUi.selectedRole ?\r\n\r\n            <div className=\"message-feeds\">\r\n              <MessageFeeds />\r\n            </div>\r\n            : false\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ playerUi }) => ({\r\n  playerUi,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PlayerUi);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport UniversalRouter from \"universal-router\";\r\n\r\nimport ChooseInterface from \"../Views/ChooseInterface\";\r\nimport GameDesignerInterface from '../Views/GameDesignerInterface';\r\nimport UmpireMenu from '../Views/UmpireMenu';\r\nimport EditMessage from '../Views/EditMessage';\r\nimport CreateMessage from '../Views/CreateMessage';\r\nimport EditTemplate from '../Views/EditTemplate';\r\nimport CreateTemplate from '../Views/CreateTemplate';\r\nimport GameSetup from \"../Views/GameSetup\";\r\nimport PlayerUi from \"../Views/PlayerUi\";\r\n\r\nimport '../scss/App.scss';\r\n\r\nclass Router extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.routes = [\r\n      { path: '/client/', action: () => <ChooseInterface /> },\r\n      { path: '/client/umpireMenu', action: () => <GameDesignerInterface/> },\r\n      { path: '/client/umpireMenu/:creatorType', action: () => <UmpireMenu /> },\r\n      { path: '/client/messageCreator', children: [\r\n          { path: '/create/template', action: () => <CreateTemplate /> },\r\n          { path: '/edit/template', action: () => <EditTemplate /> },\r\n          { path: '/create/message', action: () => <CreateMessage /> },\r\n          { path: '/edit/message', action: () => <EditMessage /> },\r\n        ]\r\n      },\r\n      { path: '/client/gameSetup', action: () => <GameSetup /> },\r\n      { path: '/client/playerUi', action: () => <PlayerUi /> },\r\n    ];\r\n\r\n    // let currentPath = new URL(window.location.href).pathname;\r\n\r\n    this.state = {\r\n      currentView: <ChooseInterface />\r\n    };\r\n\r\n    this.router = new UniversalRouter(this.routes);\r\n\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n    this.router.resolve({ pathname: nextProps.currentViewURI }).then(result => {\r\n      this.setState({\r\n        currentView: result,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        { this.state.currentView }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ currentViewURI }) => ({\r\n  currentViewURI\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(Router);\r\n","export default function deepCopy(objectpassed) {\r\n\r\n  // arrays return \"object\" in js so any object or array will be looped to copy deeply.\r\n  // strings, numbers and booleans are deep copied naturally, while any objects within arrays or objects\r\n  // or objects within arrays are only copied shallowly.\r\n  if (objectpassed === null || typeof objectpassed !== 'object') {\r\n    return objectpassed;\r\n  }\r\n\r\n  var temporaryStorage = objectpassed.constructor();\r\n\r\n  for (var key in objectpassed) {\r\n    temporaryStorage[key] = deepCopy((objectpassed[key]));\r\n  }\r\n  return temporaryStorage;\r\n}","import ActionConstant from '../ActionConstants';\r\nimport copyState from \"../copyStateHelper.js\";\r\n\r\nvar initialState = {\r\n  isLoading: false,\r\n  messages: [],\r\n};\r\n\r\nexport const messageTypesReducer = (state = initialState, action) => {\r\n\r\n  var newState = copyState(state);\r\n\r\n  switch (action.type) {\r\n    case ActionConstant.DB_MESSAGE_TYPES_GET:\r\n      newState.isLoading = action.isLoading;\r\n      return newState;\r\n\r\n    case ActionConstant.DB_MESSAGE_TYPES_SAVED:\r\n      newState.messages = action.payload;\r\n      return newState;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};","import ActionConstant from '../ActionConstants';\r\nimport copyState from \"../copyStateHelper.js\";\r\n\r\nvar initialState = {\r\n  isLoading: false,\r\n  messages: [],\r\n  messagePreviewId: '',\r\n  messagePreview: {}\r\n};\r\n\r\nexport const messagesReducer = (state = initialState, action) => {\r\n\r\n  // redux works on the principle of keeping your data immutable.\r\n  // directly editing the state will cause an error, it leaves immutability up to you,\r\n  // the simplest solution with smallest footprint I've found so far is to use this deepCopy helper I found online.\r\n  var newState = copyState(state);\r\n\r\n  switch (action.type) {\r\n    case ActionConstant.DB_MESSAGES_GET:\r\n      newState.isLoading = action.isLoading;\r\n      return newState;\r\n\r\n    case ActionConstant.DB_MESSAGE_SAVED:\r\n      newState.messages = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.DB_RETURNED_MESSAGE:\r\n      newState.messagePreviewId = action.payload._id;\r\n      newState.messagePreview = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.RESET_MESSAGE_PREVIEW:\r\n      newState.messagePreviewId = '';\r\n      newState.messagePreview = {};\r\n      return newState;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};","import ActionConstant from '../ActionConstants';\r\nimport deepCopy from \"../copyStateHelper.js\";\r\n\r\nconst initialState = {\r\n  selectedSchemaID: '',\r\n  previewSchema: {}\r\n};\r\n\r\nexport const umpireMenuReducer = (state = initialState, action) => {\r\n\r\n  let newState = deepCopy(state);\r\n\r\n  switch (action.type) {\r\n    case ActionConstant.SET_SELECTED_SCHEMA:\r\n      newState.selectedSchemaID = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.SET_PREVIEW_SCHEMA:\r\n      newState.previewSchema = action.payload;\r\n      return newState;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};","import ActionConstant from '../ActionConstants';\r\nimport copyState from \"../copyStateHelper.js\";\r\nimport _ from \"lodash\";\r\nimport uniqId from \"uniqid\";\r\n\r\nimport {\r\n  forceTemplate,\r\n  channelTemplate,\r\n} from \"../../api/consts\";\r\n\r\nvar initialState = {\r\n  isLoading: false,\r\n  wargameList: [],\r\n  currentWargame: '',\r\n  wargameTitle: '',\r\n  validation: {\r\n    validWargameName: true,\r\n  },\r\n  tabs: {\r\n    0: {\r\n      name: \"Overview - settings\",\r\n      data: {\r\n        gameDescription: '',\r\n        spatialRepresentation: '',\r\n        planningInterval: null,\r\n        replayInterval: null,\r\n        turnStrategy: '',\r\n      },\r\n      complete: false,\r\n    },\r\n    // 1: {\r\n    //   name: \"Platform Types\",\r\n    //   complete: false,\r\n    // },\r\n    1: {\r\n      name: \"Forces\",\r\n      data: {\r\n        // forces: {'white': forceTemplate},\r\n        forces: {},\r\n        selectedForce: '',\r\n        roles: [],\r\n      },\r\n      complete: false,\r\n    },\r\n    // 3: {\r\n    //   name: \"Back history\",\r\n    //   complete: false,\r\n    // },\r\n    // 4: {\r\n    //   name: \"Positions\",\r\n    //   complete: false,\r\n    // },\r\n    2: {\r\n      name: \"Channels\",\r\n      data: {\r\n        // channels: {'white weather': channelTemplate},\r\n        channels: {},\r\n        selectedChannel: '',\r\n      },\r\n      complete: false,\r\n    },\r\n    // 6: {\r\n    //   name: \"Play control\",\r\n    //   complete: false,\r\n    // },\r\n  },\r\n  currentTab: 0\r\n};\r\n\r\nexport const wargamesReducer = (state = initialState, action) => {\r\n\r\n  let newState = copyState(state);\r\n\r\n  let tab = newState.currentTab;\r\n\r\n  let curChannel;\r\n  let recipientIndex;\r\n\r\n  switch (action.type) {\r\n\r\n    case ActionConstant.ALL_WARGAME_NAMES_SAVED:\r\n      newState.wargameList = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.SET_CURRENT_WARGAME:\r\n      newState.currentWargame = action.payload.name;\r\n      newState.wargameTitle = action.payload.wargameTitle;\r\n      newState.tabs = action.payload.tabs;\r\n      return newState;\r\n\r\n    case ActionConstant.SET_WARGAME_NAME:\r\n\r\n      let listWithoutThis = [];\r\n\r\n      newState.wargameList.forEach((game) => {\r\n        if (game.name !== newState.currentWargame) listWithoutThis.push(game);\r\n      });\r\n\r\n      let uniqueName = listWithoutThis.every((wargame) => wargame.title !== action.payload );\r\n\r\n      newState.validation.validWargameName = uniqueName;\r\n      newState.wargameTitle = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.SET_CURRENT_GAME_SETUP_TAB:\r\n      newState.currentTab = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_GAME_SETUP_DATA:\r\n      newState.tabs[tab].data = {...newState.tabs[tab].data, ...action.payload};\r\n      break;\r\n\r\n    case ActionConstant.ADD_NEW_FORCE:\r\n      newState.tabs[tab].data.forces[action.payload] = forceTemplate;\r\n      break;\r\n\r\n    case ActionConstant.SET_SELECTED_FORCE:\r\n      newState.tabs[tab].data.selectedForce = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.ADD_NEW_CHANNEL:\r\n      newState.tabs[tab].data.channels[action.payload] = channelTemplate;\r\n      break;\r\n\r\n    case ActionConstant.SET_SELECTED_CHANNEL:\r\n      newState.tabs[tab].data.selectedChannel = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_FORCE_OVERVIEW:\r\n      let selected = newState.tabs[tab].data.selectedForce;\r\n      newState.tabs[tab].data.forces[selected].overview = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.ADD_NEW_RECIPIENT:\r\n      curChannel = newState.tabs[tab].data.selectedChannel;\r\n      let newParticipant = {...action.payload, subscriptionId: uniqId.time()};\r\n      newState.tabs[tab].data.channels[curChannel].push(newParticipant);\r\n      break;\r\n\r\n    case ActionConstant.UPDATE_RECIPIENT:\r\n      curChannel = newState.tabs[tab].data.selectedChannel;\r\n      recipientIndex = newState.tabs[tab].data.channels[curChannel].findIndex((recipient) => recipient.subscriptionId === action.payload.id);\r\n      newState.tabs[tab].data.channels[curChannel].splice(recipientIndex, 1, {...action.payload.data, subscriptionId: action.payload.id});\r\n      break;\r\n\r\n    case ActionConstant.REMOVE_RECIPIENT:\r\n      curChannel = newState.tabs[tab].data.selectedChannel;\r\n      recipientIndex = newState.tabs[tab].data.channels[curChannel].findIndex((recipient) => recipient.subscriptionId === action.payload);\r\n      newState.tabs[tab].data.channels[curChannel].splice(recipientIndex, 1);\r\n      break;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n\r\n  let flatten = (n) => {\r\n    if (_.isEmpty(n)) return null; // force show empty array\r\n    return (_.isArray(n) || _.isObject(n)) ? _.flatMapDeep(n, flatten) : n;\r\n  };\r\n\r\n  let inputResults = _.flatMapDeep(newState.tabs[tab].data, flatten);\r\n\r\n  newState.tabs[tab].complete = inputResults.every((item) => item !== null && item.length > 0);\r\n\r\n  return newState;\r\n};\r\n","import ActionConstant from '../ActionConstants.js';\r\nimport copyState from \"../copyStateHelper.js\";\r\n\r\nconst initialState = {\r\n  open: false,\r\n  message: '',\r\n};\r\n\r\nexport const notificationReducer = (state = initialState, action) => {\r\n\r\n    let newState = copyState(state);\r\n\r\n    switch (action.type) {\r\n      case ActionConstant.SHOW_NOTIFICATION:\r\n        newState = action.payload;\r\n        return newState;\r\n\r\n      case ActionConstant.HIDE_NOTIFICATION:\r\n        newState = action.payload;\r\n        return newState;\r\n\r\n      default:\r\n        return newState;\r\n    }\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\nimport copyState from \"../../Helpers/copyStateHelper\";\r\nimport _ from \"lodash\";\r\n\r\nconst initialState = {\r\n  selectedForce: '',\r\n  selectedRole: '',\r\n  selectedChannel: '',\r\n  currentWargame: '',\r\n  wargameTitle: '',\r\n  channels: {},\r\n  allChannels: {},\r\n  forces: {},\r\n  allForces: {},\r\n  messageSchema: {},\r\n  messages: [],\r\n};\r\n\r\nexport const playerUiReducer = (state = initialState, action) => {\r\n\r\n  let newState = copyState(state);\r\n\r\n  switch (action.type) {\r\n\r\n    case ActionConstant.SET_CURRENT_WARGAME_PLAYER:\r\n\r\n      newState.currentWargame = action.payload.name;\r\n      newState.wargameTitle = action.payload.wargameTitle;\r\n\r\n      let channelsTab = Object.values(action.payload.tabs).find((obj) => obj.name === \"Channels\");\r\n      newState.allChannels = channelsTab.data.channels;\r\n\r\n      let forcesTab = Object.values(action.payload.tabs).find((obj) => obj.name === \"Forces\");\r\n      newState.allForces = forcesTab.data.forces;\r\n      break;\r\n\r\n    case ActionConstant.SET_FORCE:\r\n      newState.selectedForce = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_ROLE:\r\n      newState.selectedRole = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_FILTERED_CHANNELS:\r\n\r\n      let channels = {};\r\n      for (let channel in newState.allChannels) {\r\n\r\n        let channelParticipants = newState.allChannels[channel].filter((recipient) => recipient.force === newState.selectedForce && recipient.role === newState.selectedRole);\r\n        let channelActive = newState.allChannels[channel].some((recipient) => recipient.force === newState.selectedForce && recipient.role === newState.selectedRole);\r\n\r\n        // only allow unique participants in gameSetup but check here also\r\n        channelParticipants = _.uniqWith(channelParticipants, _.isEqual);\r\n\r\n        if (channelActive) {\r\n          channels[channel] = {\r\n            templates: _.flatMap(channelParticipants, (participant) => participant.templates),\r\n            messages: []\r\n          };\r\n        }\r\n      }\r\n      newState.selectedChannel = Object.keys(channels)[0];\r\n      newState.channels = channels;\r\n      break;\r\n\r\n    case ActionConstant.SET_CHANNEL:\r\n      newState.selectedChannel = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_MESSAGE_SCHEMA:\r\n      newState.messageSchema = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_LATEST_MESSAGES:\r\n      newState.messages = action.payload;\r\n      break;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n\r\n  return newState;\r\n};\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport { messageTypesReducer } from \"../ActionsAndReducers/dbMessageTypes/messageTypes_Reducer\";\r\nimport { messagesReducer } from \"../ActionsAndReducers/dbMessages/messages_Reducer\";\r\nimport { currentModal } from \"../ActionsAndReducers/Modal/Modal_Reducer\";\r\nimport { currentViewURIReducer } from \"../ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_Reducer\";\r\nimport { umpireMenuReducer } from \"../ActionsAndReducers/UmpireMenu/umpireMenu_Reducer\";\r\nimport { wargamesReducer } from \"../ActionsAndReducers/dbWargames/wargames_Reducer\";\r\nimport { notificationReducer } from \"../ActionsAndReducers/Notification/Notification_Reducer\";\r\nimport { playerUiReducer } from \"../ActionsAndReducers/playerUi/playerUi_Reducer\";\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\nconst middlewares = [thunk];\r\n\r\nif (process.env.NODE_ENV === `development`) {\r\n  const { logger } = require(`redux-logger`);\r\n  middlewares.push(logger);\r\n}\r\n\r\nexport default createStore(combineReducers({\r\n  messageTypes: messageTypesReducer,\r\n  messages: messagesReducer,\r\n  umpireMenu: umpireMenuReducer,\r\n  currentViewURI: currentViewURIReducer,\r\n  currentModal,\r\n  notification: notificationReducer,\r\n  wargame: wargamesReducer,\r\n  playerUi: playerUiReducer,\r\n}), applyMiddleware(...middlewares));\r\n","import ActionConstant from '../ActionConstants';\r\n\r\nexport const currentViewURIReducer = (state = '/', action) => {\r\n\r\n  let newState = state;\r\n\r\n  switch (action.type) {\r\n    case ActionConstant.SET_CURRENT_VIEW_FROM_URI:\r\n      window.history.pushState({}, '', action.payload);\r\n      newState = action.payload;\r\n      return newState;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};","import ActionConstant from '../ActionConstants.js';\r\nimport copyState from \"../copyStateHelper.js\";\r\n\r\nexport const currentModal = (state = {}, action) => {\r\n\r\n    let newState = copyState(state);\r\n\r\n    switch (action.type) {\r\n      case ActionConstant.OPEN_MODAL:\r\n          newState = action.payload;\r\n          return newState;\r\n        case ActionConstant.CLOSE_MODAL:\r\n          newState = action.payload;\r\n          return newState;\r\n        default:\r\n          newState = {};\r\n          return newState;\r\n    }\r\n};\r\n","export default function deepCopy(objectpassed) {\r\n\r\n  // arrays return \"object\" in js so any object or array will be looped to copy deeply.\r\n  // strings, numbers and booleans are deep copied naturally, while any objects within arrays or objects\r\n  // or objects within arrays are only copied shallowly.\r\n  if (objectpassed === null || typeof objectpassed !== 'object') {\r\n    return objectpassed;\r\n  }\r\n\r\n  var temporaryStorage = objectpassed.constructor();\r\n\r\n  for (var key in objectpassed) {\r\n    temporaryStorage[key] = deepCopy((objectpassed[key]));\r\n  }\r\n  return temporaryStorage;\r\n}","import React, { Component } from 'react';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport ModalSwitch from \"./Components/Modals/ModalSwitch\";\r\nimport Notification from \"./Components/Notification\";\r\n\r\nimport Router from \"./Components/Router\";\r\n\r\nimport './scss/App.scss';\r\nimport Store from './Store/Store';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    document.title = \"Serge\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Provider store={Store}>\r\n          <Router />\r\n          <ModalSwitch />\r\n          <Notification />\r\n        </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}