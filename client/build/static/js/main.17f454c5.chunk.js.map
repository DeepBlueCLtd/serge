{"version":3,"sources":["ActionsAndReducers/ActionConstants.js","ActionsAndReducers/Modal/Modal_ActionCreators.js","Components/Modals/ModalWrapper.jsx","api/consts.js","api/messageTypes_api.js","ActionsAndReducers/playerUi/playerUi_ActionCreators.js","api/wargames_api.js","ActionsAndReducers/Notification/Notification_ActionCreators.js","ActionsAndReducers/dbWargames/wargames_ActionCreators.js","Components/Modals/AddForceModal.jsx","api/messages_api.js","ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_ActionCreators.js","ActionsAndReducers/dbMessages/messages_ActionCreators.js","ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators.js","ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators.js","Components/Modals/DeleteModal.jsx","Components/Modals/AddChannelModal.jsx","Components/Modals/ModalSwitch.jsx","Components/Notification.jsx","Components/Link.jsx","Views/ChooseInterface.jsx","Components/WargameSearchList.jsx","Views/GameDesignerInterface.jsx","Components/JsonCreator.jsx","Components/MessagePreview.jsx","Components/SearchList.jsx","Views/UmpireMenu.jsx","Components/JsonEditor.jsx","Views/EditMessage.jsx","Views/CreateMessage.jsx","Components/jsonSchemaEditor/json-schema-editor/editor.js","Components/jsonSchemaEditor/jsonEditor.js","Components/jsonSchemaEditor/editorPreview.js","Components/jsonSchemaEditor/index.js","Views/EditTemplate.jsx","Views/CreateTemplate.jsx","Components/Inputs/TextInput.jsx","Components/Inputs/DropdownInput.jsx","Components/Layout/Row.jsx","Components/Inputs/TextArea.jsx","Views/TabViews/SettingsTab.jsx","Components/TabsSearchList.jsx","Components/Layout/RemovableGroupItem.jsx","Views/TabViews/ForcesTab.jsx","Components/Layout/EditSubscriptionRow.jsx","Components/Layout/ChannelsTable.jsx","Views/TabViews/ChannelsTab.jsx","Components/ValidationNotification.jsx","Views/TabbedView.jsx","Components/ProgressBar/ProgressBar.jsx","Views/GameSetup.jsx","Components/MessagePreviewPlayerUi.jsx","Views/MessagesList.jsx","Components/MessageCreator.jsx","Components/NewMessage.jsx","Views/MessageFeeds.jsx","Views/PlayerUi.jsx","Components/Router.jsx","ActionsAndReducers/copyStateHelper.js","ActionsAndReducers/dbMessageTypes/messageTypes_Reducer.js","ActionsAndReducers/dbMessages/messages_Reducer.js","ActionsAndReducers/UmpireMenu/umpireMenu_Reducer.js","ActionsAndReducers/dbWargames/wargames_Reducer.js","ActionsAndReducers/Notification/Notification_Reducer.js","ActionsAndReducers/playerUi/playerUi_Reducer.js","Store/Store.jsx","ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_Reducer.js","ActionsAndReducers/Modal/Modal_Reducer.js","Helpers/copyStateHelper.js","App.jsx","index.jsx"],"names":["Object","freeze","ASYNC_SUCCESS","ASYNC_ERROR","ASYNC_LOADING","NORMAL_ACTION","DB_MESSAGE_STATUS","DB_MESSAGE_CREATION_LOADING","DB_MESSAGE_GET_LOADING","DB_SAVE_MESSAGES","DB_MESSAGE_TYPES_GET","DB_MESSAGE_TYPES_SAVED","SET_CURRENT_VIEW_FROM_URI","DB_MESSAGE_SAVED","DB_MESSAGES_GET","DB_RETURNED_MESSAGE","RESET_MESSAGE_PREVIEW","SET_SELECTED_SCHEMA","SET_PREVIEW_SCHEMA","OPEN_MODAL","CLOSE_MODAL","SET_CURRENT_GAME_SETUP_TAB","SET_GAME_SETUP_DATA","ALL_WARGAME_NAMES_SAVED","SET_CURRENT_WARGAME","ADD_NEW_FORCE","SET_SELECTED_FORCE","ADD_NEW_CHANNEL","SET_SELECTED_CHANNEL","SET_WARGAME_NAME","SET_FORCE_OVERVIEW","GAME_TITLE_INVALID","ADD_NEW_RECIPIENT","SHOW_NOTIFICATION","HIDE_NOTIFICATION","UPDATE_RECIPIENT","REMOVE_RECIPIENT","SET_CURRENT_WARGAME_PLAYER","SET_FORCE","SET_ROLE","SET_FILTERED_CHANNELS","SET_CHANNEL","SET_MESSAGE_SCHEMA","SET_LATEST_MESSAGES","modalAction","open","openModal","type","ActionConstant","payload","modal","close","ModalWrapper","handleBackgroundClick","e","target","currentTarget","_this","props","dispatch","setSize","this","editable","react_default","a","createElement","className","onClick","children","Component","connect","serverPath","databasePath","forceTemplate","overview","roles","channelTemplate","dbDefaultSettings","_id","wargameTitle","tabs","0","name","data","gameDescription","spatialRepresentation","planningInterval","replayInterval","turnStrategy","1","forces","selectedForce","2","channels","selectedChannel","db","PouchDB","allDocs","then","entries","rows","length","machine","Date","toISOString","lastUpdated","title","details","machineryFailure","completed","put","setTimeout","weather","weatherForecast","console","log","populateDb","postNewMessage","schema","Promise","resolve","reject","asyncToGenerator","regenerator_default","mark","_callee","allMessages","time","schemaObj","wrap","_context","prev","next","getAllMessagesFromDb","sent","find","messageType","toLowerCase","abrupt","result","catch","err","stop","duplicateMessageInDb","id","get","doc","concat","uniqid","updateMessageInDb","_callee2","_context2","_rev","deleteMessageFromDb","remove","changes","since","include_docs","descending","results","map","filter","hasOwnProperty","setForce","setRole","setFilteredChannels","setChannel","setMessageSchema","setWargameMessages","messages","getWargame","gamePath","_ref","wargame","wargamesApi","_x","apply","arguments","saveMessage","dbName","message","_ref2","_x2","getMessageTemplate","_ref3","_callee3","template","_context3","messageTemplatesApi","_x3","getAllWargameMessages","_ref4","_callee4","_context4","_x4","wargameDbStore","populateWargame","fetch","response","json","dbs","wargameNames","toCreate","_","difference","pull","forEach","setMaxListeners","changesListener","live","timeout","heartbeat","on","getAllMessages","unshift","promises","game","res","all","createWargame","uniqId","settings","objectSpread","editWargame","dbPath","getNameFromPath","updateWargame","getAllWargames","games","some","updateLocalDoc","duplicateWargame","newDb","newDbName","path","URL","pathname","index","lastIndexOf","substring","showNotification","hideNotification","setCurrentTab","tab","setGameData","setWargameTitle","addNewForce","setSelectedForce","addNewChannel","setSelectedChannel","setForceOverview","saveAllWargameNames","names","setCurrentWargame","addRecipientToChannel","updateRecipient","createNewWargameDB","wargames","omit","clearWargames","window","location","reload","_ref5","_callee5","localDoc","_context5","_x5","AddForceModal","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hideModal","setState","forceName","setNewForceName","value","sameName","currentTab","addForce","state","currentModal","disable","Modals_ModalWrapper","autoFocus","onChange","disabled","addMessage","messageDetail","el","updatedMessage","getMessage","setCurrentViewFromURI","DBMessageSaveStatus","status","DBSaveMessageArray","DBSaveMessagePreview","loadingDBMessageCreate","isLoading","loadingDBMessageGet","resetMessagePreview","createMessage","check","object","Error","messagesApi","ok","t0","alert","duplicateMessage","messageId","string","updateMessage","responses","_message","toConsumableArray","deleteMessage","getSingleMessage","_ref6","createMessageType","messageTypesApi","duplicateMessageType","updateMessageType","deleteMessageType","getAllMessageTypes","setSelectedSchema","schemaId","setPreviewSchema","DeleteModal","currentViewURI","umpireMenu","selectedSchemaID","messagePreviewId","AddChannelModal","channelName","setChannelName","addChannel","ModalSwitch","Modals_AddForceModal","Modals_DeleteModal","Modals_AddChannelModal","Fragment","Notification","onClickHandler","notification","react_fontawesome_index_es","icon","faTimes","Link","aNewTab","metaKey","ctrlKey","anExternalLink","href","startsWith","preventDefault","class","UmpireMenu","activeGames","wargameList","Components_Link","classNames","link--disabled","WargameSearchList","filterMessages","input","searchInput","searchQuery","listData","indexOf","displayControls","activeTitle","hideControls","messageList","nextProps","nextState","nextContext","sameMessagesQuantity","_callee6","_context6","_x6","that","list","key","placeholder","onMouseOver","bind","onMouseLeave","faPencilAlt","setSelectedWargame","faClone","GameDesignerInterface","Components_WargameSearchList","JsonCreator","messageTypes","mes","editor","getValue","editorPreviewRef","React","createRef","selectedSchema","destroy","JSONEditor","current","theme","setValue","faSave","ref","MessagePreview","pair","deconstructObj","moment","format","withoutName","item","obj","i","createObjItem","array","of","deconstructArr","boolean","createBoolItem","ISO_8601","isValid","createTimeItem","createStrItem","detail","from","SearchList","setSelected","active","selected","date","searchlist-title","setSelectedSchemaId","creatorType","newState","duplicateTemplate","deleteTemplate","split","buildMessageBoard","_ref7","faPlus","Components_SearchList","faTrash","faArrowLeft","size","createSearchListSection","Components_JsonCreator","previewForm","Components_MessagePreview","messagePreview","createTemplatesActions","createMessagesActions","EditMessage","messageToEdit","JsonEditor","Editor","elementId","jsonEditor","renderZone","document","getElementById","PreviewEditor","SchemaEditor","isObjectPropertiesButton","node","matches","span","parentElement","querySelector","innerText","observer","MutationObserver","mutationsList","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","addedNodes","nodeType","classList","add","return","observe","childList","subtree","prototype","updateSchema","validate","getJSON","create","defineProperty","enumerable","writable","no_additional_properties","custom_validators","errors","minimum","maximum","push","property","button","root","getButton","button_holder","getHeaderButtonHolder","appendChild","header","parentNode","insertBefore","nextSibling","addEventListener","contents","blob","Blob","JSON","stringify","navigator","msSaveOrOpenBlob","download","createObjectURL","dataset","downloadurl","join","dispatchEvent","MouseEvent","view","bubbles","cancelable","JsonSchemaEditor","content","schemaEditor","editorBox","assertThisInitialized","updateEditor","saved","defaultValue","newValue","options","newJson","save","counter","defaults","object_layout","layout","booleanOptions","Card","CardHeader","CardBody","CardFooter","EditorPreview","previewBox","editorPreview","iconlib","updateMetaSchema","updatePreviewSchema","updateOptions","properties","Status","enum","Description","metaSchema","jsonMetaSchema","previewSchema","metaschema","jsonSchemaEditor","saveSchema","TextInput","updateStore","numInput","invalid","validInput","DropdownInput","selectOptions","option","Row","TextArea","style","resize","SettingsTab","updateDescription","updateSpatialRepresentation","updatePlanningInterval","updateReplayInterval","updateTurnStrategy","Inputs_TextArea","Layout_Row","Inputs_DropdownInput","Inputs_TextInput","TabsSearchList","prop","list-title","createList","RemovableGroupItem","ForcesTab","force","updateOverview","curTab","role","Layout_RemovableGroupItem","Components_TabsSearchList","createForceEditor","EditSubscriptionRow","updateSubscriptionForce","editSubscriptionForce","updateSubscriptionRole","editSubscriptionRole","updateSubscriptionTemplates","editSubscriptionTemplates","updateChannel","subscriptionData","label","templates","subscriptionId","cancelEdit","react_select_esm","forceOptions","roleOptions","templateOptions","isMulti","ChannelsTable","subscriptionToEdit","setSelectedRole","selectedRole","setSelectedTemplate","selectedTemplates","addToChannel","channelData","values","d","row","j","removeSubscription","editSubscription","_this2","Layout_EditSubscriptionRow","createRow","isDisabled","filterChannels","channelList","curPropsState","keys","nextPropsState","Layout_ChannelsTable","createChannelEditor","ValidationNotification","TabContainer","Typography","component","padding","TabbedView","handleChange","event","invalidFields","classes","AppBar","position","color","Tabs","indicatorColor","textColor","centered","tabName","Tab","TabViews_SettingsTab","TabViews_ForcesTab","ChannelsTab","Components_ValidationNotification","validation","withStyles","flexGrow","backgroundColor","palette","background","paper","ProgressBar","GameSetup","updateWargameTitle","saveWargame","checkAllValid","currentWargame","reduce","entry","parseInt","complete","progress-indicator--active","progress-indicator--complete","validWargameName","link","link--noIcon","Components_ProgressBar_ProgressBar","createIndicators","Views_TabbedView","MessagesList","channel","curChannel","Collapsible_default","trigger","transitionTime","easing","MessagePreviewPlayerUi","sendMessage","messageDetails","playerUi","NewMessage","setTemplate","val","MessageCreator","MessageFeeds","createTabs","createMessageList","MessageFeeds_TabContainer","Views_MessagesList","Components_NewMessage","messageSchema","PlayerUi","updateSelectedWargame","wargamePath","updateSelectedForce","updateSelectedRole","goBack","allForces","cursor","Views_MessageFeeds","Router","routes","action","ChooseInterface","Views_GameDesignerInterface","Views_UmpireMenu","CreateTemplate","EditTemplate","CreateMessage","Views_EditMessage","Views_GameSetup","Views_PlayerUi","currentView","router","UniversalRouter","deepCopy","objectpassed","temporaryStorage","constructor","initialState","allChannels","middlewares","thunk","createStore","combineReducers","copyState","history","pushState","recipientIndex","listWithoutThis","uniqueName","every","newParticipant","findIndex","recipient","splice","inputResults","flatMapDeep","flatten","n","isEmpty","isArray","isObject","channelsTab","forcesTab","channelParticipants","channelActive","uniqWith","isEqual","flatMap","participant","applyMiddleware","App","es","store","Store","Components_Router","Modals_ModalSwitch","Components_Notification","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.17f454c5.chunk.js","sourcesContent":["export default Object.freeze({\r\n  ASYNC_SUCCESS: 'ASYNC_SUCCESS',\r\n  ASYNC_ERROR: 'ASYNC_ERROR',\r\n  ASYNC_LOADING: 'ASYNC_LOADING',\r\n  NORMAL_ACTION: 'NORMAL_ACTION',\r\n  DB_MESSAGE_STATUS: 'DB_MESSAGE_STATUS',\r\n  DB_MESSAGE_CREATION_LOADING:  'DB_MESSAGE_CREATION_LOADING',\r\n  DB_MESSAGE_GET_LOADING: 'DB_MESSAGE_GET_LOADING',\r\n  DB_SAVE_MESSAGES: 'DB_SAVE_MESSAGES',\r\n  DB_MESSAGE_TYPES_GET: 'DB_MESSAGE_TYPES_GET',\r\n  DB_MESSAGE_TYPES_SAVED: 'DB_MESSAGE_TYPES_SAVED',\r\n  SET_CURRENT_VIEW_FROM_URI: 'SET_CURRENT_VIEW_FROM_URI',\r\n  DB_MESSAGE_SAVED: 'DB_MESSAGE_SAVED',\r\n  DB_MESSAGES_GET: 'DB_MESSAGES_GET',\r\n  DB_RETURNED_MESSAGE: 'DB_RETURNED_MESSAGE',\r\n  RESET_MESSAGE_PREVIEW: 'RESET_MESSAGE_PREVIEW',\r\n  SET_SELECTED_SCHEMA: 'SET_SELECTED_SCHEMA',\r\n  SET_PREVIEW_SCHEMA: 'SET_PREVIEW_SCHEMA',\r\n  OPEN_MODAL: 'OPEN_MODAL',\r\n  CLOSE_MODAL: 'CLOSE_MODAL',\r\n  SET_CURRENT_GAME_SETUP_TAB: 'SET_CURRENT_GAME_SETUP_TAB',\r\n  SET_GAME_SETUP_DATA: 'SET_GAME_SETUP_DATA',\r\n  ALL_WARGAME_NAMES_SAVED: 'ALL_WARGAME_NAMES_SAVED',\r\n  SET_CURRENT_WARGAME: 'SET_CURRENT_WARGAME',\r\n  ADD_NEW_FORCE: 'ADD_NEW_FORCE',\r\n  SET_SELECTED_FORCE: 'SET_SELECTED_FORCE',\r\n  ADD_NEW_CHANNEL: 'ADD_NEW_CHANNEL',\r\n  SET_SELECTED_CHANNEL: 'SET_SELECTED_CHANNEL',\r\n  SET_WARGAME_NAME: 'SET_WARGAME_NAME',\r\n  SET_FORCE_OVERVIEW: 'SET_FORCE_OVERVIEW',\r\n  GAME_TITLE_INVALID: 'GAME_TITLE_INVALID',\r\n  ADD_NEW_RECIPIENT: 'ADD_NEW_RECIPIENT',\r\n  SHOW_NOTIFICATION: 'SHOW_NOTIFICATION',\r\n  HIDE_NOTIFICATION: 'HIDE_NOTIFICATION',\r\n  UPDATE_RECIPIENT: 'UPDATE_RECIPIENT',\r\n  REMOVE_RECIPIENT: 'REMOVE_RECIPIENT',\r\n  SET_CURRENT_WARGAME_PLAYER: 'SET_CURRENT_WARGAME_PLAYER',\r\n  SET_FORCE: 'SET_FORCE',\r\n  SET_ROLE: 'SET_ROLE',\r\n  SET_FILTERED_CHANNELS: 'SET_FILTERED_CHANNELS',\r\n  SET_CHANNEL: 'SET_CHANNEL',\r\n  SET_MESSAGE_SCHEMA: 'SET_MESSAGE_SCHEMA',\r\n  SET_LATEST_MESSAGES: 'SET_LATEST_MESSAGES',\r\n});\r\n","import ActionConstant from '../ActionConstants.js';\r\n\r\nexport const modalAction = {\r\n  open: (openModal) => ({\r\n    type: ActionConstant.OPEN_MODAL,\r\n    payload: {\r\n      open: true,\r\n      modal: openModal,\r\n    },\r\n  }),\r\n\r\n  close: () => ({\r\n    type: ActionConstant.CLOSE_MODAL,\r\n    payload: {\r\n      open: false,\r\n      modal: '',\r\n    },\r\n  })\r\n};\r\n","import React, {Component}  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\n\r\nclass ModalWrapper extends Component {\r\n\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  handleBackgroundClick = (e) => {\r\n    if (e.target === e.currentTarget) this.props.dispatch(modalAction.close());\r\n  };\r\n\r\n  render() {\r\n    const setSize = this.props.editable ? \"modal setsize\": 'modal';\r\n\r\n    return (\r\n      <div className=\"modal-bg\" onClick={this.handleBackgroundClick}>\r\n        <div className={setSize}>\r\n          {this.props.children}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default connect()(ModalWrapper);","export const serverPath = 'https://serge-dev.herokuapp.com/';\r\nexport const databasePath = 'https://serge-dev.herokuapp.com/db/';\r\n// export const serverPath = 'http://localhost:8080/';\r\n// export const databasePath = 'http://localhost:8080/db/';\r\n\r\nexport const MSG_STORE = \"messages\";\r\nexport const MSG_TYPE_STORE = \"message_types\";\r\n\r\nexport const headers = {\r\n  'Content-Type': 'application/json',\r\n  'Access-Control-Allow-Origin': '*',\r\n  'Access-Control-Allow-Methods': 'POST',\r\n  'Access-Control-Allow-Headers': 'Authorization, Lang'\r\n};\r\n\r\nexport const forceTemplate = {\r\n  overview: 'An overview written here..',\r\n  roles: ['General']\r\n};\r\n\r\nexport const channelTemplate = [];\r\n\r\n\r\nexport const dbDefaultSettings = {\r\n  _id: '_local/settings',\r\n  wargameTitle: 'wargame',\r\n  tabs: {\r\n    0: {\r\n      name: \"Overview - settings\",\r\n      data: {\r\n        gameDescription: '',\r\n        spatialRepresentation: '',\r\n        planningInterval: null,\r\n        replayInterval: null,\r\n        turnStrategy: '',\r\n      }\r\n    },\r\n    1: {\r\n      name: \"Forces\",\r\n      data: {\r\n        forces: {},\r\n        roles: ['General'],\r\n        selectedForce: '',\r\n      },\r\n    },\r\n    2: {\r\n      name: \"Channels\",\r\n      data: {\r\n        channels: {},\r\n        selectedChannel: '',\r\n      },\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// export const channelTemplate = [{\r\n//   force: 'white',\r\n//   role: 'General',\r\n//   template: {\r\n//     name: '',\r\n//     id: '',\r\n//   },\r\n//   // subscriptionId: uniqid.time(),\r\n// }];\r\n","import uniqid from \"uniqid\";\r\n\r\nimport PouchDB from \"pouchdb\";\r\nimport { databasePath,\r\n         MSG_TYPE_STORE } from \"./consts\";\r\n\r\nimport machineryFailure from '../Schemas/machinery_failure.json';\r\nimport weatherForecast from '../Schemas/weather_forecase.json';\r\n\r\nvar db = new PouchDB(databasePath+MSG_TYPE_STORE);\r\n\r\nvar populateDb = function () {\r\n  var machine = {\r\n    _id: new Date().toISOString(),\r\n    lastUpdated: new Date().toISOString(),\r\n    title: 'machinery failure',\r\n    details: machineryFailure,\r\n    completed: false\r\n  };\r\n  db.put(machine);\r\n\r\n  setTimeout(function () {\r\n    var weather = {\r\n      _id: new Date().toISOString(),\r\n      lastUpdated: new Date().toISOString(),\r\n      title: 'weather forecast',\r\n      details: weatherForecast,\r\n      completed: false\r\n    };\r\n    db.put(weather).then(() => {\r\n      console.log('DATA BASE COMPLETE');\r\n    });\r\n  },2000);\r\n};\r\n\r\ndb.allDocs().then(entries => {\r\n  if (entries.rows.length === 0) {\r\n    populateDb();\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\nexport const postNewMessage = (schema) => {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    (async() => {\r\n\r\n      const allMessages = await getAllMessagesFromDb();\r\n\r\n      const matchedName = allMessages.find((messageType) => messageType.title.toLowerCase() === schema.title.toLowerCase());\r\n\r\n      if (matchedName) {\r\n        reject(\"Message title already used\");\r\n        return;\r\n      }\r\n\r\n      let time = new Date().toISOString();\r\n\r\n      var schemaObj = {\r\n        _id: time,\r\n        lastUpdated: time,\r\n        title: schema.title,\r\n        details: schema,\r\n        completed: false\r\n      };\r\n\r\n      return db.put(schemaObj)\r\n        .then(function (result) {\r\n          resolve(result);\r\n        })\r\n        .catch(function (err) {\r\n          console.log(err);\r\n          reject(false);\r\n        });\r\n\r\n    })();\r\n  });\r\n};\r\n\r\nexport const duplicateMessageInDb = (id) => {\r\n\r\n  let time = new Date().toISOString();\r\n\r\n  return new Promise((resolve, reject) => {\r\n    db.get(id)\r\n      .then(function (doc) {\r\n\r\n        // var updatedMessage = doc.details;\r\n\r\n        doc.details.title = `${doc.details.title} Copy-${uniqid.time()}`;\r\n\r\n        return db.put({\r\n          _id: time,\r\n          lastUpdated: time,\r\n          title: doc.details.title,\r\n          details: doc.details,\r\n        });\r\n      })\r\n      .then(function () {\r\n        resolve(true);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        reject(false);\r\n      })\r\n  });\r\n};\r\n\r\nexport const updateMessageInDb = (schema, id) => {\r\n  return new Promise((resolve, reject) => {\r\n    (async() => {\r\n\r\n      const allMessages = await getAllMessagesFromDb();\r\n\r\n      const matchedName = allMessages.find((messageType) => messageType.title.toLowerCase() === schema.title.toLowerCase());\r\n\r\n      if (matchedName) {\r\n        reject(\"Message title already used\");\r\n        return;\r\n      }\r\n\r\n      db.get(id)\r\n        .then(function (doc) {\r\n          return db.put({\r\n            _id: doc._id,\r\n            lastUpdated: new Date().toISOString(),\r\n            _rev: doc._rev,\r\n            title: schema.title,\r\n            details: schema\r\n          });\r\n        })\r\n        .then(function (result) {\r\n          resolve(result);\r\n        })\r\n        .catch(function (err) {\r\n          console.log(err);\r\n          reject(false);\r\n        })\r\n\r\n    })();\r\n  });\r\n};\r\n\r\nexport const deleteMessageFromDb = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    db.get(id)\r\n      .then(function (doc) {\r\n        return db.remove(doc);\r\n      })\r\n      .then(function (result) {\r\n        resolve(result);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        reject(false);\r\n      })\r\n  });\r\n};\r\n\r\nexport const getAllMessagesFromDb = () => {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    return db.changes({\r\n      since: 1,\r\n      include_docs: true,\r\n      descending: true,\r\n    })\r\n      .then(function (changes) {\r\n\r\n        let results = changes.results.map((a) => a.doc);\r\n        results = results.filter((a) => !a.hasOwnProperty('_deleted') && a.hasOwnProperty('details'));\r\n\r\n        resolve(results);\r\n      })\r\n      .catch(function (err) {\r\n        // handle errors\r\n        reject(err);\r\n        console.log(err);\r\n      });\r\n  });\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\nimport * as wargamesApi from \"../../api/wargames_api\";\r\nimport * as messageTemplatesApi from \"../../api/messageTypes_api\";\r\n\r\nconst setCurrentWargame = (data) => ({\r\n  type: ActionConstant.SET_CURRENT_WARGAME_PLAYER,\r\n  payload: data\r\n});\r\n\r\nexport const setForce = (data) => ({\r\n  type: ActionConstant.SET_FORCE,\r\n  payload: data\r\n});\r\n\r\nexport const setRole = (data) => ({\r\n  type: ActionConstant.SET_ROLE,\r\n  payload: data\r\n});\r\n\r\nexport const setFilteredChannels = () => ({\r\n  type: ActionConstant.SET_FILTERED_CHANNELS,\r\n});\r\n\r\nexport const setChannel = (data) => ({\r\n  type: ActionConstant.SET_CHANNEL,\r\n  payload: data,\r\n});\r\n\r\nexport const setMessageSchema = (schema) => ({\r\n  type: ActionConstant.SET_MESSAGE_SCHEMA,\r\n  payload: schema,\r\n});\r\n\r\nexport const setWargameMessages = (messages) => ({\r\n  type: ActionConstant.SET_LATEST_MESSAGES,\r\n  payload: messages,\r\n});\r\n\r\nexport const getWargame = (gamePath) => {\r\n  return async (dispatch) => {\r\n\r\n    // await wargamesApi.populateWargame();\r\n\r\n    // will get active wargame during later stages\r\n    let wargame = await wargamesApi.getWargame(gamePath);\r\n\r\n    console.log(wargame);\r\n\r\n    dispatch(setCurrentWargame(wargame));\r\n  }\r\n};\r\n\r\nexport const saveMessage = (dbName, details, message) => {\r\n  return async (dispatch) => {\r\n\r\n    await wargamesApi.postNewMessage(dbName, details, message);\r\n\r\n    console.log(dbName);\r\n    let messages = await wargamesApi.getAllMessages(dbName);\r\n\r\n    dispatch(setWargameMessages(messages));\r\n  }\r\n};\r\n\r\nexport const getMessageTemplate = (id) => {\r\n  return async (dispatch) => {\r\n    let messages = await messageTemplatesApi.getAllMessagesFromDb();\r\n\r\n    var template = messages.find((message) => message._id === id);\r\n\r\n    dispatch(setMessageSchema(template.details));\r\n  }\r\n};\r\n\r\nexport const getAllWargameMessages = (name) => {\r\n  return async (dispatch) => {\r\n\r\n    var messages = await wargamesApi.getAllMessages(name);\r\n\r\n    dispatch(setWargameMessages(messages));\r\n  }\r\n};\r\n","import uniqid from \"uniqid\";\r\nimport _ from \"lodash\";\r\nimport {fetch} from \"whatwg-fetch\";\r\n\r\nimport PouchDB from \"pouchdb\";\r\nimport {  databasePath,\r\n          serverPath,\r\n          dbDefaultSettings,\r\n          MSG_STORE,\r\n          MSG_TYPE_STORE } from \"./consts\";\r\n\r\nimport {setWargameMessages} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\n\r\nvar wargameDbStore = [];\r\n\r\n\r\nconst changesListener = (db, name, dispatch) => {\r\n  db.changes({since: 'now', live: true, timeout: false, heartbeat: false})\r\n    .on('change', function () {\r\n      (async () => {\r\n        let messages = await getAllMessages(name);\r\n        dispatch(setWargameMessages(messages));\r\n      })();\r\n    })\r\n    .on('error', function (err) {\r\n      console.log(err);\r\n      changesListener(db, name, dispatch);\r\n    });\r\n};\r\n\r\nexport const populateWargame = (dispatch) => {\r\n  return fetch(serverPath+'allDbs')\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((dbs) => {\r\n      let wargameNames = wargameDbStore.map((db) => db.name);\r\n      let toCreate = _.difference(dbs, wargameNames);\r\n      toCreate = _.pull(toCreate, MSG_STORE, MSG_TYPE_STORE, \"_replicator\", \"_users\");\r\n\r\n      toCreate.forEach((name) => {\r\n        var db = new PouchDB(databasePath+name);\r\n            db.setMaxListeners(11);\r\n\r\n            changesListener(db, name, dispatch);\r\n\r\n        wargameDbStore.unshift({name, db});\r\n      });\r\n\r\n      let promises = wargameDbStore.map((game) => {\r\n        return game.db.get(dbDefaultSettings._id)\r\n          .then(function (res) {\r\n            return {\r\n              name: game.db.name,\r\n              title: res.wargameTitle\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      });\r\n      return Promise.all(promises);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const clearWargames = () => {\r\n  fetch(serverPath+'clearAll')\r\n    .then(() => {\r\n      window.location.reload(true);\r\n    });\r\n};\r\n\r\nexport const createWargame = () => {\r\n  let uniqId = uniqid.time();\r\n\r\n  var name = `wargame-${uniqId}`;\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    var db = new PouchDB(databasePath+name);\r\n\r\n    wargameDbStore.unshift({name, db});\r\n\r\n    let settings = {...dbDefaultSettings, name: name};\r\n    settings.wargameTitle = `${settings.wargameTitle}-${uniqId}`;\r\n\r\n    db.put(settings)\r\n      .then(() => {\r\n        resolve(db.get(settings._id));\r\n      });\r\n  });\r\n};\r\n\r\nexport const editWargame = (dbPath) => {\r\n\r\n  let dbName = getNameFromPath(dbPath);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      var db = wargameDbStore.find((db) => db.name === dbName).db;\r\n      db.get(dbDefaultSettings._id)\r\n        .then((res) => {\r\n          resolve(res);\r\n        });\r\n    } catch (err) {\r\n      reject(err);\r\n    }\r\n  });\r\n};\r\n\r\nexport const updateWargame = (dbName, data, title) => {\r\n\r\n  return getAllWargames()\r\n    .then(function (games) {\r\n      if (games.some((game) => game.title === title && getNameFromPath(game.name) !== dbName)) return 'invalid';\r\n      return updateLocalDoc(dbName, data, title);\r\n    })\r\n    .catch(function (err) {\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const duplicateWargame = (dbPath) => {\r\n\r\n  let dbName = getNameFromPath(dbPath);\r\n\r\n  let db = wargameDbStore.find((db) => db.name === dbName).db;\r\n  let uniqId = uniqid.time();\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    var newDb;\r\n    var newDbName = `wargame-${uniqId}`;\r\n\r\n    db.get(dbDefaultSettings._id)\r\n      .then((res) => {\r\n        newDb = new PouchDB(databasePath+newDbName);\r\n        return res;\r\n      })\r\n      .then((res) => {\r\n        return newDb.put({\r\n          _id: dbDefaultSettings._id,\r\n          name: newDbName,\r\n          wargameTitle: `${res.wargameTitle}-${uniqId}`,\r\n          tabs: res.tabs,\r\n        })\r\n          .then(() => {\r\n            return res;\r\n          })\r\n      })\r\n      .then(() => {\r\n        wargameDbStore.unshift({name: newDbName, db: newDb});\r\n        return getAllWargames();\r\n      })\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n        console.log(err);\r\n      })\r\n  });\r\n};\r\n\r\nexport const getWargame = (gamePath) => {\r\n\r\n  let name = getNameFromPath(gamePath);\r\n\r\n  let game = wargameDbStore.find((wargame) => name === wargame.name);\r\n\r\n  console.log(game);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    game.db.get(dbDefaultSettings._id)\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      })\r\n  });\r\n};\r\n\r\nexport const postNewMessage = (dbName, details, message) => {\r\n\r\n  let db = wargameDbStore.find((db) => db.name === dbName).db;\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    db.put({\r\n      _id: new Date().toISOString(),\r\n      details,\r\n      message,\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  });\r\n};\r\n\r\nexport const getAllMessages = (dbName) => {\r\n\r\n  let db = wargameDbStore.find((db) => db.name === dbName).db;\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    db.allDocs({include_docs: true, descending: true})\r\n      .then((res) => {\r\n        resolve(res.rows.map((a) => a.doc));\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport var getAllWargames = function () {\r\n\r\n  let promises = wargameDbStore.map((game) => {\r\n    return game.db.get(dbDefaultSettings._id)\r\n      .then(function (res) {\r\n        return {\r\n          name: game.db.name,\r\n          title: res.wargameTitle\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  });\r\n  return Promise.all(promises);\r\n};\r\n\r\nvar updateLocalDoc = function(dbName, tabs, title) {\r\n\r\n  console.log(dbName);\r\n\r\n  var db = wargameDbStore.find((db) => db.name === dbName).db;\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    db.get(dbDefaultSettings._id)\r\n      .then((res) => {\r\n        db.put({\r\n          _id: dbDefaultSettings._id,\r\n          _rev: res._rev,\r\n          name: dbName,\r\n          wargameTitle: title,\r\n          tabs: tabs,\r\n        })\r\n          .then(() => {\r\n            resolve(db.get(dbDefaultSettings._id));\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          })\r\n      });\r\n  });\r\n};\r\n\r\nvar getNameFromPath = function (dbPath) {\r\n  let path = new URL(dbPath).pathname;\r\n  let index = path.lastIndexOf('/');\r\n  return path.substring(index + 1);\r\n};\r\n","import ActionConstant from '../ActionConstants.js';\r\n\r\nexport const showNotification = (payload) => ({\r\n  type: ActionConstant.SHOW_NOTIFICATION,\r\n  payload: {\r\n    open: true,\r\n    message: payload,\r\n  },\r\n});\r\n\r\nexport const hideNotification = () => ({\r\n  type: ActionConstant.HIDE_NOTIFICATION,\r\n  payload: {\r\n    open: false,\r\n    message: '',\r\n  },\r\n});\r\n","import ActionConstant from '../ActionConstants';\r\nimport 'whatwg-fetch';\r\nimport _ from \"lodash\";\r\n\r\nimport * as wargamesApi from \"../../api/wargames_api\";\r\nimport { showNotification } from \"../Notification/Notification_ActionCreators\";\r\n\r\nexport const setCurrentTab = (tab) => ({\r\n  type: ActionConstant.SET_CURRENT_GAME_SETUP_TAB,\r\n  payload: tab\r\n});\r\n\r\nexport const setGameData = (data) => ({\r\n  type: ActionConstant.SET_GAME_SETUP_DATA,\r\n  payload: data,\r\n});\r\n\r\nexport const setWargameTitle = (data) => ({\r\n  type: ActionConstant.SET_WARGAME_NAME,\r\n  payload: data,\r\n});\r\n\r\nexport const gameTitleInvalid = (data) => ({\r\n  type: ActionConstant.GAME_TITLE_INVALID,\r\n  payload: data,\r\n});\r\n\r\nexport const addNewForce = (data) => ({\r\n  type: ActionConstant.ADD_NEW_FORCE,\r\n  payload: data,\r\n});\r\n\r\nexport const setSelectedForce = (payload) => ({\r\n  type: ActionConstant.SET_SELECTED_FORCE,\r\n  payload\r\n});\r\n\r\n\r\nexport const addNewChannel = (data) => ({\r\n  type: ActionConstant.ADD_NEW_CHANNEL,\r\n  payload: data,\r\n});\r\n\r\n\r\nexport const setSelectedChannel = (payload) => ({\r\n  type: ActionConstant.SET_SELECTED_CHANNEL,\r\n  payload\r\n});\r\n\r\n\r\nexport const setForceOverview = (payload) => ({\r\n  type: ActionConstant.SET_FORCE_OVERVIEW,\r\n  payload,\r\n});\r\n\r\n\r\nconst saveAllWargameNames = (names) => ({\r\n  type: ActionConstant.ALL_WARGAME_NAMES_SAVED,\r\n  payload: names\r\n});\r\n\r\n\r\nconst setCurrentWargame = (data) => ({\r\n  type: ActionConstant.SET_CURRENT_WARGAME,\r\n  payload: data\r\n});\r\n\r\n\r\nexport const addRecipientToChannel = (data) => ({\r\n  type: ActionConstant.ADD_NEW_RECIPIENT,\r\n  payload: data,\r\n});\r\n\r\nexport const updateRecipient = (id, data) => ({\r\n  type: ActionConstant.UPDATE_RECIPIENT,\r\n  payload: { id,data }\r\n});\r\n\r\nexport const removeRecipient = (id) => ({\r\n  type: ActionConstant.REMOVE_RECIPIENT,\r\n  payload: id\r\n});\r\n\r\n\r\nexport const populateWargameStore = () => {\r\n  return async (dispatch) => {\r\n\r\n    var wargameNames = await wargamesApi.populateWargame(dispatch);\r\n\r\n    dispatch(saveAllWargameNames(wargameNames));\r\n  }\r\n};\r\n\r\n\r\nexport const createNewWargameDB = () => {\r\n\r\n  return async (dispatch) => {\r\n\r\n    var wargame = await wargamesApi.createWargame();\r\n\r\n    let wargames = await wargamesApi.getAllWargames();\r\n\r\n    dispatch(saveAllWargameNames(wargames));\r\n\r\n    dispatch(setCurrentWargame(_.omit(wargame, ['_id', '_rev'])));\r\n  }\r\n};\r\n\r\n\r\nexport const clearWargames = () => {\r\n\r\n  return async (dispatch) => {\r\n\r\n    await wargamesApi.clearWargames();\r\n\r\n    let wargames = await wargamesApi.getAllWargames();\r\n    dispatch(saveAllWargameNames(wargames));\r\n\r\n  }\r\n};\r\n\r\n\r\nexport const editWargame = (name) => {\r\n  return async (dispatch) => {\r\n\r\n    let wargame = await wargamesApi.editWargame(name);\r\n\r\n    console.log(wargame);\r\n\r\n    dispatch(setCurrentWargame(wargame));\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const updateWargame = (dbName, data, title) => {\r\n\r\n  return async (dispatch) => {\r\n\r\n    let localDoc = await wargamesApi.updateWargame(dbName, data, title);\r\n\r\n    let wargames = await wargamesApi.getAllWargames();\r\n\r\n    dispatch(saveAllWargameNames(wargames));\r\n\r\n    dispatch(setCurrentWargame(localDoc));\r\n\r\n    dispatch(showNotification(\"wargame saved.\"));\r\n\r\n  }\r\n};\r\n\r\n\r\nexport const duplicateWargame = (dbName) => {\r\n  return async (dispatch) => {\r\n\r\n    var games = await wargamesApi.duplicateWargame(dbName);\r\n\r\n    dispatch(saveAllWargameNames(games));\r\n  }\r\n};\r\n\r\n","import React, {Component} from 'react';\r\nimport ModalWrapper from './ModalWrapper';\r\nimport \"../../scss/App.scss\";\r\nimport { connect } from 'react-redux';\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport {addNewForce, setSelectedForce} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nclass AddForceModal extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      forceName: ''\r\n    };\r\n  }\r\n\r\n  hideModal = () => {\r\n\r\n    this.setState({\r\n      forceName: '',\r\n    });\r\n\r\n    this.props.dispatch(modalAction.close());\r\n  };\r\n\r\n\r\n  setNewForceName = (e) => {\r\n\r\n    this.setState({\r\n      forceName: e.target.value,\r\n      sameName: this.props.wargame.tabs[this.props.wargame.currentTab].data.forces[e.target.value]\r\n    });\r\n  };\r\n\r\n  addForce = () => {\r\n    this.props.dispatch(addNewForce(this.state.forceName));\r\n    this.props.dispatch(setSelectedForce(this.state.forceName));\r\n  };\r\n\r\n  render() {\r\n\r\n    if (!this.props.currentModal.open) return false;\r\n\r\n    var disable = this.state.forceName.length < 1 || this.state.sameName;\r\n\r\n    return (\r\n      <ModalWrapper>\r\n        <div className=\"display-text-wrapper\">\r\n          <h3>Create force</h3>\r\n          {this.state.sameName ? <p className=\"notification\">Already exists</p> : false}\r\n          <input autoFocus className=\"modal-input\" type=\"text\" onChange={this.setNewForceName} />\r\n          <div className=\"buttons\">\r\n            <button disabled={disable} name=\"add\" className=\"btn btn-action btn-action--primary\" onClick={this.addForce}>Add</button>\r\n            <button name=\"cancel\" className=\"btn btn-action btn-action--secondary\" onClick={this.hideModal}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </ModalWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame, currentModal }) => ({\r\n  wargame,\r\n  currentModal\r\n});\r\n\r\nexport default connect(mapStateToProps)(AddForceModal);\r\n","import uniqid from \"uniqid\";\r\n\r\nimport PouchDB from \"pouchdb\";\r\nimport {  databasePath,\r\n          MSG_STORE} from \"./consts\";\r\n\r\n\r\nvar db = new PouchDB(databasePath+MSG_STORE);\r\n\r\n\r\nexport const addMessage = (messageDetail, schema) => {\r\n  return new Promise((resolve, reject) => {\r\n    (async() => {\r\n\r\n      const allMessages = await getAllMessagesFromDb();\r\n      const matchedName = allMessages.find((el) => el.details.title === messageDetail.title && el._id !== messageDetail.id);\r\n\r\n      if (matchedName) {\r\n        reject(\"Message title already used\");\r\n        return;\r\n      }\r\n\r\n      let time = new Date().toISOString();\r\n\r\n      let message = {\r\n        _id: time,\r\n        lastUpdated: time,\r\n        details: messageDetail,\r\n        schema: schema,\r\n        completed: false\r\n      };\r\n\r\n      return db.put(message)\r\n        .then(function (result) {\r\n          resolve(result);\r\n        })\r\n        .catch(function (err) {\r\n          console.log(err);\r\n          reject(false);\r\n        })\r\n\r\n    })();\r\n  });\r\n};\r\n\r\nexport const duplicateMessageInDb = (id) => {\r\n\r\n  let time = new Date().toISOString();\r\n\r\n  return new Promise((resolve, reject) => {\r\n    db.get(id)\r\n      .then(function (doc) {\r\n\r\n        var updatedMessage = doc.details;\r\n\r\n        updatedMessage.title = `${updatedMessage.title} Copy-${uniqid.time()}`;\r\n\r\n        return db.put({\r\n          _id: time,\r\n          lastUpdated: time,\r\n          details: updatedMessage,\r\n          schema: doc.schema\r\n        });\r\n      })\r\n      .then(function () {\r\n        resolve(true);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        reject(false);\r\n      })\r\n  });\r\n};\r\n\r\nexport const getAllMessagesFromDb = () => {\r\n  return new Promise((resolve, reject) => {\r\n    return db.changes({\r\n      since: 0,\r\n      include_docs: true,\r\n      descending: true,\r\n    })\r\n      .then(function (changes) {\r\n\r\n        let results = changes.results.map((a) => a.doc);\r\n        results = results.filter((a) => !a.hasOwnProperty('_deleted') && a.hasOwnProperty('details'));\r\n\r\n        resolve(results);\r\n      })\r\n      .catch(function (err) {\r\n        // handle errors\r\n        reject(err);\r\n        console.log(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const updateMessageInDb = (id, message) => {\r\n  return new Promise((resolve, reject) => {\r\n    (async() => {\r\n\r\n      const allMessages = await getAllMessagesFromDb();\r\n      const matchedName = allMessages.find((el) => el.details.title === message.title && el._id !== id);\r\n\r\n      if (matchedName) {\r\n        reject(\"Message title already used\");\r\n        return;\r\n      }\r\n\r\n      db.get(id)\r\n        .then(function (doc) {\r\n          return db.put({\r\n            _id: id,\r\n            lastUpdated: new Date().toISOString(),\r\n            _rev: doc._rev,\r\n            details: message,\r\n            schema: doc.schema\r\n          });\r\n        })\r\n        .then(function (result) {\r\n          resolve(result);\r\n        })\r\n        .catch(function (err) {\r\n          console.log(err);\r\n          reject(false);\r\n        });\r\n\r\n    })();\r\n  });\r\n};\r\n\r\nexport const getMessage = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    db.get(id, {include_docs: true}, function(err, doc) {\r\n      if (err) reject('something went wrong');\r\n      resolve(doc);\r\n    });\r\n  });\r\n};\r\n\r\nexport const deleteMessageFromDb = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    db.get(id)\r\n      .then(function (doc) {\r\n        return db.remove(doc);\r\n      })\r\n      .then(function (result) {\r\n        resolve(result);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        reject(false);\r\n      })\r\n  });\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\n\r\nexport const setCurrentViewFromURI = (path) => ({\r\n  type: ActionConstant.SET_CURRENT_VIEW_FROM_URI,\r\n  payload: path\r\n});","import ActionConstant from '../ActionConstants';\r\nimport 'whatwg-fetch';\r\nimport check from 'check-types';\r\n\r\nimport * as messagesApi from \"../../api/messages_api\";\r\n\r\nimport { showNotification } from \"../Notification/Notification_ActionCreators\";\r\nimport {setCurrentViewFromURI} from \"../setCurrentViewFromURI/setCurrentViewURI_ActionCreators\";\r\n\r\nconst DBMessageSaveStatus = (status) => ({\r\n  type: ActionConstant.DB_MESSAGE_STATUS,\r\n  payload: status\r\n});\r\n\r\nconst DBSaveMessageArray = (messages) => ({\r\n  type: ActionConstant.DB_MESSAGE_SAVED,\r\n  payload: messages\r\n});\r\n\r\nconst DBSaveMessagePreview = (message) => ({\r\n  type: ActionConstant.DB_RETURNED_MESSAGE,\r\n  payload: message\r\n});\r\n\r\nconst loadingDBMessageCreate = (isLoading) => ({\r\n  type: ActionConstant.DB_MESSAGE_CREATION_LOADING,\r\n  isLoading\r\n});\r\n\r\nconst loadingDBMessageGet = (isLoading) => ({\r\n  type: ActionConstant.DB_MESSAGES_GET,\r\n  isLoading\r\n});\r\n\r\nexport const resetMessagePreview = () => ({\r\n  type: ActionConstant.RESET_MESSAGE_PREVIEW,\r\n});\r\n\r\n\r\nexport const createMessage = (message, schema) => {\r\n\r\n  if (!check.object(message)) throw Error(`createMessageType() requires object with message, from & to NOT. ${message}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    try {\r\n      var result = await messagesApi.addMessage(message, schema);\r\n\r\n      if (result.err) {\r\n        dispatch(showNotification(result.err));\r\n      }\r\n\r\n      if (result.ok) {\r\n        dispatch(DBMessageSaveStatus(result));\r\n        let messages = await messagesApi.getAllMessagesFromDb();\r\n        dispatch(DBSaveMessageArray(messages));\r\n        dispatch(loadingDBMessageCreate(false));\r\n        dispatch(setCurrentViewFromURI(\"/client/umpireMenu/library\"));\r\n      }\r\n    } catch(e) {\r\n      dispatch(loadingDBMessageCreate(false));\r\n      alert(e);\r\n    }\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const duplicateMessage = (messageId) => {\r\n\r\n  if (!check.string(messageId)) throw Error(`duplicateMessage() requires a string Not. ${messageId}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    var result = await messagesApi.duplicateMessageInDb(messageId);\r\n\r\n    if (result) {\r\n      dispatch(DBMessageSaveStatus(result));\r\n      let messages = await messagesApi.getAllMessagesFromDb();\r\n      dispatch(DBSaveMessageArray(messages));\r\n    }\r\n    dispatch(loadingDBMessageCreate(false));\r\n  }\r\n};\r\n\r\n\r\nexport const updateMessage = (message, id) => {\r\n\r\n  if (!check.object(message)) throw Error(`updateMessage() requires object with message, from & to NOT. ${message}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    try {\r\n      const result = await messagesApi.updateMessageInDb(id, message);\r\n\r\n      if (result.err) {\r\n        dispatch(showNotification(result.err));\r\n      }\r\n\r\n      if (result.ok) {\r\n        dispatch(DBMessageSaveStatus(result));\r\n\r\n        let responses = await Promise.all([messagesApi.getAllMessagesFromDb(), messagesApi.getMessage(result.id)]);\r\n        let [messages, message] = [...responses];\r\n\r\n        dispatch(DBSaveMessagePreview(message));\r\n        dispatch(DBSaveMessageArray(messages));\r\n        dispatch(loadingDBMessageCreate(false));\r\n        dispatch(setCurrentViewFromURI(\"/client/umpireMenu/library\"));\r\n\r\n      }\r\n    } catch (e) {\r\n      // CREATE ERROR WARNING MESSAGE\r\n      dispatch(loadingDBMessageCreate(false));\r\n      alert(e);\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport const deleteMessage = (messageId) => {\r\n\r\n  if (!check.string(messageId)) throw Error(`duplicateMessage() requires a string Not. ${messageId}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    var result = await messagesApi.deleteMessageFromDb(messageId);\r\n\r\n    if (result) {\r\n      let messages = await messagesApi.getAllMessagesFromDb();\r\n      dispatch(DBSaveMessageArray(messages));\r\n      dispatch(resetMessagePreview());\r\n    } else {\r\n      // error action\r\n    }\r\n\r\n    dispatch(loadingDBMessageCreate(false));\r\n  }\r\n};\r\n\r\n\r\nexport const getSingleMessage = (id) => {\r\n\r\n  if (!check.string(id)) throw Error(`duplicateMessage() requires a string id..`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageGet(true));\r\n\r\n    let result = await messagesApi.getMessage(id);\r\n\r\n    dispatch(DBSaveMessagePreview(result));\r\n    dispatch(loadingDBMessageGet(false));\r\n  }\r\n};\r\n\r\nexport const getAllMessages = () => {\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageGet(true));\r\n\r\n    let result = await messagesApi.getAllMessagesFromDb();\r\n\r\n    dispatch(DBSaveMessageArray(result));\r\n    dispatch(loadingDBMessageGet(false));\r\n  }\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\nimport 'whatwg-fetch';\r\nimport check from 'check-types';\r\n\r\nimport * as messageTypesApi from \"../../api/messageTypes_api\";\r\n\r\nimport {setCurrentViewFromURI} from \"../setCurrentViewFromURI/setCurrentViewURI_ActionCreators\";\r\nimport {showNotification} from \"../Notification/Notification_ActionCreators\";\r\n\r\nconst DBMessageSaveStatus = (status) => ({\r\n  type: ActionConstant.DB_MESSAGE_STATUS,\r\n  payload: status\r\n});\r\n\r\nconst DBSaveMessageArray = (messages) => ({\r\n  type: ActionConstant.DB_MESSAGE_TYPES_SAVED,\r\n  payload: messages\r\n});\r\n\r\nconst loadingDBMessageCreate = (isLoading) => ({\r\n  type: ActionConstant.DB_MESSAGE_CREATION_LOADING,\r\n  isLoading\r\n});\r\n\r\nconst loadingDBMessageGet = (isLoading) => ({\r\n  type: ActionConstant.DB_MESSAGE_TYPES_GET,\r\n  isLoading\r\n});\r\n\r\n\r\nexport const createMessageType = (schema) => {\r\n\r\n  if (!check.object(schema)) throw Error(`createMessageType() requires schema object & NOT. ${schema}`);\r\n\r\n  return async (dispatch) => {\r\n\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    try {\r\n\r\n      var result = await messageTypesApi.postNewMessage(schema);\r\n\r\n      if (result.err) {\r\n        dispatch(showNotification(result.err));\r\n        dispatch(loadingDBMessageCreate(false));\r\n      }\r\n\r\n      if (result.ok) {\r\n        dispatch(DBMessageSaveStatus(result));\r\n        let messages = await messageTypesApi.getAllMessagesFromDb();\r\n        dispatch(DBSaveMessageArray(messages));\r\n\r\n        dispatch(loadingDBMessageCreate(false));\r\n        dispatch(setCurrentViewFromURI(\"/client/umpireMenu/templates\"));\r\n      }\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport const duplicateMessageType = (id) => {\r\n\r\n  if (!check.string(id)) throw Error(`duplicateTemplate() requires a string Not. ${id}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    var result = await messageTypesApi.duplicateMessageInDb(id);\r\n\r\n    if (result) {\r\n      dispatch(DBMessageSaveStatus(true));\r\n      let messages = await messageTypesApi.getAllMessagesFromDb();\r\n      dispatch(DBSaveMessageArray(messages));\r\n    }\r\n    dispatch(loadingDBMessageCreate(false));\r\n  }\r\n};\r\n\r\nexport const updateMessageType = (schema, id) => {\r\n\r\n  if (!check.object(schema)) throw Error(`updateMessageType() requires schema & not ${schema}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    try {\r\n      const result = await messageTypesApi.updateMessageInDb(schema, id);\r\n\r\n      if (result.err) {\r\n        dispatch(showNotification(result.err));\r\n        dispatch(loadingDBMessageCreate(false));\r\n      }\r\n\r\n      if (result.ok) {\r\n        dispatch(DBMessageSaveStatus(result.ok));\r\n\r\n        let allMessages = await messageTypesApi.getAllMessagesFromDb();\r\n\r\n        dispatch(DBSaveMessageArray(allMessages));\r\n        dispatch(loadingDBMessageCreate(false));\r\n        dispatch(setCurrentViewFromURI(\"/client/umpireMenu/templates\"));\r\n\r\n      }\r\n    } catch (e) {\r\n      // CREATE ERROR WARNING MESSAGE\r\n      dispatch(loadingDBMessageCreate(false));\r\n      alert(e);\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport const deleteMessageType = (messageId) => {\r\n\r\n  if (!check.string(messageId)) throw Error(`deleteMessage() requires a string of id not. ${messageId}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    var result = await messageTypesApi.deleteMessageFromDb(messageId);\r\n\r\n    if (result) {\r\n      let messages = await messageTypesApi.getAllMessagesFromDb();\r\n      dispatch(DBSaveMessageArray(messages));\r\n    } else {\r\n      // error action\r\n    }\r\n\r\n    dispatch(loadingDBMessageCreate(false));\r\n  }\r\n};\r\n\r\n\r\nexport const getAllMessageTypes = () => {\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageGet(true));\r\n\r\n    let result = await messageTypesApi.getAllMessagesFromDb();\r\n\r\n    dispatch(DBSaveMessageArray(result));\r\n    dispatch(loadingDBMessageGet(false));\r\n  }\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\n\r\nexport const setSelectedSchema = (schemaId) => ({\r\n  type: ActionConstant.SET_SELECTED_SCHEMA,\r\n  payload: schemaId\r\n});\r\n\r\n\r\nexport const setPreviewSchema = (schema) => ({\r\n  type: ActionConstant.SET_PREVIEW_SCHEMA,\r\n  payload: schema\r\n});","import React, {Component} from 'react';\r\nimport ModalWrapper from './ModalWrapper';\r\nimport \"../../scss/App.scss\";\r\nimport { connect } from 'react-redux';\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport { deleteMessage } from \"../../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\nimport { deleteMessageType } from \"../../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\nimport {setPreviewSchema, setSelectedSchema} from \"../../ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators\";\r\n\r\nclass DeleteModal extends Component {\r\n\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  hideModal = () => {\r\n    this.props.dispatch(modalAction.close());\r\n  };\r\n\r\n  deleteMessage = () => {\r\n    if (this.props.currentViewURI === \"/client/umpireMenu/templates\") {\r\n      this.props.dispatch(deleteMessageType(this.props.umpireMenu.selectedSchemaID));\r\n      this.props.dispatch(setPreviewSchema(\"\"));\r\n      this.props.dispatch(setSelectedSchema(\"\"));\r\n    } else {\r\n      this.props.dispatch(deleteMessage(this.props.messages.messagePreviewId));\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    if (!this.props.currentModal.open) return false; // needed ?\r\n\r\n    return (\r\n      <ModalWrapper>\r\n        <div className=\"display-text-wrapper\">\r\n          <h3>Delete</h3>\r\n          <p>This will permanently remove the message.<br/>Are you sure?</p>\r\n          <div className=\"buttons\">\r\n            <button name=\"delete\" className=\"btn btn-action btn-action--primary\" onClick={this.deleteMessage}>Delete</button>\r\n            <button name=\"cancel\" className=\"btn btn-action btn-action--secondary\" onClick={this.hideModal}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </ModalWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ currentModal, messages, umpireMenu, currentViewURI }) => ({\r\n  currentModal,\r\n  messages,\r\n  umpireMenu,\r\n  currentViewURI\r\n});\r\n\r\nexport default connect(mapStateToProps)(DeleteModal);\r\n","import React, {Component} from 'react';\r\nimport ModalWrapper from './ModalWrapper';\r\nimport \"../../scss/App.scss\";\r\nimport { connect } from 'react-redux';\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport {\r\n  addNewChannel,\r\n  setSelectedChannel\r\n} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nclass AddChannelModal extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      channelName: ''\r\n    };\r\n  }\r\n\r\n  hideModal = () => {\r\n\r\n    this.setState({\r\n      channelName: '',\r\n    });\r\n\r\n    this.props.dispatch(modalAction.close());\r\n  };\r\n\r\n\r\n  setChannelName = (e) => {\r\n\r\n    this.setState({\r\n      channelName: e.target.value,\r\n      sameName: this.props.wargame.tabs[this.props.wargame.currentTab].data.channels[e.target.value]\r\n    });\r\n  };\r\n\r\n  addChannel = () => {\r\n    this.props.dispatch(addNewChannel(this.state.channelName));\r\n    this.props.dispatch(setSelectedChannel(this.state.channelName));\r\n  };\r\n\r\n  render() {\r\n\r\n    if (!this.props.currentModal.open) return false;\r\n\r\n    var disable = this.state.channelName.length < 1 || this.state.sameName;\r\n\r\n    return (\r\n      <ModalWrapper>\r\n        <div className=\"display-text-wrapper\">\r\n          <h3>Create channel</h3>\r\n          {this.state.sameName ? <p className=\"notification\">Already exists</p> : false}\r\n          <input autoFocus className=\"modal-input\" type=\"text\" onChange={this.setChannelName} />\r\n          <div className=\"buttons\">\r\n            <button disabled={disable} name=\"add\" className=\"btn btn-action btn-action--primary\" onClick={this.addChannel}>Add</button>\r\n            <button name=\"cancel\" className=\"btn btn-action btn-action--secondary\" onClick={this.hideModal}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </ModalWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame, currentModal }) => ({\r\n  wargame,\r\n  currentModal\r\n});\r\n\r\nexport default connect(mapStateToProps)(AddChannelModal);\r\n","import React, {Component} from 'react';\r\nimport \"../../scss/App.scss\";\r\nimport { connect } from 'react-redux';\r\nimport AddForceModal from \"./AddForceModal\";\r\nimport DeleteModal from './DeleteModal';\r\nimport AddChannelModal from \"./AddChannelModal\";\r\n\r\nclass ModalSwitch extends Component {\r\n\r\n  render() {\r\n\r\n    var modal;\r\n\r\n    switch (this.props.currentModal.modal) {\r\n\r\n      case \"addForce\":\r\n        modal = <AddForceModal />;\r\n        break;\r\n\r\n      case \"delete\":\r\n        modal = <DeleteModal />;\r\n        break;\r\n\r\n      case \"addChannel\":\r\n        modal = <AddChannelModal />;\r\n        break;\r\n\r\n      default:\r\n        modal = false;\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {modal}\r\n      </>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = ({ currentModal }) => ({\r\n  currentModal,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ModalSwitch);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\n\r\nimport { hideNotification } from \"../ActionsAndReducers/Notification/Notification_ActionCreators\";\r\n\r\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nclass Notification extends Component {\r\n\r\n  onClickHandler = (e) => {\r\n\r\n    this.props.dispatch(hideNotification());\r\n\r\n  };\r\n\r\n  render() {\r\n\r\n\r\n    if (!this.props.notification.open) return false;\r\n\r\n    return (\r\n        <div id=\"notification\">\r\n          {this.props.notification.message}<FontAwesomeIcon icon={faTimes} onClick={this.onClickHandler} />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ notification }) => ({\r\n  notification,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Notification);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport { setCurrentViewFromURI } from \"../ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_ActionCreators\"\r\n\r\nimport '../scss/App.scss';\r\n\r\nclass Link extends Component {\r\n\r\n  onClickHandler = (e) => {\r\n\r\n    if (this.props.onClickHandler) this.props.onClickHandler();\r\n\r\n    const aNewTab = e.metaKey || e.ctrlKey;\r\n    const anExternalLink = this.props.href.startsWith('http');\r\n\r\n    if (!aNewTab && !anExternalLink) {\r\n      e.preventDefault();\r\n      this.props.dispatch(setCurrentViewFromURI(this.props.href));\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <span href={this.props.href}\r\n            onClick={!this.props.disabled ? this.onClickHandler : () => false}\r\n            id={this.props.id ? this.props.id : null}\r\n            className={this.props.class ? this.props.class : null}>\r\n\r\n        {this.props.children}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default connect()(Link);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Link from \"../Components/Link\";\r\nimport classNames from \"classnames\";\r\n\r\nimport '../scss/App.scss';\r\nimport {populateWargameStore} from \"../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nclass UmpireMenu extends Component {\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(populateWargameStore());\r\n  }\r\n\r\n  render() {\r\n\r\n    let activeGames = this.props.wargame.wargameList.length > 0;\r\n\r\n    return (\r\n      <div id=\"umpire\" className=\"flex-content-wrapper\">\r\n        <div className=\"flex-content flex-content--fill\">\r\n          <Link href=\"/client/umpireMenu\" class=\"link link--secondary link--large\">Umpire Menu</Link>\r\n          <Link href=\"/client/playerUi\" disabled={!activeGames} class={classNames(\"link\", \"link--secondary\", \"link--large\", {\"link--disabled\": !activeGames})}>Player UI</Link>\r\n          { !activeGames ? <p>At least one wargame needed to access player ui</p> : false }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({wargame}) => ({\r\n  wargame,\r\n});\r\n\r\nexport default connect(mapStateToProps)(UmpireMenu);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\nimport _ from \"lodash\";\r\n\r\nimport {\r\n  editWargame,\r\n  duplicateWargame,\r\n} from \"../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nimport {setCurrentViewFromURI} from \"../ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_ActionCreators\";\r\n\r\nimport {faClone, faPencilAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nclass WargameSearchList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageList: this.props.listData,\r\n      searchQuery: this.props.listData,\r\n      searchInput: \"\",\r\n    };\r\n  }\r\n\r\n\r\n  componentWillUpdate(nextProps, nextState, nextContext) {\r\n\r\n    let sameMessagesQuantity = _.difference(nextProps.listData, this.state.messageList).length;\r\n\r\n    if (\r\n      nextProps.listData.length !== this.state.messageList.length ||\r\n      (sameMessagesQuantity !== 0 && this.state.searchInput.length === 0)\r\n    ) {\r\n      this.setState({\r\n        messageList: nextProps.listData\r\n      });\r\n    }\r\n\r\n    if (\r\n      this.state.searchInput.length > 0 &&\r\n      sameMessagesQuantity !== 0\r\n    ) {\r\n      this.filterMessages();\r\n    }\r\n  }\r\n\r\n  setSelectedWargame(name) {\r\n    this.props.dispatch(editWargame(name));\r\n    this.props.dispatch(setCurrentViewFromURI('/client/gameSetup'));\r\n  }\r\n\r\n  duplicateWargame(name) {\r\n    this.props.dispatch(duplicateWargame(name));\r\n  }\r\n\r\n  filterMessages = (input) => {\r\n\r\n    let value = input ? input.target.value : this.state.searchInput;\r\n\r\n    let searchQuery = this.props.listData.filter(function(db) {\r\n      return db.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n    });\r\n\r\n    this.setState({\r\n      searchQuery,\r\n      searchInput: input ? value : this.state.searchInput\r\n    });\r\n  };\r\n\r\n  displayControls = (activeTitle) => {\r\n    this.setState({\r\n      activeTitle,\r\n    });\r\n  };\r\n\r\n  hideControls = () => {\r\n    this.setState({\r\n      activeTitle: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    var that = this;\r\n\r\n    var list = this.state.searchInput ? this.state.searchQuery : this.state.messageList;\r\n\r\n    return (\r\n      <div className=\"searchlist\">\r\n        <input type=\"text\" className=\"searchlist-input\" key=\"search-templates\" placeholder=\"Search games\" onChange={ this.filterMessages } value={this.state.searchInput} />\r\n        <div className=\"searchlist-list\">\r\n          { list.map(function(db) {\r\n            // let active\r\n            return (\r\n              <span className=\"searchlist-title\" key={db.title} onMouseOver={that.displayControls.bind(that, db.title)} onMouseLeave={that.hideControls}>\r\n                {db.title}\r\n                {that.state.activeTitle === db.title ?\r\n                  <>\r\n                    <FontAwesomeIcon icon={faPencilAlt} onClick={that.setSelectedWargame.bind(that, db.name)} />\r\n                    <FontAwesomeIcon icon={faClone} onClick={that.duplicateWargame.bind(that, db.name)} />\r\n                  </>\r\n                  : null\r\n                }\r\n              </span>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// empty mapStateToProps is here for react-redux to wire up the dispatch function to props so firing actions is possible.\r\nconst mapStateToProps = () => ({});\r\n\r\n\r\nexport default connect(mapStateToProps)(WargameSearchList);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Link from \"../Components/Link\";\r\n\r\nimport '../scss/App.scss';\r\n// import SearchList from \"../Components/SearchList\";\r\n\r\nimport {\r\n  createNewWargameDB,\r\n  clearWargames,\r\n} from \"../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nimport WargameSearchList from \"../Components/WargameSearchList\";\r\n\r\nclass GameDesignerInterface extends Component {\r\n\r\n  createWargame = () => {\r\n    this.props.dispatch(createNewWargameDB());\r\n  };\r\n\r\n  clearWargames = () => {\r\n    this.props.dispatch(clearWargames());\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"umpire\" className=\"flex-content-wrapper\">\r\n        <div className=\"flex-content flex-content--big\">\r\n          <Link href=\"/client/umpireMenu/templates\" class=\"link link--secondary link--large\">Message Templates</Link>\r\n          <Link href=\"/client/umpireMenu/library\" class=\"link link--secondary link--large\">Message Library</Link>\r\n        </div>\r\n        <div className=\"flex-content flex-content--big\">\r\n          <span>Games</span>\r\n          <Link\r\n            href=\"/client/gameSetup\"\r\n            class=\"link link--noIcon\"\r\n            onClickHandler={this.createWargame}\r\n          >Create</Link>\r\n          <Link\r\n            href=\"/client/umpireMenu\"\r\n            class=\"link link--noIcon link--secondary\"\r\n            onClickHandler={this.clearWargames}\r\n          >Clear wargames</Link>\r\n          <WargameSearchList key=\"searchlist\"\r\n                             listData={this.props.wargame.wargameList}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// empty mapStateToProps is here for react-redux to wire up the dispatch function to props so firing actions is possible.\r\nconst mapStateToProps = ({wargame}) => ({\r\n  wargame\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(GameDesignerInterface);\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createMessage,\r\n} from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport JSONEditor from '@json-editor/json-editor';\r\n// necessary import for date\r\nimport flatpickr from \"flatpickr\";\r\n\r\nimport '../scss/App.scss';\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSave} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nclass JsonCreator extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.editor = null;\r\n    this.editorPreviewRef = React.createRef();\r\n\r\n    this.state = {\r\n      selectedSchema: ''\r\n    };\r\n  }\r\n\r\n\r\n  componentWillUpdate(nextProps, nextState, nextContext) {\r\n\r\n    if (this.editor && nextProps.umpireMenu.selectedSchemaID !== this.props.umpireMenu.selectedSchemaID) {\r\n      this.editor.destroy();\r\n      this.editor = null;\r\n    }\r\n\r\n    if (\r\n      nextProps.umpireMenu.selectedSchemaID.length > 0 &&\r\n      nextProps.messageTypes &&\r\n      nextProps.messageTypes.messages.length > 0\r\n    ) {\r\n\r\n      if (this.editor) return;\r\n\r\n      this.editor = new JSONEditor(this.editorPreviewRef.current, {\r\n        schema: nextProps.messageTypes.messages.find((mes) => mes._id === nextProps.umpireMenu.selectedSchemaID).details,\r\n        theme: 'bootstrap4'\r\n      });\r\n    }\r\n\r\n    if (\r\n      nextProps.messages.messagePreviewId.length > 0 &&\r\n      nextProps.messageTypes.messages.length > 0 &&\r\n      !nextProps.disabled\r\n    ) {\r\n\r\n      const data = nextProps.messages.messages.find(function(mes) {\r\n        return mes._id.toLowerCase().indexOf(nextProps.messages.messagePreviewId.toLowerCase()) > -1;\r\n      });\r\n      this.editor.setValue(data.details);\r\n    }\r\n\r\n    if (this.props.disabled && this.editor) {\r\n      this.editor.disable();\r\n    }\r\n  }\r\n\r\n\r\n  saveMessage = () => {\r\n    let schema = this.props.messageTypes.messages.find((mes) => mes._id === this.props.umpireMenu.selectedSchemaID).details;\r\n\r\n    this.props.dispatch(createMessage(this.editor.getValue(), {...schema, _id: this.props.umpireMenu.selectedSchemaID}));\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"button-wrap\">\r\n          {!this.props.disabled ? <span onClick={this.saveMessage} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span> : null }\r\n        </div>\r\n          <div id=\"preview-editor\" ref={this.editorPreviewRef}></div>\r\n        <div className=\"button-wrap\">\r\n          {!this.props.disabled ? <span onClick={this.saveMessage} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span> : null }\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, selectedSchema, umpireMenu }) => ({\r\n  messages,\r\n  messageTypes,\r\n  selectedSchema,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(JsonCreator);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\nimport check from \"check-types\";\r\nimport moment from \"moment\";\r\n\r\nclass MessagePreview extends Component {\r\n\r\n  createObjItem(pair) {\r\n    const that = this;\r\n    return (\r\n      <>\r\n        {/*<h3>{pair[0]}</h3>*/}\r\n        <span key={`objItem--${pair[0]}-${pair[1]}`} className=\"group-section\">{ that.deconstructObj(pair[1]) }</span>\r\n      </>\r\n    )\r\n  }\r\n\r\n  createBoolItem(pair) {\r\n    return <span key={`boolItem--${pair[0]}-${pair[1]}`}>{pair[1] ? pair[0] : false}</span>\r\n  }\r\n\r\n  createTimeItem(pair) {\r\n\r\n    return (\r\n      <>\r\n        <h3>{pair[0]}</h3>\r\n        <span key={`dateTime-${pair[1]}`}>{moment(pair[1]).format('Do MMMM YYYY, HH:mm')}</span>\r\n      </>\r\n    )\r\n  }\r\n\r\n  createStrItem(pair, withoutName) {\r\n    return <span key={`strItem-${pair[0]}-${pair[1]}`}><b>{pair[0]}: </b>{pair[1]}</span>\r\n  }\r\n\r\n  deconstructArr(pair) {\r\n    const that = this;\r\n    return (\r\n      <>\r\n        <h3>{pair[0]}</h3>\r\n        {pair[1].map((item) => {\r\n          // CHECK NAME PROP ON EVERY OBJ\r\n          return (\r\n              <span key={`section-${item.name}`}>{ that.deconstructObj(item) }</span>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\n  deconstructObj(obj) {\r\n\r\n    const that = this;\r\n    const keyPropPairs = Object.entries(obj);\r\n\r\n    return keyPropPairs.map((pair, i) => {\r\n\r\n      if (check.object(pair[1])) return that.createObjItem(pair);\r\n      if (check.array.of.object(pair[1])) return that.deconstructArr(pair);\r\n      if (check.boolean(pair[1])) return that.createBoolItem(pair);\r\n\r\n      if (moment(pair[1], moment.ISO_8601, true).isValid()) return that.createTimeItem(pair);\r\n\r\n      return that.createStrItem(pair);\r\n\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    if (!this.props.detail) return false;\r\n\r\n    const that = this;\r\n    const keyPropPairs = Object.entries(this.props.detail);\r\n\r\n\r\n    return keyPropPairs.map((pair, i) => {\r\n\r\n      if (i===0) return (\r\n        <>\r\n          <h2 key={`title-${pair[1]}`}>{pair[1]}</h2>\r\n          { this.props.from ? <span key={'from'}>From: {this.props.from}</span> : false }\r\n        </>\r\n      );\r\n\r\n      if (check.object(pair[1])) return that.createObjItem(pair);\r\n      if (check.array.of.object(pair[1])) return that.deconstructArr(pair);\r\n      if (check.boolean(pair[1])) return that.createBoolItem(pair);\r\n      if (moment(pair[1], moment.ISO_8601, true).isValid()) return that.createTimeItem(pair);\r\n\r\n      return (\r\n        <>\r\n          <h3>{pair[0]}</h3>\r\n          <span key={`${pair[0]}-${pair[1]}`}>{pair[1]}</span>\r\n        </>\r\n      )\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport default connect()(MessagePreview);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\n\r\nimport moment from \"moment\";\r\nimport classNames from \"classnames\";\r\nimport {PropTypes} from \"prop-types\";\r\n\r\nclass SearchList extends Component {\r\n\r\n  setSelected = (item) => {\r\n    this.props.setSelected(item);\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    var that = this;\r\n\r\n    return (\r\n      <div className=\"searchlist\">\r\n        <input type=\"text\" className=\"searchlist-input\" key=\"search-templates\" placeholder={this.props.placeholder} onChange={ this.props.filter } value={this.props.searchQuery} />\r\n        <div className=\"searchlist-list\">\r\n          { this.props.listData.map(function(item) {\r\n\r\n            // onClick handlers should not contain instantiating () to pass a specific value, .bind can be used here this is a simpler\r\n            // ES5 way to pass properties to click handlers from arrays, another option is to build a sub-component but I don't like\r\n            // how the data moves back and forth, it breaks Reacts initial idea of 1 way data flow.\r\n\r\n            let active = item._id === that.props.selected ? 'active' : null;\r\n\r\n            let title = item.details.title;\r\n            let date = moment(item.lastUpdated).format('DD/MM/YY');\r\n            return <span className={classNames({\"searchlist-title\": true, active})} href=\"#\" onClick={that.setSelected.bind(that, item)} key={item._id}>{title} - {date}</span>\r\n          })\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// empty mapStateToProps is here for react-redux to wire up the dispatch function to props so firing actions is possible.\r\nconst mapStateToProps = ({ currentViewURI, umpireMenu }) => ({\r\n  currentViewURI,\r\n  umpireMenu\r\n});\r\n\r\nSearchList.propTypes = {\r\n  listData: PropTypes.array.isRequired,\r\n  filter: PropTypes.func.isRequired,\r\n  selected: PropTypes.string.isRequired,\r\n  setSelected: PropTypes.func.isRequired,\r\n  searchQuery: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nexport default connect(mapStateToProps)(SearchList);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Link from \"../Components/Link\";\r\n\r\nimport {\r\n  getAllMessageTypes,\r\n  duplicateMessageType,\r\n} from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n\r\nimport {\r\n  getAllMessages,\r\n  duplicateMessage, getSingleMessage\r\n} from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport { modalAction } from \"../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\n\r\n\r\nimport JsonCreator from \"../Components/JsonCreator\";\r\nimport MessagePreview from \"../Components/MessagePreview\";\r\nimport '../scss/App.scss';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPencilAlt, faClone, faTrash, faArrowLeft,faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport SearchList from \"../Components/SearchList\";\r\nimport {setSelectedSchema} from \"../ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators\";\r\n\r\nclass UmpireMenu extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let creatorType = this.props.currentViewURI.split('/')[3];\r\n\r\n    this.state = {\r\n      searchQuery: '',\r\n      creatorType: creatorType,\r\n      messageList: creatorType === 'templates' ? this.props.messageTypes.messages : this.props.messages.messages,\r\n    };\r\n\r\n    this.buildMessageBoard();\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(setSelectedSchema(\"\"));\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.state.searchQuery.length === 0) {\r\n      // only on page load\r\n      this.setState({\r\n        messageList: this.state.creatorType === 'templates' ? nextProps.messageTypes.messages : nextProps.messages.messages,\r\n      });\r\n    }\r\n\r\n    if (nextProps.messages.messages.length !== this.props.messages.messages.length) setTimeout(this.filterMessages, 1); // setTimeout to wait one tick to allow messageList to update\r\n  }\r\n\r\n\r\n  buildMessageBoard() {\r\n\r\n    switch (this.state.creatorType) {\r\n\r\n      case 'templates':\r\n        // get template data action\r\n        this.props.dispatch(getAllMessageTypes());\r\n        break;\r\n\r\n      case 'library':\r\n        // get library data action\r\n        this.props.dispatch(getAllMessages());\r\n        break;\r\n\r\n      default:\r\n        // throw developer an error\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  setSelectedSchemaId = (item) => {\r\n\r\n    switch (this.state.creatorType) {\r\n      case 'templates':\r\n        this.props.dispatch(setSelectedSchema(item._id));\r\n        break;\r\n\r\n      case 'library':\r\n        this.props.dispatch(setSelectedSchema(item.schema._id));\r\n        this.props.dispatch(getSingleMessage(item._id));\r\n        break;\r\n\r\n      default:\r\n        console.log('error');\r\n        break;\r\n    }\r\n  };\r\n\r\n\r\n  // event listener functions from the DOM will lose scope of this to the React Class unless stated as an arrow function\r\n  // or this is bound to them within the constructor like.. this.filterMessages = this.filterMessages.bind(this);\r\n  // arrow functions are es6 syntax and preferable if babel compiler can compile them. - They have the scope of where they're\r\n  // defined unlike a normal function that has it's own scope.\r\n  filterMessages = (input) => {\r\n\r\n    let value = input ? input.target.value : this.state.searchQuery;\r\n\r\n    let newState;\r\n\r\n    switch (this.state.creatorType) {\r\n      case 'templates':\r\n        newState = this.props.messageTypes.messages.filter(function(mes) {\r\n          return mes.details.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n        });\r\n        break;\r\n\r\n      case 'library':\r\n        newState = this.props.messages.messages.filter(function(mes) {\r\n          return mes.details.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n        });\r\n        break;\r\n\r\n      default:\r\n        newState = [];\r\n        break;\r\n    }\r\n\r\n    this.setState({\r\n      messageList: newState,\r\n      searchQuery: value\r\n    });\r\n  };\r\n\r\n\r\n  createSearchListSection() {\r\n\r\n    switch (this.state.creatorType) {\r\n\r\n      case 'templates':\r\n\r\n        return [\r\n            <Link href=\"/client/messageCreator/create/template\" key=\"templates\" class=\"link\"><FontAwesomeIcon icon={faPlus} />Create new template</Link>,\r\n            <SearchList key=\"searchlist\"\r\n                        listData={this.state.messageList}\r\n                        searchQuery={this.state.searchQuery}\r\n                        filter={this.filterMessages}\r\n                        selected={this.props.umpireMenu.selectedSchemaID}\r\n                        setSelected={this.setSelectedSchemaId}\r\n                        placeholder={'Select template'}\r\n            />\r\n        ];\r\n\r\n      case 'library':\r\n\r\n        return [\r\n            <Link href=\"/client/messageCreator/create/message\" key=\"messages\" class=\"link\"><FontAwesomeIcon icon={faPlus} />Create new Message</Link>,\r\n            <SearchList key=\"searchlist\"\r\n                        listData={this.state.messageList}\r\n                        searchQuery={this.state.searchQuery}\r\n                        filter={this.filterMessages}\r\n                        selected={this.props.messages.messagePreviewId}\r\n                        setSelected={this.setSelectedSchemaId}\r\n                        placeholder={'Select template'}\r\n            />\r\n        ];\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  createMessagesActions() {\r\n    return this.props.messages.messagePreviewId.length > 0 ?\r\n      <>\r\n        <Link class=\"link link--secondary\" href={this.state.creatorType === 'templates' ? \"/messageCreator/edit/template\" : \"/messageCreator/edit/message\"}><FontAwesomeIcon icon={faPencilAlt} />Edit</Link>\r\n        <span className=\"link link--secondary\" onClick={this.duplicateMessage}><FontAwesomeIcon icon={faClone} />Duplicate</span>\r\n        <span className=\"link link--secondary\" onClick={this.deleteMessage}><FontAwesomeIcon icon={faTrash} />Delete</span>\r\n      </>\r\n      :\r\n      null;\r\n  }\r\n\r\n\r\n  createTemplatesActions() {\r\n    return this.props.umpireMenu.selectedSchemaID.length > 0 ?\r\n      <>\r\n        <Link class=\"link link--secondary\" href={this.state.creatorType === 'templates' ? \"/messageCreator/edit/template\" : \"/messageCreator/edit/message\"}><FontAwesomeIcon icon={faPencilAlt} />Edit</Link>\r\n        <span className=\"link link--secondary\" onClick={this.duplicateTemplate}><FontAwesomeIcon icon={faClone} />Duplicate</span>\r\n        <span className=\"link link--secondary\" onClick={this.deleteTemplate}><FontAwesomeIcon icon={faTrash} />Delete</span>\r\n      </>\r\n      :\r\n      null;\r\n  };\r\n\r\n\r\n  duplicateTemplate = () => {\r\n    this.props.dispatch(duplicateMessageType(this.props.umpireMenu.selectedSchemaID))\r\n  };\r\n\r\n\r\n  deleteTemplate = () => {\r\n    this.props.dispatch(modalAction.open(\"delete\"));\r\n  };\r\n\r\n\r\n  duplicateMessage = () => {\r\n    this.props.dispatch(duplicateMessage(this.props.messages.messagePreviewId));\r\n  };\r\n\r\n\r\n  deleteMessage = () => {\r\n    this.props.dispatch(modalAction.open(\"delete\"));\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message {this.state.creatorType}</h1>\r\n        <div className=\"flex-content-wrapper\">\r\n          <div id=\"selection\" className=\"flex-content\">\r\n            { this.createSearchListSection() }\r\n          </div>\r\n          <div id=\"preview\" className=\"flex-content flex-content--big\">\r\n            <p className=\"heading--sml\">Preview</p>\r\n            { this.state.creatorType === 'templates' ?\r\n              <JsonCreator id=\"preview\"\r\n                           disabled={true}\r\n                           previewForm={true}\r\n              />\r\n            :\r\n              <div className=\"message-preview\">\r\n                <MessagePreview detail={this.props.messages.messagePreview.details} />\r\n              </div>\r\n            }\r\n          </div>\r\n          <div id=\"function\" className=\"flex-content flex-content--sml\">\r\n            <p className=\"heading--sml\">Actions</p>\r\n\r\n            {this.state.creatorType === 'templates' ?\r\n              this.createTemplatesActions()\r\n            :\r\n              this.createMessagesActions()\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messageTypes, messages, currentViewURI, umpireMenu }) => ({\r\n  messageTypes,\r\n  messages,\r\n  currentViewURI,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(UmpireMenu);\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  updateMessage,\r\n} from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport JSONEditor from '@json-editor/json-editor';\r\nimport '../scss/App.scss';\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSave} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nclass JsonCreator extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.editor = null;\r\n    this.editorPreviewRef = React.createRef();\r\n\r\n    this.state = {\r\n      selectedSchema: ''\r\n    };\r\n  }\r\n\r\n\r\n  componentWillUpdate(nextProps, nextState, nextContext) {\r\n\r\n    if (this.editor && nextProps.umpireMenu.selectedSchemaID !== this.props.umpireMenu.selectedSchemaID) {\r\n      this.editor.destroy();\r\n      this.editor = null;\r\n    }\r\n\r\n    // check logic\r\n    if (\r\n      nextProps.messages.messagePreviewId.length > 0 ||\r\n      nextProps.umpireMenu.selectedSchemaID.length > 0\r\n      // nextProps.messages.messagePreviewId.length > 0 &&\r\n      // nextProps.umpireMenu.selectedSchemaID.length > 0\r\n    ) {\r\n\r\n      if (this.editor) return;\r\n\r\n      this.editor = new JSONEditor(this.editorPreviewRef.current, {\r\n        schema: nextProps.messages.messagePreview.schema,\r\n        theme: 'bootstrap4'\r\n      });\r\n    }\r\n\r\n    if (nextProps.messages.messagePreview.details) {\r\n      this.editor.setValue(nextProps.messages.messagePreview.details);\r\n    }\r\n\r\n    if (this.props.disabled && this.editor) {\r\n      this.editor.disable();\r\n    }\r\n  }\r\n\r\n\r\n  saveMessage = () => {\r\n    this.props.dispatch(updateMessage(this.editor.getValue(), this.props.messages.messagePreviewId));\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"button-wrap\">\r\n          {!this.props.disabled ? <span onClick={this.saveMessage} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span> : null }\r\n        </div>\r\n          <div id=\"preview-editor\" ref={this.editorPreviewRef}></div>\r\n        <div className=\"button-wrap\">\r\n          {!this.props.disabled ? <span onClick={this.saveMessage} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span> : null }\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, selectedSchema, umpireMenu }) => ({\r\n  messages,\r\n  messageTypes,\r\n  selectedSchema,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(JsonCreator);\r\n","import React, { Component } from 'react';\r\nimport '../scss/App.scss';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport JsonEditor from \"../Components/JsonEditor\";\r\n\r\nimport { getAllMessageTypes } from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n// import { resetMessagePreview } from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport Link from \"../Components/Link\";\r\n// import SearchList from \"../Components/SearchList\";\r\n// import {setCurrentViewFromURI} from \"../ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_ActionCreators\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faArrowLeft} from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass EditMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageToEdit: this.props.messages.messagePreviewId,\r\n      messageList: this.props.messages.messages, // set to state for filter, without filter don't set props to state to avoid bugs\r\n      searchInput: '',\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(getAllMessageTypes());\r\n  }\r\n\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.props.messages.messages.length !== nextProps.messages.messages.length) {\r\n      this.setState({\r\n        messageToEdit: nextProps.messages.messagePreviewId,\r\n        messageList:  nextProps.messages.messages\r\n      });\r\n    }\r\n  }\r\n\r\n  filterMessages = (input) => {\r\n\r\n    let value = input.target.value;\r\n\r\n    let newState = this.props.messages.messages.filter(function(mes) {\r\n      return mes.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n    });\r\n\r\n    this.setState({\r\n      messageList: newState,\r\n      searchInput: value.toLowerCase()\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message library</h1>\r\n        <div className=\"flex-content-wrapper\">\r\n          <div id=\"preview\" className=\"flex-content flex-content--solo-item\">\r\n            <JsonEditor id=\"preview\"\r\n                        disabled={ false }\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes }) => ({\r\n  messages,\r\n  messageTypes\r\n});\r\n\r\nexport default connect(mapStateToProps)(EditMessage);\r\n","import React, { Component } from 'react';\r\nimport '../scss/App.scss';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport JsonCreator from \"../Components/JsonCreator\";\r\n\r\nimport {getAllMessageTypes} from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\nimport { resetMessagePreview } from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport Link from \"../Components/Link\";\r\nimport SearchList from \"../Components/SearchList\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {setSelectedSchema} from \"../ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators\";\r\n\r\nclass EditMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageList: this.props.messageTypes.messages, // set to state for filter, without filter don't set props to state to avoid bugs\r\n      searchInput: '',\r\n    };\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(resetMessagePreview());\r\n    this.props.dispatch(getAllMessageTypes());\r\n  };\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.props.messageTypes.messages.length !== nextProps.messageTypes.messages.length) {\r\n      this.setState({\r\n        messageList: nextProps.messageTypes.messages\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  filterMessages = (input) => {\r\n\r\n    let value = input.target.value;\r\n\r\n    let newState = this.props.messageTypes.messages.filter(function(mes) {\r\n      return mes.details.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n    });\r\n\r\n    this.setState({\r\n      messageList: newState,\r\n      searchQuery: value\r\n    });\r\n  };\r\n\r\n  setSelectedSchemaId = (item) => {\r\n    this.props.dispatch(setSelectedSchema(item._id));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message library</h1>\r\n         <div className=\"flex-content-wrapper\">\r\n          <div id=\"selection\" className=\"flex-content\">\r\n            <SearchList key=\"search-templates\"\r\n                        listData={this.state.messageList}\r\n                        searchQuery={this.state.searchQuery}\r\n                        filter={this.filterMessages}\r\n                        selected={this.props.umpireMenu.selectedSchemaID}\r\n                        setSelected={this.setSelectedSchemaId}\r\n                        placeholder={'Select template'}\r\n            />\r\n          </div>\r\n          <div id=\"preview\" className=\"flex-content flex-content--big\">\r\n            <JsonCreator id=\"preview\" disabled={false} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, umpireMenu, currentViewURI }) => ({\r\n  messages,\r\n  messageTypes,\r\n  umpireMenu,\r\n  currentViewURI\r\n});\r\n\r\nexport default connect(mapStateToProps)(EditMessage);\r\n","import JSONEditor from '@json-editor/json-editor'\r\n// -------- Editor class ---------------------------------------------------\r\n\r\n// create a JSON Editor, elementId is the id in which to render the editor\r\nfunction Editor(elementId) {\r\n    this.jsonEditor = null;\r\n    this.renderZone = typeof elementId === \"string\" ? document.getElementById(elementId) : elementId.current;\r\n}\r\n\r\n// Destroy editor, and remove it from view\r\nEditor.prototype.destroy = function() {\r\n    if(this.jsonEditor) {\r\n        this.jsonEditor.destroy();\r\n        this.jsonEditor = null;\r\n    }\r\n}\r\n\r\n// Recreate a new editor based on the given schema and start value\r\n// If schema is undefined, the editor is not recreated, but only destroyed\r\nEditor.prototype.updateSchema = function(schema) {\r\n    this.destroy();\r\n    this.jsonEditor = new JSONEditor(this.renderZone, { schema: schema });\r\n}\r\n\r\n// Validate JSON\r\nEditor.prototype.validate = function() {\r\n    return this.jsonEditor.validate();\r\n}\r\n\r\n// Get generated JSON\r\nEditor.prototype.getJSON = function() {\r\n    return this.jsonEditor.getValue();\r\n}\r\n\r\n// --------------- PreviewEditor subclass ------------------------------------\r\n\r\n// create a JSON Editor that doesn't allow specifying additional properties,\r\n// but only those specified in the schema can be set.\r\n// elementId is the id in which to render the editor,\r\nexport function PreviewEditor(elementId) {\r\n    Editor.call(this, elementId);\r\n}\r\n\r\n// Inherit Editor methods\r\nPreviewEditor.prototype = Object.create(Editor.prototype);\r\n\r\n// After `PreviewEditor.prototype = Object.create(Editor.prototype)` instruction,\r\n// PreviewEditor.prototype is a copy of Editor.prototype,\r\n// so the `constructor` property of PreviewEditor.prototype is Editor,\r\n// but a PreviewEditor object is created with the PreviewEditor constructor,\r\n// so we override the `constructor` property of PreviewEditor.prototype to PreviewEditor\r\nObject.defineProperty(PreviewEditor.prototype, 'constructor', {\r\n    value: PreviewEditor,\r\n    enumerable: false, // so that it does not appear in 'for in' loop\r\n    writable: true\r\n});\r\n\r\nPreviewEditor.prototype.updateSchema = function(schema) {\r\n    this.destroy();\r\n    this.jsonEditor = new JSONEditor(this.renderZone, {\r\n        schema: schema,\r\n        no_additional_properties: true\r\n    });\r\n}\r\n\r\n\r\n// --------------- SchemaEditor subclass -------------------------------------\r\n\r\n// create a JSON Editor for a JSON Schema, it adds a save button\r\n// to save the Schema to a file, and also\r\n// makes the 'Properties' buttons distinguishable to avoid confusion between\r\n// schema properties and object properties.\r\n// elementId is the id in which to render the editor,\r\nexport function SchemaEditor(elementId) {\r\n    Editor.call(this, elementId);\r\n\r\n    // Check whether the node is a properties button for an object,\r\n    // and not for the schema of an object named properties\r\n    var isObjectPropertiesButton = function(node) {\r\n        // Does the path end in '.properties'?\r\n        if(node.matches('div[data-schemapath$=\".properties\"] > h3 > div > button.json-editor-btntype-properties')) {\r\n            var containingDiv = node.parentElement.parentElement.parentElement;\r\n            var span = containingDiv.querySelector('h3 > span');\r\n\r\n            // Is it an object properties or a property named properties?\r\n            if(span && span.innerText === 'properties') {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    this.observer = new MutationObserver(function(mutationsList, observer) {\r\n        for(var mutation of mutationsList) {\r\n            mutation.addedNodes.forEach(function(node) {\r\n                if(node.nodeType === 1) {\r\n                    if(isObjectPropertiesButton(node)) {\r\n                        node.querySelector('span').innerText = 'Add/Remove';\r\n                    }\r\n                    else if(node.matches('button.json-editor-btntype-properties')) {\r\n                        // For other properties buttons, remove the 'Properties' label,\r\n                        // and use a cog as icon\r\n                        var icon = node.querySelector('i');\r\n                        icon.classList.remove('fa-pen');\r\n                        icon.classList.add('fa-cog');\r\n\r\n                        var span = node.querySelector('span');\r\n                        span.innerText = '';\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    this.observer.observe(this.renderZone, { childList: true, subtree: true });\r\n}\r\n\r\n// Inherit Editor methods\r\nSchemaEditor.prototype = Object.create(Editor.prototype);\r\n\r\n// After `SchemaEditor.prototype = Object.create(Editor.prototype)` instruction,\r\n// SchemaEditor.prototype is a copy of Editor.prototype,\r\n// so the `constructor` property of SchemaEditor.prototype is Editor,\r\n// but a SchemaEditor object is created with the SchemaEditor constructor,\r\n// so we override the `constructor` property of SchemaEditor.prototype to SchemaEditor\r\nObject.defineProperty(SchemaEditor.prototype, 'constructor', {\r\n    value: SchemaEditor,\r\n    enumerable: false, // so that it does not appear in 'for in' loop\r\n    writable: true\r\n});\r\n\r\n// Override the updateSchema function\r\nSchemaEditor.prototype.updateSchema = function(schema) {\r\n    this.destroy();\r\n\r\n    // Add extra validation logic for integer Schemas that use the `range` format.\r\n    // For integer Schemas that use the `range` format we require that minimum and maximum properties are set, too.\r\n    var range_integer_validator = function(schema, value, path) {\r\n        var errors = [];\r\n        if(value !== null && value.type === 'integer' && value.format === 'range') {\r\n            if(typeof value.minimum === 'undefined' || typeof value.maximum === 'undefined') {\r\n                errors.push({\r\n                    path: path,\r\n                    property: 'format',\r\n                    message: 'The range format requires that you specify both minimum and maximum properties, too.'\r\n                });\r\n            }\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    // Check that if minimum and maximum are specified, minimum <= maximum\r\n    var min_max_consistence_validator = function(schema, value, path) {\r\n        var errors = [];\r\n        if(value !== null && (value.type === 'integer' || value.type === 'number')) {\r\n            if(typeof value.minimum !== 'undefined' && typeof value.minimum !== 'undefined' && value.minimum > value.maximum) {\r\n                errors.push({\r\n                    path: path,\r\n                    property: 'maximum',\r\n                    message: 'The maximum value must be greater than or equal than the minimum value.'\r\n                });\r\n            }\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    // Recreate the JSON-Editor\r\n    this.jsonEditor = new JSONEditor(this.renderZone, {\r\n        schema: schema,\r\n        custom_validators: [ range_integer_validator, min_max_consistence_validator ]\r\n    });\r\n\r\n\r\n    // Add a save button\r\n    var filename = 'schema.json';\r\n    var saveButtonLabel = 'Save';\r\n\r\n    this.jsonEditor.on('ready', function() {\r\n        var button = this.root.getButton(saveButtonLabel, 'save', saveButtonLabel);\r\n        var button_holder = this.root.theme.getHeaderButtonHolder();\r\n        button_holder.appendChild(button);\r\n        this.root.header.parentNode.insertBefore(button_holder, this.root.header.nextSibling);\r\n\r\n        var jsonEditor = this;\r\n        button.addEventListener('click', function(e) {\r\n            e.preventDefault();\r\n            var contents = jsonEditor.getValue();\r\n            var blob = new Blob([JSON.stringify(contents, null, 2)], {\r\n                type: \"application/json;charset=utf-8\"\r\n            });\r\n\r\n            if(window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n                window.navigator.msSaveOrOpenBlob(blob, filename);\r\n            }\r\n            else {\r\n                var a = document.createElement('a');\r\n                a.download = filename;\r\n                a.href = URL.createObjectURL(blob);\r\n                a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n\r\n                a.dispatchEvent(new MouseEvent('click', {\r\n                    'view': window,\r\n                    'bubbles': true,\r\n                    'cancelable': false\r\n                }));\r\n            }\r\n        }, false);\r\n    });\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Card, CardHeader, CardBody, CardFooter } from 'reactstrap';\r\nimport { SchemaEditor } from './json-schema-editor/editor';\r\nimport PropTypes from 'prop-types';\r\nimport JSONEditor from '@json-editor/json-editor';\r\n\r\nclass JsonSchemaEditor extends Component {\r\n\r\n  constructor(props, content) {\r\n    super(props, content);\r\n\r\n    this.schemaEditor = null;\r\n    this.editorBox = React.createRef();\r\n    this.onChange = this.onChange.bind(this);\r\n    this.updateEditor = this.updateEditor.bind(this);\r\n    this.saved = \"\";\r\n    this.value = this.props.defaultValue;\r\n  }\r\n\r\n  onChange(newValue, e) {\r\n    const errors = this.schemaEditor.validate();\r\n    console.log(errors);\r\n    if(errors.length) {\r\n      alert('Invalid schema');\r\n    }\r\n    else {\r\n      if(this.props.onChange) {\r\n        this.value = this.schemaEditor.jsonEditor.getValue();\r\n        this.props.onChange(this.schemaEditor.getJSON());\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.schemaEditor = new SchemaEditor(this.editorBox);\r\n    this.updateEditor(this.props.schema, this.props.options);\r\n  }\r\n\r\n  componentWillReceiveProps({schema, options}) {\r\n    this.updateEditor(schema, options);\r\n  }\r\n\r\n  updateEditor(schema, options) {\r\n    try {\r\n      const newJson = JSON.stringify(schema);\r\n      if(newJson !== this.save || options.counter !== this.props.options.counter) {\r\n\r\n        JSONEditor.defaults.options.object_layout = options.layout;\r\n        JSONEditor.defaults.options = {\r\n          ...JSONEditor.defaults.options,\r\n          ...options.booleanOptions\r\n        };\r\n\r\n        this.save = newJson;\r\n        this.schemaEditor.updateSchema(schema);\r\n        this.schemaEditor.jsonEditor.setValue(this.value);\r\n        this.schemaEditor.jsonEditor.on('change', this.onChange);\r\n      }\r\n    }\r\n    catch(err) {\r\n      alert('Invalid json schema');\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          Schema Editor\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div id=\"schema-editor\" ref={this.editorBox} />\r\n        </CardBody>\r\n        <CardFooter>\r\n        </CardFooter>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nJsonSchemaEditor.propTypes = {\r\n  schema: PropTypes.object.isRequired,\r\n  onChange: PropTypes.func\r\n};\r\n\r\nexport default JsonSchemaEditor;\r\n","import React, { Component } from 'react';\r\nimport { Card, CardHeader, CardBody, CardFooter } from 'reactstrap';\r\nimport { PreviewEditor } from './json-schema-editor/editor';\r\n\r\nclass EditorPreview extends Component {\r\n\r\n  constructor(props, content) {\r\n    super(props, content);\r\n\r\n    this.previewBox = React.createRef();\r\n    this.editorPreview = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.editorPreview = new PreviewEditor(this.previewBox);\r\n  }\r\n\r\n  componentWillReceiveProps({ schema }) {\r\n    this.editorPreview.destroy();\r\n    if (schema !== null) this.editorPreview.updateSchema(schema);\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          Editor Preview\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div id='editor-preview' ref={this.previewBox}/>\r\n        </CardBody>\r\n        <CardFooter>\r\n          The Editor Preview will be updated as you make changes in the Schema Editor\r\n        </CardFooter>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditorPreview;\r\n","import React, { Component } from 'react';\r\nimport jsonMetaSchema from './data.json';\r\nimport JSONEditor from '@json-editor/json-editor';\r\nimport Editor from './jsonEditor';\r\nimport Preview from './editorPreview';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\nimport { setPreviewSchema } from \"../../ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass SchemaEditor extends Component {\r\n\r\n  constructor(props, content) {\r\n    super(props, content);\r\n\r\n    JSONEditor.defaults.options.iconlib = \"fontawesome5\";\r\n    JSONEditor.defaults.options.theme   = 'bootstrap4';\r\n    this.updateMetaSchema = this.updateMetaSchema.bind(this);\r\n    this.updatePreviewSchema = this.updatePreviewSchema.bind(this);\r\n    this.updateOptions = this.updateOptions.bind(this);\r\n\r\n    this.schemaEditor = null;\r\n    this.editorPreview = null;\r\n\r\n    this.defaultValue = {\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"title\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"Date\": {\r\n          \"type\": \"string\",\r\n          \"format\": \"datetime-local\",\r\n        },\r\n        \"Status\": {\r\n          \"type\": \"string\",\r\n          \"enum\": [\r\n            \"Minor\",\r\n            \"Major\",\r\n            \"Critical\"\r\n          ]\r\n        },\r\n        \"Description\": {\r\n          \"type\": \"string\",\r\n          \"format\": \"textarea\",\r\n        }\r\n      },\r\n      \"title\": \"Machinery Failure\",\r\n      \"format\": \"grid\"\r\n    };\r\n\r\n\r\n    if (this.props.schemaId) {\r\n      this.defaultValue = this.props.messageTypes.messages.find((mes) => mes._id === this.props.schemaId).details;\r\n    }\r\n\r\n\r\n    this.state = {\r\n      metaSchema: jsonMetaSchema,\r\n      previewSchema: null,\r\n      options: {\r\n        layout: JSONEditor.defaults.options.object_layout,\r\n        booleanOptions: {}\r\n      }\r\n    }\r\n  }\r\n\r\n  updatePreviewSchema(schema) {\r\n    console.log(\"preview update\");\r\n    this.setState({previewSchema: schema});\r\n\r\n    this.props.dispatch(setPreviewSchema(schema));\r\n  }\r\n\r\n  updateOptions(options) {\r\n    console.log(\"options update\");\r\n    this.setState({options: options});\r\n  }\r\n\r\n  updateMetaSchema(schema) {\r\n    console.log(\"editor update\");\r\n    this.setState({metaschema: schema});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"flex-content flex-content--left50\">\r\n          <Editor\r\n            schema={this.state.metaSchema}\r\n            onChange={this.updatePreviewSchema}\r\n            options={this.state.options}\r\n            defaultValue={this.defaultValue}\r\n          />\r\n        </div>\r\n        <div className=\"flex-content flex-content--right50\">\r\n          <Preview schema={this.state.previewSchema}/>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ umpireMenu, }) => ({\r\n  umpireMenu,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SchemaEditor);\r\n","import React, { Component } from 'react';\r\nimport '../scss/App.scss';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getAllMessageTypes,\r\n  updateMessageType } from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n\r\nimport { resetMessagePreview } from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport Link from \"../Components/Link\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport SchemaEditor from \"../Components/jsonSchemaEditor/index\";\r\n\r\nclass EditMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageList: this.props.messageTypes.messages, // set to state for filter, without filter don't set props to state to avoid bugs\r\n      searchInput: '',\r\n    };\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(resetMessagePreview());\r\n    this.props.dispatch(getAllMessageTypes());\r\n  };\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.props.messageTypes.messages.length !== nextProps.messageTypes.messages.length) {\r\n      this.setState({\r\n        messageList: nextProps.messageTypes.messages\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  filterMessages = (input) => {\r\n\r\n    let value = input.target.value;\r\n\r\n    let newState = this.props.messageTypes.messages.filter(function(mes) {\r\n      return mes.details.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n    });\r\n\r\n    this.setState({\r\n      messageList: newState,\r\n      searchInput: value.toLowerCase()\r\n    });\r\n  };\r\n\r\n  updateSchema = () => {\r\n    this.props.dispatch(updateMessageType(this.props.umpireMenu.previewSchema, this.props.umpireMenu.selectedSchemaID));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message template</h1>\r\n        <div className=\"button-wrap\">\r\n          <span onClick={this.updateSchema} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span>\r\n        </div>\r\n        <div className=\"flex-content-wrapper\">\r\n          <SchemaEditor\r\n            schemaId={this.props.umpireMenu.selectedSchemaID}\r\n            messageTypes={this.props.messageTypes}\r\n          />\r\n        </div>\r\n        <div className=\"button-wrap\">\r\n          <span onClick={this.updateSchema} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, currentViewURI, umpireMenu }) => ({\r\n  messages,\r\n  messageTypes,\r\n  currentViewURI,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(EditMessage);\r\n","import React, { Component } from 'react';\r\nimport '../scss/App.scss';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getAllMessageTypes,\r\n  createMessageType\r\n} from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n\r\nimport { resetMessagePreview } from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport Link from \"../Components/Link\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport SchemaEditor from \"../Components/jsonSchemaEditor/index\";\r\n\r\nclass EditMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageList: this.props.messageTypes.messages, // set to state for filter, without filter don't set props to state to avoid bugs\r\n      searchInput: '',\r\n    };\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(resetMessagePreview());\r\n    this.props.dispatch(getAllMessageTypes());\r\n  };\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.props.messageTypes.messages.length !== nextProps.messageTypes.messages.length) {\r\n      this.setState({\r\n        messageList: nextProps.messageTypes.messages\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  saveSchema = () => {\r\n    this.props.dispatch(createMessageType(this.props.umpireMenu.previewSchema));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message template</h1>\r\n        <div className=\"button-wrap\">\r\n          <span onClick={this.saveSchema} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span>\r\n        </div>\r\n        <div className=\"flex-content-wrapper\">\r\n          <SchemaEditor />\r\n        </div>\r\n        <div className=\"button-wrap\">\r\n          <span onClick={this.saveSchema} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, currentViewURI, umpireMenu }) => ({\r\n  messages,\r\n  messageTypes,\r\n  currentViewURI,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(EditMessage);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport '../../scss/App.scss';\r\n\r\nclass TextInput extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      type: this.props.options.numInput ? \"number\" : \"text\",\r\n    };\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.props.updateStore(e.target.value);\r\n  };\r\n\r\n  render() {\r\n\r\n    let invalid = !this.props.validInput ? 'invalid-input' : '';\r\n\r\n    return (\r\n      <>\r\n        <input className={invalid} id={this.props.id ? this.props.id : null} type={this.state.type} onChange={this.onChange} value={this.props.data ? this.props.data : \"\"} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nTextInput.propTypes = {\r\n  updateStore: PropTypes.func.isRequired,\r\n  options: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nexport default TextInput;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport '../../scss/App.scss';\r\n\r\nclass DropdownInput extends Component {\r\n\r\n  onChange = (e) => {\r\n    this.props.updateStore(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <select disabled={this.props.disabled} value={this.props.data ? this.props.data : \"placeholder\"} onChange={this.onChange}>\r\n        <option value=\"placeholder\">{this.props.placeholder}</option>\r\n        { this.props.selectOptions.map((item, i) => {\r\n          return (<option key={`${item.value}${item.option}`} value={item.value}>{item.option}</option>)\r\n        })}\r\n      </select>\r\n    );\r\n  }\r\n}\r\n\r\nDropdownInput.propTypes = {\r\n  updateStore: PropTypes.func.isRequired,\r\n  selectOptions: PropTypes.array.isRequired,\r\n  // options: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nexport default DropdownInput;\r\n","import React, { Component } from 'react';\r\n\r\nclass Row extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"flex-content flex-content--row\">\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Row;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport '../../scss/App.scss';\r\n\r\nclass TextArea extends Component {\r\n\r\n  onChange = (e) => {\r\n    this.props.updateStore(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <textarea value={this.props.data} onChange={this.onChange} style={{resize: \"none\"}}></textarea>\r\n    );\r\n  }\r\n}\r\n\r\nTextArea.propTypes = {\r\n  updateStore: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default TextArea;\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport TextInput from \"../../Components/Inputs/TextInput\";\r\nimport DropdownInput from \"../../Components/Inputs/DropdownInput\";\r\nimport Row from \"../../Components/Layout/Row\";\r\n\r\nimport { setGameData } from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\nimport TextArea from \"../../Components/Inputs/TextArea\";\r\n\r\nclass SettingsTab extends Component {\r\n\r\n  updateDescription = (value) => {\r\n    this.props.dispatch(setGameData({gameDescription: value}));\r\n  };\r\n\r\n  updateSpatialRepresentation = (value) => {\r\n    this.props.dispatch(setGameData({spatialRepresentation: value}));\r\n  };\r\n\r\n  updatePlanningInterval = (value) => {\r\n    this.props.dispatch(setGameData({planningInterval: value}));\r\n  };\r\n\r\n  updateReplayInterval = (value) => {\r\n    this.props.dispatch(setGameData({replayInterval: value}));\r\n  };\r\n\r\n  updateTurnStrategy = (value) => {\r\n    this.props.dispatch(setGameData({turnStrategy: value}));\r\n  };\r\n\r\n  render() {\r\n\r\n    let spatialRepresentationOptions = [{value: \"opt1\", option: \"opt1\"}, {value: \"opt2\", option: \"opt2\"}, {value: \"opt3\", option: \"opt3\"}]\r\n    let turnStrategyOptions = [{value: \"opt1\", option: \"opt1\"}, {value: \"opt2\", option: \"opt2\"}, {value: \"opt3\", option: \"opt3\"}]\r\n\r\n    return (\r\n      <div className=\"flex-content-wrapper\">\r\n\r\n        <div className=\"flex-content flex-content--left50\">\r\n          <p className=\"heading--sml\">Game description &amp; objectives</p>\r\n          <TextArea\r\n            updateStore={this.updateDescription}\r\n            data={this.props.wargame.tabs[this.props.wargame.currentTab].data.gameDescription}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex-content flex-content--right50\">\r\n\r\n          <Row>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml\">Spatial Representation</p>\r\n            </div>\r\n            <div className=\"flex-content flex-content--fill\">\r\n              <DropdownInput\r\n                updateStore={this.updateSpatialRepresentation}\r\n                selectOptions={spatialRepresentationOptions}\r\n                placeholder=\"Select spatial representation\"\r\n                data={this.props.wargame.tabs[this.props.wargame.currentTab].data.spatialRepresentation}\r\n              />\r\n            </div>\r\n          </Row>\r\n\r\n          <Row>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml\">Planning Interval</p>\r\n            </div>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <TextInput\r\n                updateStore={this.updatePlanningInterval}\r\n                options={{ numInput: true }}\r\n                data={this.props.wargame.tabs[this.props.wargame.currentTab].data.planningInterval}\r\n                validInput={true}\r\n              />\r\n            </div>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml heading--mleft\">min.</p>\r\n            </div>\r\n          </Row>\r\n\r\n          <Row>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml\">Replay interval</p>\r\n            </div>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <TextInput\r\n                updateStore={this.updateReplayInterval}\r\n                options={{ numInput: true }}\r\n                data={this.props.wargame.tabs[this.props.wargame.currentTab].data.replayInterval}\r\n                validInput={true}\r\n              />\r\n            </div>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml heading--mleft\">min.</p>\r\n            </div>\r\n          </Row>\r\n\r\n          <Row>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml\">Turn Strategy</p>\r\n            </div>\r\n            <div className=\"flex-content flex-content--fill\">\r\n              <DropdownInput\r\n                updateStore={this.updateTurnStrategy}\r\n                selectOptions={turnStrategyOptions}\r\n                placeholder=\"Not implemented yet\"\r\n                data={this.props.wargame.tabs[this.props.wargame.currentTab].data.turnStrategy}\r\n                // disabled={true}\r\n              />\r\n            </div>\r\n          </Row>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame }) => ({\r\n  wargame,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SettingsTab);\r\n","import React, { Component } from 'react';\r\nimport classNames from \"classnames\";\r\nimport '../scss/App.scss';\r\nimport {PropTypes} from \"prop-types\";\r\n\r\nclass TabsSearchList extends Component {\r\n\r\n  setSelected = (item) => {\r\n    this.props.setSelected(item);\r\n  };\r\n\r\n  createList() {\r\n    var data = this.props.listData;\r\n\r\n    var list = [];\r\n    for (var prop in data) {\r\n      let active = prop === this.props.selected ? 'active' : '';\r\n      list.unshift(<span href=\"#\" onClick={this.setSelected.bind(this, prop)} key={prop} className={classNames({\"list-title\": true, active})}>{prop}</span>);\r\n    }\r\n    return list;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"list\">\r\n        {this.props.filter ?\r\n          <input type=\"text\" className=\"list-input\" key=\"search-templates\" placeholder={this.props.placeholder} onChange={ this.props.filter } value={this.props.searchQuery} />\r\n          : false\r\n        }\r\n        <div className=\"list-list\">\r\n          { this.createList() }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTabsSearchList.propTypes = {\r\n  listData: PropTypes.object.isRequired,\r\n  filter: PropTypes.func,\r\n  selected: PropTypes.string.isRequired,\r\n  setSelected: PropTypes.func.isRequired,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nexport default TabsSearchList;\r\n","import React, { Component } from 'react';\r\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nclass RemovableGroupItem extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <span className=\"group-item\" key={this.props.children}>\r\n        {this.props.children}\r\n        <FontAwesomeIcon icon={faTimes} />\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RemovableGroupItem;\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport TabsSearchList from \"../../Components/TabsSearchList\";\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport {\r\n  setSelectedForce,\r\n  setForceOverview\r\n} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\nimport '../../scss/App.scss';\r\nimport TextArea from \"../../Components/Inputs/TextArea\";\r\nimport RemovableGroupItem from \"../../Components/Layout/RemovableGroupItem\";\r\n\r\nclass ForcesTab extends Component {\r\n\r\n  openModal = () => {\r\n    this.props.dispatch(modalAction.open(\"addForce\"));\r\n  };\r\n\r\n  setSelected = (force) => {\r\n    this.props.dispatch(setSelectedForce(force));\r\n  };\r\n\r\n  updateOverview = (overview) => {\r\n    this.props.dispatch(setForceOverview(overview));\r\n  };\r\n\r\n  createForceEditor() {\r\n\r\n    let curTab = this.props.wargame.currentTab;\r\n    let selectedForce = this.props.wargame.tabs[curTab].data.selectedForce;\r\n\r\n    return (\r\n      <div className=\"flex-content--fill forcesTab\">\r\n\r\n        <h3>{selectedForce}</h3>\r\n\r\n        <span className=\"link link--secondary link--noIcon link--disabled\">Change icon</span>\r\n\r\n        <p className=\"heading--sml\">Overview &amp; Objectives</p>\r\n        <TextArea\r\n          updateStore={this.updateOverview}\r\n          data={this.props.wargame.tabs[curTab].data.forces[selectedForce].overview}\r\n        />\r\n\r\n        <p className=\"heading--sml\">Roles</p>\r\n        <span className=\"link link--secondary link--noIcon link--disabled\">Add a new role</span>\r\n\r\n        <div className=\"flex-content\">\r\n          {this.props.wargame.tabs[curTab].data.forces[selectedForce].roles.map((role) => {\r\n            return (<RemovableGroupItem key={role}>{role}</RemovableGroupItem>)\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n\r\n    let curTab = this.props.wargame.currentTab;\r\n    let selectedForce = this.props.wargame.tabs[curTab].data.selectedForce;\r\n\r\n    return (\r\n      <div className=\"flex-content-wrapper\">\r\n        <div className=\"flex-content\">\r\n          <span className=\"link link--noIcon\" onClick={this.openModal}>Add a new force</span>\r\n          <TabsSearchList listData={this.props.wargame.tabs[curTab].data.forces}\r\n                          setSelected={this.setSelected}\r\n                          selected={selectedForce}\r\n          />\r\n        </div>\r\n\r\n        {selectedForce ?\r\n          this.createForceEditor()\r\n        : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// temp use allMessages\r\nconst mapStateToProps = ({ messages, wargame }) => ({\r\n  messages,\r\n  wargame,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ForcesTab);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../../scss/App.scss';\r\nimport Select from \"react-select\";\r\n\r\nclass EditSubscriptionRow extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      subscriptionId: this.props.data.subscriptionId,\r\n      editSubscriptionForce: {value: this.props.data.force, label: this.props.data.force},\r\n      editSubscriptionRole: {value: this.props.data.role, label: this.props.data.role},\r\n      editSubscriptionTemplates: this.props.data.templates,\r\n    };\r\n  }\r\n\r\n  updateSubscriptionForce = (option) => {\r\n    this.setState({\r\n      editSubscriptionForce: option,\r\n    });\r\n  };\r\n\r\n  updateSubscriptionRole = (option) => {\r\n    this.setState({\r\n      editSubscriptionRole: option,\r\n    });\r\n  };\r\n\r\n  updateSubscriptionTemplates = (option) => {\r\n    this.setState({\r\n      editSubscriptionTemplates: option,\r\n    });\r\n  };\r\n\r\n  updateChannel = () => {\r\n    let subscriptionData = {\r\n      force: this.state.editSubscriptionForce.label,\r\n      role: this.state.editSubscriptionRole.label,\r\n      templates: this.state.editSubscriptionTemplates,\r\n    };\r\n    this.props.updateRecipient(this.state.subscriptionId, subscriptionData);\r\n    this.props.cancelEdit();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <tr>\r\n        <td>\r\n          <Select\r\n            value={this.state.editSubscriptionForce}\r\n            options={this.props.forceOptions}\r\n            onChange={this.updateSubscriptionForce}\r\n          />\r\n        </td>\r\n        <td>\r\n          <Select\r\n            value={this.state.editSubscriptionRole}\r\n            options={this.props.roleOptions}\r\n            onChange={this.updateSubscriptionRole}\r\n          />\r\n        </td>\r\n        <td>\r\n          <Select\r\n            value={this.state.editSubscriptionTemplates}\r\n            options={this.props.templateOptions}\r\n            onChange={this.updateSubscriptionTemplates}\r\n            isMulti\r\n          />\r\n        </td>\r\n        <td>\r\n          <button\r\n            className=\"btn btn-action btn-action--secondary\"\r\n            onClick={this.updateChannel}\r\n            // disabled={!this.state.selectedTemplates.length > 0}\r\n          >\r\n            Save</button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default connect()(EditSubscriptionRow);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  addRecipientToChannel,\r\n  updateRecipient,\r\n  removeRecipient,\r\n} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators.js\";\r\n\r\nimport EditSubscriptionRow from \"./EditSubscriptionRow\";\r\nimport Select from \"react-select\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTrash,\r\n  faPencilAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass ChannelsTable extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var tabs = Object.values(this.props.wargame.tabs);\r\n    let forces = tabs.find((d) => d.name === \"Forces\").data.forces;\r\n\r\n    let forceOptions = [];\r\n    for (let prop in forces) {\r\n      forceOptions.push({\r\n        value: prop,\r\n        label: prop,\r\n      });\r\n    }\r\n\r\n    let templateOptions = this.props.messageTypes.messages.map((messageType) => {\r\n      return {\r\n        value: messageType._id,\r\n        label: messageType.title,\r\n      }\r\n    });\r\n\r\n    this.state = {\r\n      selectedForce: {value: null, label: null},\r\n      forceOptions: forceOptions,\r\n      selectedRole:  {value: null, label: null},\r\n      roleOptions: [],\r\n      selectedTemplates:  [],\r\n      templateOptions: templateOptions,\r\n      subscriptionToEdit: null,\r\n      editSubscriptionForce: '',\r\n      editSubscriptionRole: '',\r\n      editSubscriptionTemplates: [],\r\n    }\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState, nextContext) {\r\n\r\n    if (nextState.selectedForce.value === null) return;\r\n\r\n    if (this.state.selectedForce.value !== nextState.selectedForce.value) {\r\n\r\n      var tabs = Object.values(this.props.wargame.tabs);\r\n\r\n      let roleOptions = [];\r\n      var roles = tabs.find((d) => d.name === \"Forces\").data.forces[nextState.selectedForce.value].roles;\r\n\r\n      roles.forEach((role) => {\r\n\r\n        roleOptions.push({\r\n          value: role,\r\n          label: role,\r\n        });\r\n      });\r\n\r\n      this.setState({\r\n        roleOptions,\r\n      });\r\n    }\r\n  }\r\n\r\n  createRow(data, i) {\r\n    var row = [];\r\n    for (var prop in data) {\r\n      if (prop === \"subscriptionId\") continue;\r\n\r\n      var value = '';\r\n      if (typeof data[prop] !== \"string\") {\r\n\r\n        for (var j=0 ; j<data[prop].length ; j++) {\r\n          let item = data[prop][j];\r\n          value += item.label;\r\n          if (j !== data[prop].length-1) value+=', ';\r\n        }\r\n      } else {\r\n        value = data[prop];\r\n      }\r\n      row.push(<td key={`${value}${i}`}>{value}</td>)\r\n    }\r\n    row.push(\r\n      <td key={`edit-delete${i}`}>\r\n        <FontAwesomeIcon icon={faTrash} onClick={this.removeSubscription.bind(this, data.subscriptionId)} />\r\n        <FontAwesomeIcon icon={faPencilAlt} onClick={this.editSubscription.bind(this, data.subscriptionId)} />\r\n      </td>\r\n    );\r\n    return (<tr key={`row-${i}`}>{row}</tr>);\r\n  }\r\n\r\n  removeSubscription(subscriptionId) {\r\n    this.props.dispatch(removeRecipient(subscriptionId))\r\n  };\r\n\r\n  editSubscription(subscriptionId) {\r\n    this.setState({\r\n      subscriptionToEdit: subscriptionId,\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      subscriptionToEdit: \"\",\r\n    });\r\n  };\r\n\r\n  updateRecipient = (id, data) => {\r\n    this.props.dispatch(updateRecipient(id, data));\r\n  };\r\n\r\n  setSelectedForce = (option) => {\r\n    this.setState({\r\n      selectedForce: option,\r\n    });\r\n  };\r\n\r\n  setSelectedRole = (option) => {\r\n    this.setState({\r\n      selectedRole: option,\r\n    });\r\n  };\r\n\r\n  setSelectedTemplate = (option) => {\r\n    this.setState({\r\n      selectedTemplates: option,\r\n    });\r\n  };\r\n\r\n  addToChannel = () => {\r\n\r\n    let channelData = {\r\n      force: this.state.selectedForce.value,\r\n      role: this.state.selectedRole.value,\r\n      templates: this.state.selectedTemplates,\r\n    };\r\n    this.props.dispatch(addRecipientToChannel(channelData));\r\n\r\n    this.setState({\r\n      selectedForce: {value: null, label: null},\r\n      selectedRole: {value: null, label: null},\r\n      selectedTemplates: [],\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"flex-content\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Force</th>\r\n              <th>Roles</th>\r\n              <th>Templates</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.data.map((data, i) => {\r\n              return data.subscriptionId === this.state.subscriptionToEdit ? <EditSubscriptionRow\r\n                                                                                  key={data.subscriptionId}\r\n                                                                                  data={data}\r\n                                                                                  forceOptions={this.state.forceOptions}\r\n                                                                                  roleOptions={this.state.roleOptions}\r\n                                                                                  templateOptions={this.state.templateOptions}\r\n                                                                                  cancelEdit={this.cancelEdit}\r\n                                                                                  updateRecipient={this.updateRecipient}\r\n                                                                            /> : this.createRow(data, i);\r\n            })}\r\n            <tr>\r\n              <td>\r\n                <Select\r\n                  value={this.state.selectedForce}\r\n                  options={this.state.forceOptions}\r\n                  onChange={this.setSelectedForce}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Select\r\n                  value={this.state.selectedRole}\r\n                  options={this.state.roleOptions}\r\n                  onChange={this.setSelectedRole}\r\n                  isDisabled={!this.state.selectedForce.value}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Select\r\n                  value={this.state.selectedTemplates}\r\n                  options={this.state.templateOptions}\r\n                  onChange={this.setSelectedTemplate}\r\n                  isDisabled={!this.state.selectedRole.value}\r\n                  isMulti\r\n                />\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-action btn-action--secondary\"\r\n                  onClick={this.addToChannel}\r\n                  disabled={!this.state.selectedTemplates.length > 0}>\r\n                  Save</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame, messageTypes }) => ({\r\n  wargame,\r\n  messageTypes,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ChannelsTable);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport {\r\n  setSelectedChannel,\r\n  setForceOverview\r\n} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nimport '../../scss/App.scss';\r\n\r\nimport TabsSearchList from \"../../Components/TabsSearchList\";\r\nimport ChannelsTable from \"../../Components/Layout/ChannelsTable\";\r\n\r\nclass ForcesTab extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      channelList: this.props.wargame.tabs[this.props.wargame.currentTab].data.channels,\r\n      searchQuery: '',\r\n    }\r\n  };\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    const curPropsState = Object.keys(this.props.wargame.tabs[this.props.wargame.currentTab].data.channels);\r\n    const nextPropsState = Object.keys(nextProps.wargame.tabs[nextProps.wargame.currentTab].data.channels);\r\n\r\n    if (curPropsState.length !== nextPropsState.length) {\r\n      this.setState({\r\n        channelList: nextProps.wargame.tabs[nextProps.wargame.currentTab].data.channels\r\n      });\r\n    }\r\n  }\r\n\r\n  openModal = () => {\r\n    this.props.dispatch(modalAction.open(\"addChannel\"));\r\n  };\r\n\r\n  setSelected = (force) => {\r\n    this.props.dispatch(setSelectedChannel(force));\r\n  };\r\n\r\n  updateOverview = (overview) => {\r\n    this.props.dispatch(setForceOverview(overview));\r\n  };\r\n\r\n  filterChannels = (input) => {\r\n\r\n    let value = input.target.value;\r\n\r\n    let list = this.props.wargame.tabs[this.props.wargame.currentTab].data.channels;\r\n\r\n    let newState = {};\r\n    for (let prop in list) {\r\n      if (prop.toLowerCase().indexOf(value.toLowerCase()) > -1) newState[prop] = list[prop];\r\n    }\r\n\r\n    this.setState({\r\n      channelList: newState,\r\n      searchQuery: value\r\n    });\r\n  };\r\n\r\n  createChannelEditor() {\r\n\r\n    let curTab = this.props.wargame.currentTab;\r\n    let selectedChannel = this.props.wargame.tabs[curTab].data.selectedChannel;\r\n\r\n    return (\r\n      <div className=\"flex-content--fill channelsTab\">\r\n        <h3>{selectedChannel}</h3>\r\n\r\n        <p className=\"heading--sml\">Participants and messages</p>\r\n\r\n        <ChannelsTable data={this.props.wargame.tabs[curTab].data.channels[selectedChannel]} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n\r\n    const curTab = this.props.wargame.currentTab;\r\n    const selectedChannel = this.props.wargame.tabs[curTab].data.selectedChannel;\r\n\r\n    return (\r\n      <div className=\"flex-content-wrapper\">\r\n        <div className=\"flex-content\">\r\n          <span className=\"link link--noIcon\" onClick={this.openModal}>Add channel</span>\r\n          <TabsSearchList listData={this.state.channelList}\r\n                          filter={this.filterChannels}\r\n                          searchQuery={this.state.searchQuery}\r\n                          setSelected={this.setSelected}\r\n                          selected={selectedChannel}\r\n                          placeholder={\"Search channels\"}\r\n          />\r\n        </div>\r\n\r\n        {selectedChannel ?\r\n          this.createChannelEditor()\r\n        : null}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// temp use allMessages\r\nconst mapStateToProps = ({ messages, wargame }) => ({\r\n  messages,\r\n  wargame,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ForcesTab);\r\n","import React, { Component } from 'react';\r\n\r\nimport '../scss/App.scss';\r\n\r\nclass ValidationNotification extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"invalid-notification\"><p>{this.props.children}</p></div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default ValidationNotification;\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SettingsTab from \"./TabViews/SettingsTab\";\r\nimport ForcesTab from \"./TabViews/ForcesTab\";\r\nimport ChannelsTab from \"./TabViews/ChannelsTab\";\r\nimport ValidationNotification from \"../Components/ValidationNotification\";\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n});\r\n\r\n\r\nclass TabbedView extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    console.log(this.props.tabs);\r\n\r\n    this.state = {\r\n      value: 0,\r\n      tabs: Object.values(this.props.tabs).map((item) => item.name),\r\n      invalidFields: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setCurrentTab(0);\r\n  }\r\n\r\n\r\n  handleChange = (event, value) => {\r\n    this.setState({ value });\r\n    this.props.setCurrentTab(value);\r\n  };\r\n\r\n  render() {\r\n\r\n    const { value } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className={classes.root}>\r\n          <AppBar position=\"static\" color=\"default\">\r\n            <Tabs\r\n              value={value}\r\n              onChange={this.handleChange}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              centered\r\n            >\r\n              { this.state.tabs.map((tabName, i) => <Tab key={tabName + i} label={tabName} />) }\r\n            </Tabs>\r\n          </AppBar>\r\n          {value === 0 && <TabContainer><SettingsTab /></TabContainer>}\r\n          {/*{value === 1 && <TabContainer>PlatformTypes.jsx</TabContainer>}*/}\r\n          {value === 1 && <TabContainer><ForcesTab /></TabContainer>}\r\n          {/*{value === 3 && <TabContainer>BackHistory.jsx</TabContainer>}*/}\r\n          {/*{value === 4 && <TabContainer>Positions.jsx</TabContainer>}*/}\r\n          {value === 2 && <TabContainer><ChannelsTab /></TabContainer>}\r\n          {/*{value === 6 && <TabContainer>PlayControl.jsx</TabContainer>}*/}\r\n        </div>\r\n        <ValidationNotification validation={ this.props.wargame.validation } />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame }) => ({\r\n  wargame\r\n});\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(TabbedView));\r\n","import React, { Component } from 'react';\r\n\r\nclass ProgressBar extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"progress\">\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProgressBar;\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {\r\n  setCurrentTab,\r\n  setWargameTitle,\r\n  updateWargame,\r\n} from \"../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nimport TabbedView from \"./TabbedView\";\r\nimport ProgressBar from \"../Components/ProgressBar/ProgressBar\";\r\n\r\nimport Link from \"../Components/Link\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport classNames from \"classnames\";\r\nimport TextInput from \"../Components/Inputs/TextInput\";\r\nimport {getAllMessageTypes} from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n\r\nclass GameSetup extends Component {\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(getAllMessageTypes());\r\n  }\r\n\r\n  setCurrentTab = (tab) => {\r\n    this.props.dispatch(setCurrentTab(tab));\r\n  };\r\n\r\n  createIndicators() {\r\n    const that = this;\r\n\r\n    return Object.entries(this.props.wargame.tabs).map(function (entry) {\r\n\r\n      let active = that.props.wargame.currentTab === parseInt(entry[0]);\r\n      let completed = entry[1].complete;\r\n      return (<div key={entry[0]} className={classNames(\"progress-indicator\", {\"progress-indicator--active\": active, \"progress-indicator--complete\": completed})}></div>);\r\n    });\r\n  }\r\n\r\n  updateWargameTitle = (name) => {\r\n    this.props.dispatch(setWargameTitle(name));\r\n  };\r\n\r\n\r\n  saveWargame = () => {\r\n    if (this.checkAllValid()) {\r\n      this.props.dispatch(updateWargame(this.props.wargame.currentWargame, this.props.wargame.tabs, this.props.wargame.wargameTitle));\r\n    }\r\n  };\r\n\r\n  checkAllValid = () => {\r\n    return Object.values(this.props.wargame.validation).reduce((entry) => entry === true);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"view-wrapper view-wrapper-gamesetup\">\r\n          <div id=\"sidebar\">\r\n            <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n          </div>\r\n          <div className=\"flex-content-wrapper flex-content-wrapper--distribute\" id=\"game-setup-head\">\r\n            <TextInput\r\n              id=\"title-editable\"\r\n              updateStore={this.updateWargameTitle}\r\n              options={{numInput: false}}\r\n              data={this.props.wargame.wargameTitle}\r\n              validInput={this.props.wargame.validation.validWargameName}\r\n            />\r\n            <span className={classNames({\"link\": true, \"link--noIcon\": true, \"link--disabled\": !this.checkAllValid()})} onClick={this.saveWargame}>save</span>\r\n            <ProgressBar>\r\n              {this.createIndicators()}\r\n            </ProgressBar>\r\n          </div>\r\n          <TabbedView\r\n            tabs={this.props.wargame.tabs}\r\n            setCurrentTab={this.setCurrentTab}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n// temp use allMessages\r\nconst mapStateToProps = ({ wargame }) => ({\r\n  wargame\r\n});\r\n\r\nexport default connect(mapStateToProps)(GameSetup);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\nimport check from \"check-types\";\r\nimport moment from \"moment\";\r\n\r\nclass MessagePreview extends Component {\r\n\r\n  createObjItem(pair) {\r\n    const that = this;\r\n    return (\r\n      <>\r\n        {/*<h3>{pair[0]}</h3>*/}\r\n        <span key={`objItem--${pair[0]}-${pair[1]}`} className=\"group-section\">{ that.deconstructObj(pair[1]) }</span>\r\n      </>\r\n    )\r\n  }\r\n\r\n  createBoolItem(pair) {\r\n    return <span key={`boolItem--${pair[0]}-${pair[1]}`}>{pair[1] ? pair[0] : false}</span>\r\n  }\r\n\r\n  createTimeItem(pair) {\r\n\r\n    return (\r\n      <>\r\n        <span className=\"detail\">{pair[0]}:</span>\r\n        <span key={`dateTime-${pair[1]}`} className=\"data\">{moment(pair[1]).format('DD/MM/YY,HH:mm')}</span>\r\n      </>\r\n    )\r\n  }\r\n\r\n  createStrItem(pair, withoutName) {\r\n    return <>\r\n      <span key={`strItem-${pair[0]}`} className=\"detail\">\r\n        {pair[0]}:\r\n      </span>\r\n      <span className=\"data\">\r\n        {pair[1]}\r\n      </span>\r\n      </>\r\n  }\r\n\r\n  deconstructArr(pair) {\r\n    const that = this;\r\n    return (\r\n      <>\r\n        <span  className=\"detail\">{pair[0]}</span>\r\n        {pair[1].map((item) => {\r\n          // CHECK NAME PROP ON EVERY OBJ\r\n          return (\r\n              <span key={`section-${item.name}`}>{ that.deconstructObj(item) }</span>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\n  deconstructObj(obj) {\r\n\r\n    const that = this;\r\n    const keyPropPairs = Object.entries(obj);\r\n\r\n    return keyPropPairs.map((pair, i) => {\r\n\r\n      if (check.object(pair[1])) return that.createObjItem(pair);\r\n      if (check.array.of.object(pair[1])) return that.deconstructArr(pair);\r\n      if (check.boolean(pair[1])) return that.createBoolItem(pair);\r\n\r\n      if (moment(pair[1], moment.ISO_8601, true).isValid()) return that.createTimeItem(pair);\r\n\r\n      return that.createStrItem(pair);\r\n\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    if (!this.props.detail) return false;\r\n\r\n    const that = this;\r\n    const keyPropPairs = Object.entries(this.props.detail);\r\n\r\n\r\n    return keyPropPairs.map((pair, i) => {\r\n\r\n      if (i===0) return (\r\n        <>\r\n          { this.props.from ? <>\r\n            <span key={'from'} className=\"detail\">\r\n              From:\r\n            </span>\r\n            <span className=\"data\">\r\n              {this.props.from}\r\n            </span></>\r\n          : false }\r\n        </>\r\n      );\r\n\r\n      if (check.object(pair[1])) return that.createObjItem(pair);\r\n      if (check.array.of.object(pair[1])) return that.deconstructArr(pair);\r\n      if (check.boolean(pair[1])) return that.createBoolItem(pair);\r\n      if (moment(pair[1], moment.ISO_8601, true).isValid()) return that.createTimeItem(pair);\r\n\r\n      return (\r\n        <>\r\n          <span className=\"detail\">{pair[0]}: </span>\r\n          <span key={`${pair[0]}-${pair[1]}`} className=\"data\">{pair[1]}</span>\r\n        </>\r\n      )\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport default connect()(MessagePreview);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Collapsible from \"react-collapsible\";\r\nimport MessagePreview from \"../Components/MessagePreviewPlayerUi\";\r\n\r\nimport '../scss/App.scss';\r\n\r\nclass MessagesList extends Component {\r\n\r\n  render() {\r\n    let messages = this.props.messages.filter((item) => item.details.channel === this.props.curChannel);\r\n\r\n    return (\r\n      <>\r\n        {messages.map((item, i) => {\r\n          return (\r\n            <Collapsible\r\n              trigger={item.message.title}\r\n              transitionTime={200}\r\n              easing={'ease-in-out'}\r\n              open={i===0}\r\n            >\r\n              <div className=\"message-preview-player\"><MessagePreview key={i} detail={item.message} from={item.details.from.force} /></div>\r\n            </Collapsible>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = () => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps)(MessagesList);\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport JSONEditor from '@json-editor/json-editor';\r\nimport '../scss/App.scss';\r\n\r\nimport {\r\n  saveMessage,\r\n  getAllWargameMessages,\r\n} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\nclass JsonCreator extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.editor = null;\r\n    this.editorPreviewRef = React.createRef();\r\n\r\n    this.state = {\r\n      selectedSchema: ''\r\n    };\r\n  }\r\n\r\n  sendMessage = () => {\r\n\r\n    let messageDetails = {\r\n      channel: this.props.playerUi.selectedChannel,\r\n      from: {\r\n        force: this.props.playerUi.selectedForce,\r\n        role: this.props.selectedRole,\r\n      },\r\n    };\r\n\r\n    this.props.dispatch(saveMessage(this.props.playerUi.currentWargame, messageDetails, this.editor.getValue()));\r\n    this.props.dispatch(getAllWargameMessages(this.props.playerUi.currentWargame));\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n    if (this.editor) {\r\n      this.editor.destroy();\r\n      this.editor = null;\r\n    }\r\n\r\n    if (nextProps.schema && nextProps.schema.type) {\r\n        if (this.editor) return;\r\n\r\n        this.editor = new JSONEditor(this.editorPreviewRef.current, {\r\n          schema: nextProps.schema,\r\n          theme: 'bootstrap4'\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"preview-editor\" ref={this.editorPreviewRef}></div>\r\n        <button name=\"send\" className=\"btn btn-action btn-action--primary\" onClick={this.sendMessage}>Send</button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ playerUi }) => ({\r\n  playerUi\r\n});\r\n\r\nexport default connect(mapStateToProps)(JsonCreator);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Select from \"react-select\";\r\nimport '../scss/App.scss';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n  getMessageTemplate,\r\n} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\nimport MessageCreator from \"../Components/MessageCreator.jsx\";\r\n\r\nclass NewMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      template: {value: '', label: ''},\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n    if (this.props.curChannel !== nextProps.curChannel) {\r\n      this.setState({\r\n        template: {value: '', label: ''},\r\n      });\r\n    }\r\n  }\r\n\r\n  setTemplate = (val) => {\r\n    this.props.dispatch(getMessageTemplate(val.value));\r\n    this.setState({\r\n      template: val,\r\n    })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"\">\r\n        <Select\r\n          value={this.state.template}\r\n          options={this.props.templates}\r\n          onChange={this.setTemplate}\r\n        />\r\n        <MessageCreator schema={this.props.schema} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNewMessage.propTypes = {\r\n  templates: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = () => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps)(NewMessage);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {\r\n  getAllWargameMessages,\r\n  setChannel,\r\n  setMessageSchema,\r\n} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\nimport MessagesList from \"./MessagesList\";\r\nimport NewMessage from \"../Components/NewMessage\";\r\n\r\nimport '../scss/App.scss';\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n});\r\n\r\nclass MessageFeeds extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: 0,\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(getAllWargameMessages(this.props.playerUi.currentWargame));\r\n  }\r\n\r\n  handleChange = (event, value) => {\r\n\r\n    let channel = Object.keys(this.props.playerUi.channels)[value];\r\n\r\n    this.props.dispatch(setChannel(channel));\r\n    this.props.dispatch(setMessageSchema({}));\r\n\r\n    this.setState({ value });\r\n  };\r\n\r\n  createTabs = () => {\r\n\r\n    let channels = this.props.playerUi.channels;\r\n    let tabs = [];\r\n\r\n    for (let prop in channels) {\r\n      tabs.push(<Tab key={prop} label={prop} />)\r\n    }\r\n\r\n    return tabs;\r\n  };\r\n\r\n  createMessageList = (tab) => {\r\n\r\n    let curChannel= this.props.playerUi.selectedChannel;\r\n\r\n    return (\r\n      <TabContainer>\r\n        <MessagesList\r\n          curChannel={curChannel}\r\n          messages={this.props.playerUi.messages}\r\n        />\r\n\r\n        <NewMessage\r\n          curChannel={curChannel}\r\n          schema={this.props.playerUi.messageSchema}\r\n          templates={this.props.playerUi.channels[curChannel].templates}\r\n        />\r\n      </TabContainer>\r\n    )\r\n  };\r\n\r\n  render() {\r\n\r\n    const { value } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className={classes.root}>\r\n          <AppBar position=\"static\" color=\"default\">\r\n            <Tabs\r\n              value={value}\r\n              onChange={this.handleChange}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              centered\r\n            >\r\n              {this.createTabs()}\r\n            </Tabs>\r\n          </AppBar>\r\n          {this.createMessageList(value)}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ playerUi }) => ({\r\n  playerUi,\r\n});\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(MessageFeeds));\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport '../scss/App.scss';\r\nimport {\r\n  getWargame,\r\n  setForce,\r\n  setRole,\r\n  setFilteredChannels,\r\n  getAllMessages,\r\n} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\nimport MessageFeeds from \"./MessageFeeds\";\r\nimport DropdownInput from \"../Components/Inputs/DropdownInput\";\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass PlayerUi extends Component {\r\n\r\n  // componentWillMount() {\r\n  //   this.props.dispatch(getAllMessages());\r\n  // }\r\n\r\n  updateSelectedWargame = (wargamePath) => {\r\n    this.props.dispatch(getWargame(wargamePath));\r\n  };\r\n\r\n  updateSelectedForce = (force) => {\r\n    this.props.dispatch(setForce(force));\r\n  };\r\n\r\n  updateSelectedRole = (role) => {\r\n    this.props.dispatch(setRole(role));\r\n    this.props.dispatch(setFilteredChannels());\r\n  };\r\n\r\n  goBack = () => {\r\n    this.props.dispatch(setForce(\"\"));\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"flex-content-wrapper\">\r\n\r\n        <div className=\"flex-content flex-content--fill\">\r\n\r\n          {!this.props.playerUi.currentWargame ?\r\n            <div className=\"flex-content--center\">\r\n              <h1>Set wargame</h1>\r\n              <DropdownInput\r\n                updateStore={this.updateSelectedWargame}\r\n                selectOptions={this.props.wargame.wargameList.map((wargame) => ({option: wargame.title, value: wargame.name}))}\r\n              />\r\n            </div>\r\n            : false\r\n          }\r\n\r\n          {this.props.playerUi.currentWargame && !this.props.playerUi.selectedForce ?\r\n            <div className=\"flex-content--center\">\r\n              <h1>Set force</h1>\r\n              <DropdownInput\r\n                updateStore={this.updateSelectedForce}\r\n                selectOptions={Object.keys(this.props.playerUi.allForces).map((force) => ({option: force, value: force}))}\r\n              />\r\n            </div>\r\n            : false\r\n          }\r\n\r\n          {this.props.playerUi.selectedForce && !this.props.playerUi.selectedRole ?\r\n            <div className=\"flex-content--center\">\r\n              <h1>Set role</h1>\r\n              <FontAwesomeIcon icon={faArrowLeft} size=\"2x\" style={{cursor: 'pointer'}} onClick={this.goBack} />\r\n              <DropdownInput\r\n                updateStore={this.updateSelectedRole}\r\n                selectOptions={this.props.playerUi.allForces[this.props.playerUi.selectedForce].roles.map((role) => ({option: role, value: role}))}\r\n              />\r\n            </div>\r\n            : false\r\n          }\r\n\r\n          {this.props.playerUi.selectedForce && this.props.playerUi.selectedRole ?\r\n\r\n            <div className=\"message-feeds\">\r\n              <MessageFeeds />\r\n            </div>\r\n            : false\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ playerUi, wargame }) => ({\r\n  playerUi,\r\n  wargame,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PlayerUi);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport UniversalRouter from \"universal-router\";\r\n\r\nimport ChooseInterface from \"../Views/ChooseInterface\";\r\nimport GameDesignerInterface from '../Views/GameDesignerInterface';\r\nimport UmpireMenu from '../Views/UmpireMenu';\r\nimport EditMessage from '../Views/EditMessage';\r\nimport CreateMessage from '../Views/CreateMessage';\r\nimport EditTemplate from '../Views/EditTemplate';\r\nimport CreateTemplate from '../Views/CreateTemplate';\r\nimport GameSetup from \"../Views/GameSetup\";\r\nimport PlayerUi from \"../Views/PlayerUi\";\r\n\r\nimport '../scss/App.scss';\r\n\r\nclass Router extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.routes = [\r\n      { path: '/client/', action: () => <ChooseInterface /> },\r\n      { path: '/client/umpireMenu', action: () => <GameDesignerInterface/> },\r\n      { path: '/client/umpireMenu/:creatorType', action: () => <UmpireMenu /> },\r\n      { path: '/client/messageCreator', children: [\r\n          { path: '/create/template', action: () => <CreateTemplate /> },\r\n          { path: '/edit/template', action: () => <EditTemplate /> },\r\n          { path: '/create/message', action: () => <CreateMessage /> },\r\n          { path: '/edit/message', action: () => <EditMessage /> },\r\n        ]\r\n      },\r\n      { path: '/client/gameSetup', action: () => <GameSetup /> },\r\n      { path: '/client/playerUi', action: () => <PlayerUi /> },\r\n    ];\r\n\r\n    // let currentPath = new URL(window.location.href).pathname;\r\n\r\n    this.state = {\r\n      currentView: <ChooseInterface />\r\n    };\r\n\r\n    this.router = new UniversalRouter(this.routes);\r\n\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n    this.router.resolve({ pathname: nextProps.currentViewURI }).then(result => {\r\n      this.setState({\r\n        currentView: result,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        { this.state.currentView }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ currentViewURI }) => ({\r\n  currentViewURI\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(Router);\r\n","export default function deepCopy(objectpassed) {\r\n\r\n  // arrays return \"object\" in js so any object or array will be looped to copy deeply.\r\n  // strings, numbers and booleans are deep copied naturally, while any objects within arrays or objects\r\n  // or objects within arrays are only copied shallowly.\r\n  if (objectpassed === null || typeof objectpassed !== 'object') {\r\n    return objectpassed;\r\n  }\r\n\r\n  var temporaryStorage = objectpassed.constructor();\r\n\r\n  for (var key in objectpassed) {\r\n    temporaryStorage[key] = deepCopy((objectpassed[key]));\r\n  }\r\n  return temporaryStorage;\r\n}","import ActionConstant from '../ActionConstants';\r\nimport copyState from \"../copyStateHelper.js\";\r\n\r\nvar initialState = {\r\n  isLoading: false,\r\n  messages: [],\r\n};\r\n\r\nexport const messageTypesReducer = (state = initialState, action) => {\r\n\r\n  var newState = copyState(state);\r\n\r\n  switch (action.type) {\r\n    case ActionConstant.DB_MESSAGE_TYPES_GET:\r\n      newState.isLoading = action.isLoading;\r\n      return newState;\r\n\r\n    case ActionConstant.DB_MESSAGE_TYPES_SAVED:\r\n      newState.messages = action.payload;\r\n      return newState;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};","import ActionConstant from '../ActionConstants';\r\nimport copyState from \"../copyStateHelper.js\";\r\n\r\nvar initialState = {\r\n  isLoading: false,\r\n  messages: [],\r\n  messagePreviewId: '',\r\n  messagePreview: {}\r\n};\r\n\r\nexport const messagesReducer = (state = initialState, action) => {\r\n\r\n  // redux works on the principle of keeping your data immutable.\r\n  // directly editing the state will cause an error, it leaves immutability up to you,\r\n  // the simplest solution with smallest footprint I've found so far is to use this deepCopy helper I found online.\r\n  var newState = copyState(state);\r\n\r\n  switch (action.type) {\r\n    case ActionConstant.DB_MESSAGES_GET:\r\n      newState.isLoading = action.isLoading;\r\n      return newState;\r\n\r\n    case ActionConstant.DB_MESSAGE_SAVED:\r\n      newState.messages = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.DB_RETURNED_MESSAGE:\r\n      newState.messagePreviewId = action.payload._id;\r\n      newState.messagePreview = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.RESET_MESSAGE_PREVIEW:\r\n      newState.messagePreviewId = '';\r\n      newState.messagePreview = {};\r\n      return newState;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};","import ActionConstant from '../ActionConstants';\r\nimport deepCopy from \"../copyStateHelper.js\";\r\n\r\nconst initialState = {\r\n  selectedSchemaID: '',\r\n  previewSchema: {}\r\n};\r\n\r\nexport const umpireMenuReducer = (state = initialState, action) => {\r\n\r\n  let newState = deepCopy(state);\r\n\r\n  switch (action.type) {\r\n    case ActionConstant.SET_SELECTED_SCHEMA:\r\n      newState.selectedSchemaID = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.SET_PREVIEW_SCHEMA:\r\n      newState.previewSchema = action.payload;\r\n      return newState;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};","import ActionConstant from '../ActionConstants';\r\nimport copyState from \"../copyStateHelper.js\";\r\nimport _ from \"lodash\";\r\nimport uniqId from \"uniqid\";\r\n\r\nimport {\r\n  forceTemplate,\r\n  channelTemplate,\r\n} from \"../../api/consts\";\r\n\r\nvar initialState = {\r\n  isLoading: false,\r\n  wargameList: [],\r\n  currentWargame: '',\r\n  wargameTitle: '',\r\n  validation: {\r\n    validWargameName: true,\r\n  },\r\n  tabs: {\r\n    0: {\r\n      name: \"Overview - settings\",\r\n      data: {\r\n        gameDescription: '',\r\n        spatialRepresentation: '',\r\n        planningInterval: null,\r\n        replayInterval: null,\r\n        turnStrategy: '',\r\n      },\r\n      complete: false,\r\n    },\r\n    // 1: {\r\n    //   name: \"Platform Types\",\r\n    //   complete: false,\r\n    // },\r\n    1: {\r\n      name: \"Forces\",\r\n      data: {\r\n        // forces: {'white': forceTemplate},\r\n        forces: {},\r\n        selectedForce: '',\r\n        roles: [],\r\n      },\r\n      complete: false,\r\n    },\r\n    // 3: {\r\n    //   name: \"Back history\",\r\n    //   complete: false,\r\n    // },\r\n    // 4: {\r\n    //   name: \"Positions\",\r\n    //   complete: false,\r\n    // },\r\n    2: {\r\n      name: \"Channels\",\r\n      data: {\r\n        // channels: {'white weather': channelTemplate},\r\n        channels: {},\r\n        selectedChannel: '',\r\n      },\r\n      complete: false,\r\n    },\r\n    // 6: {\r\n    //   name: \"Play control\",\r\n    //   complete: false,\r\n    // },\r\n  },\r\n  currentTab: 0\r\n};\r\n\r\nexport const wargamesReducer = (state = initialState, action) => {\r\n\r\n  let newState = copyState(state);\r\n\r\n  let tab = newState.currentTab;\r\n\r\n  let curChannel;\r\n  let recipientIndex;\r\n\r\n  switch (action.type) {\r\n\r\n    case ActionConstant.ALL_WARGAME_NAMES_SAVED:\r\n      newState.wargameList = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.SET_CURRENT_WARGAME:\r\n      newState.currentWargame = action.payload.name;\r\n      newState.wargameTitle = action.payload.wargameTitle;\r\n      newState.tabs = action.payload.tabs;\r\n      return newState;\r\n\r\n    case ActionConstant.SET_WARGAME_NAME:\r\n\r\n      let listWithoutThis = [];\r\n\r\n      newState.wargameList.forEach((game) => {\r\n        if (game.name !== newState.currentWargame) listWithoutThis.push(game);\r\n      });\r\n\r\n      let uniqueName = listWithoutThis.every((wargame) => wargame.title !== action.payload );\r\n\r\n      newState.validation.validWargameName = uniqueName;\r\n      newState.wargameTitle = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.SET_CURRENT_GAME_SETUP_TAB:\r\n      newState.currentTab = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_GAME_SETUP_DATA:\r\n      newState.tabs[tab].data = {...newState.tabs[tab].data, ...action.payload};\r\n      break;\r\n\r\n    case ActionConstant.ADD_NEW_FORCE:\r\n      newState.tabs[tab].data.forces[action.payload] = forceTemplate;\r\n      break;\r\n\r\n    case ActionConstant.SET_SELECTED_FORCE:\r\n      newState.tabs[tab].data.selectedForce = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.ADD_NEW_CHANNEL:\r\n      newState.tabs[tab].data.channels[action.payload] = channelTemplate;\r\n      break;\r\n\r\n    case ActionConstant.SET_SELECTED_CHANNEL:\r\n      newState.tabs[tab].data.selectedChannel = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_FORCE_OVERVIEW:\r\n      let selected = newState.tabs[tab].data.selectedForce;\r\n      newState.tabs[tab].data.forces[selected].overview = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.ADD_NEW_RECIPIENT:\r\n      curChannel = newState.tabs[tab].data.selectedChannel;\r\n      let newParticipant = {...action.payload, subscriptionId: uniqId.time()};\r\n      newState.tabs[tab].data.channels[curChannel].push(newParticipant);\r\n      break;\r\n\r\n    case ActionConstant.UPDATE_RECIPIENT:\r\n      curChannel = newState.tabs[tab].data.selectedChannel;\r\n      recipientIndex = newState.tabs[tab].data.channels[curChannel].findIndex((recipient) => recipient.subscriptionId === action.payload.id);\r\n      newState.tabs[tab].data.channels[curChannel].splice(recipientIndex, 1, {...action.payload.data, subscriptionId: action.payload.id});\r\n      break;\r\n\r\n    case ActionConstant.REMOVE_RECIPIENT:\r\n      curChannel = newState.tabs[tab].data.selectedChannel;\r\n      recipientIndex = newState.tabs[tab].data.channels[curChannel].findIndex((recipient) => recipient.subscriptionId === action.payload);\r\n      newState.tabs[tab].data.channels[curChannel].splice(recipientIndex, 1);\r\n      break;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n\r\n  let flatten = (n) => {\r\n    if (_.isEmpty(n)) return null; // force show empty array\r\n    return (_.isArray(n) || _.isObject(n)) ? _.flatMapDeep(n, flatten) : n;\r\n  };\r\n\r\n  let inputResults = _.flatMapDeep(newState.tabs[tab].data, flatten);\r\n\r\n  newState.tabs[tab].complete = inputResults.every((item) => item !== null && item.length > 0);\r\n\r\n  return newState;\r\n};\r\n","import ActionConstant from '../ActionConstants.js';\r\nimport copyState from \"../copyStateHelper.js\";\r\n\r\nconst initialState = {\r\n  open: false,\r\n  message: '',\r\n};\r\n\r\nexport const notificationReducer = (state = initialState, action) => {\r\n\r\n    let newState = copyState(state);\r\n\r\n    switch (action.type) {\r\n      case ActionConstant.SHOW_NOTIFICATION:\r\n        newState = action.payload;\r\n        return newState;\r\n\r\n      case ActionConstant.HIDE_NOTIFICATION:\r\n        newState = action.payload;\r\n        return newState;\r\n\r\n      default:\r\n        return newState;\r\n    }\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\nimport copyState from \"../../Helpers/copyStateHelper\";\r\nimport _ from \"lodash\";\r\n\r\nconst initialState = {\r\n  selectedForce: '',\r\n  selectedRole: '',\r\n  selectedChannel: '',\r\n  currentWargame: '',\r\n  wargameTitle: '',\r\n  channels: {},\r\n  allChannels: {},\r\n  forces: {},\r\n  allForces: {},\r\n  messageSchema: {},\r\n  messages: [],\r\n};\r\n\r\nexport const playerUiReducer = (state = initialState, action) => {\r\n\r\n  let newState = copyState(state);\r\n\r\n  switch (action.type) {\r\n\r\n    case ActionConstant.SET_CURRENT_WARGAME_PLAYER:\r\n\r\n      newState.currentWargame = action.payload.name;\r\n      newState.wargameTitle = action.payload.wargameTitle;\r\n\r\n      let channelsTab = Object.values(action.payload.tabs).find((obj) => obj.name === \"Channels\");\r\n      newState.allChannels = channelsTab.data.channels;\r\n\r\n      let forcesTab = Object.values(action.payload.tabs).find((obj) => obj.name === \"Forces\");\r\n      newState.allForces = forcesTab.data.forces;\r\n      break;\r\n\r\n    case ActionConstant.SET_FORCE:\r\n      newState.selectedForce = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_ROLE:\r\n      newState.selectedRole = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_FILTERED_CHANNELS:\r\n\r\n      let channels = {};\r\n      for (let channel in newState.allChannels) {\r\n\r\n        let channelParticipants = newState.allChannels[channel].filter((recipient) => recipient.force === newState.selectedForce && recipient.role === newState.selectedRole);\r\n        let channelActive = newState.allChannels[channel].some((recipient) => recipient.force === newState.selectedForce && recipient.role === newState.selectedRole);\r\n\r\n        // only allow unique participants in gameSetup but check here also\r\n        channelParticipants = _.uniqWith(channelParticipants, _.isEqual);\r\n\r\n        if (channelActive) {\r\n          channels[channel] = {\r\n            templates: _.flatMap(channelParticipants, (participant) => participant.templates),\r\n            messages: []\r\n          };\r\n        }\r\n      }\r\n      newState.selectedChannel = Object.keys(channels)[0];\r\n      newState.channels = channels;\r\n      break;\r\n\r\n    case ActionConstant.SET_CHANNEL:\r\n      newState.selectedChannel = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_MESSAGE_SCHEMA:\r\n      newState.messageSchema = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_LATEST_MESSAGES:\r\n      newState.messages = action.payload;\r\n      break;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n\r\n  return newState;\r\n};\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport { messageTypesReducer } from \"../ActionsAndReducers/dbMessageTypes/messageTypes_Reducer\";\r\nimport { messagesReducer } from \"../ActionsAndReducers/dbMessages/messages_Reducer\";\r\nimport { currentModal } from \"../ActionsAndReducers/Modal/Modal_Reducer\";\r\nimport { currentViewURIReducer } from \"../ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_Reducer\";\r\nimport { umpireMenuReducer } from \"../ActionsAndReducers/UmpireMenu/umpireMenu_Reducer\";\r\nimport { wargamesReducer } from \"../ActionsAndReducers/dbWargames/wargames_Reducer\";\r\nimport { notificationReducer } from \"../ActionsAndReducers/Notification/Notification_Reducer\";\r\nimport { playerUiReducer } from \"../ActionsAndReducers/playerUi/playerUi_Reducer\";\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\nconst middlewares = [thunk];\r\n\r\nif (process.env.NODE_ENV === `development`) {\r\n  const { logger } = require(`redux-logger`);\r\n  middlewares.push(logger);\r\n}\r\n\r\nexport default createStore(combineReducers({\r\n  messageTypes: messageTypesReducer,\r\n  messages: messagesReducer,\r\n  umpireMenu: umpireMenuReducer,\r\n  currentViewURI: currentViewURIReducer,\r\n  currentModal,\r\n  notification: notificationReducer,\r\n  wargame: wargamesReducer,\r\n  playerUi: playerUiReducer,\r\n}), applyMiddleware(...middlewares));\r\n","import ActionConstant from '../ActionConstants';\r\n\r\nexport const currentViewURIReducer = (state = '/', action) => {\r\n\r\n  let newState = state;\r\n\r\n  switch (action.type) {\r\n    case ActionConstant.SET_CURRENT_VIEW_FROM_URI:\r\n      window.history.pushState({}, '', action.payload);\r\n      newState = action.payload;\r\n      return newState;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};","import ActionConstant from '../ActionConstants.js';\r\nimport copyState from \"../copyStateHelper.js\";\r\n\r\nexport const currentModal = (state = {}, action) => {\r\n\r\n    let newState = copyState(state);\r\n\r\n    switch (action.type) {\r\n      case ActionConstant.OPEN_MODAL:\r\n          newState = action.payload;\r\n          return newState;\r\n        case ActionConstant.CLOSE_MODAL:\r\n          newState = action.payload;\r\n          return newState;\r\n        default:\r\n          newState = {};\r\n          return newState;\r\n    }\r\n};\r\n","export default function deepCopy(objectpassed) {\r\n\r\n  // arrays return \"object\" in js so any object or array will be looped to copy deeply.\r\n  // strings, numbers and booleans are deep copied naturally, while any objects within arrays or objects\r\n  // or objects within arrays are only copied shallowly.\r\n  if (objectpassed === null || typeof objectpassed !== 'object') {\r\n    return objectpassed;\r\n  }\r\n\r\n  var temporaryStorage = objectpassed.constructor();\r\n\r\n  for (var key in objectpassed) {\r\n    temporaryStorage[key] = deepCopy((objectpassed[key]));\r\n  }\r\n  return temporaryStorage;\r\n}","import React, { Component } from 'react';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport ModalSwitch from \"./Components/Modals/ModalSwitch\";\r\nimport Notification from \"./Components/Notification\";\r\n\r\nimport Router from \"./Components/Router\";\r\n\r\nimport './scss/App.scss';\r\nimport Store from './Store/Store';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    document.title = \"Serge\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Provider store={Store}>\r\n          <Router />\r\n          <ModalSwitch />\r\n          <Notification />\r\n        </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}