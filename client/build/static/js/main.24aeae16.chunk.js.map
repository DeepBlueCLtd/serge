{"version":3,"sources":["ActionsAndReducers/ActionConstants.js","ActionsAndReducers/Modal/Modal_ActionCreators.js","Components/Modals/ModalWrapper.jsx","pouchDB/consts.js","api/wargames_api.js","ActionsAndReducers/dbWargames/wargames_ActionCreators.js","Components/Modals/AddForceModal.jsx","api/messages_api.js","ActionsAndReducers/Notification/Notification_ActionCreators.js","ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_ActionCreators.js","ActionsAndReducers/dbMessages/messages_ActionCreators.js","api/messageTypes_api.js","ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators.js","ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators.js","Components/Modals/DeleteModal.jsx","Components/Modals/AddChannelModal.jsx","Components/Modals/ModalSwitch.jsx","Components/Notification.jsx","Components/Link.jsx","Views/ChooseInterface.jsx","Components/WargameSearchList.jsx","Views/GameDesignerInterface.jsx","Components/JsonCreator.jsx","Components/MessagePreview.jsx","Components/ValidationNotification.jsx","Components/Inputs/TextInput.jsx","Components/SearchList.jsx","Views/UmpireMenu.jsx","Components/JsonEditor.jsx","Views/EditMessage.jsx","Views/CreateMessage.jsx","Components/jsonSchemaEditor/json-schema-editor/editor.js","Components/jsonSchemaEditor/jsonEditor.js","Components/jsonSchemaEditor/editorPreview.js","Components/jsonSchemaEditor/index.js","Views/EditTemplate.jsx","Views/CreateTemplate.jsx","Components/Inputs/DropdownInput.jsx","Components/Layout/Row.jsx","Components/Inputs/TextArea.jsx","Views/TabViews/SettingsTab.jsx","Components/TabsSearchList.jsx","Components/Layout/RemovableGroupItem.jsx","Views/TabViews/ForcesTab.jsx","Components/Layout/EditSubscriptionRow.jsx","Components/Layout/ChannelsTable.jsx","Views/TabViews/ChannelsTab.jsx","Views/TabbedView.jsx","Components/ProgressBar/ProgressBar.jsx","Views/GameSetup.jsx","ActionsAndReducers/playerUi/playerUi_ActionCreators.js","Views/MessagesList.jsx","Components/MessageCreator.jsx","Components/NewMessage.jsx","Views/MessageFeeds.jsx","Views/PlayerUi.jsx","Components/Router.jsx","ActionsAndReducers/copyStateHelper.js","ActionsAndReducers/dbMessageTypes/messageTypes_Reducer.js","ActionsAndReducers/dbMessages/messages_Reducer.js","ActionsAndReducers/UmpireMenu/umpireMenu_Reducer.js","ActionsAndReducers/dbWargames/wargames_Reducer.js","ActionsAndReducers/Notification/Notification_Reducer.js","ActionsAndReducers/playerUi/playerUi_Reducer.js","Store/Store.jsx","ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_Reducer.js","ActionsAndReducers/Modal/Modal_Reducer.js","Helpers/copyStateHelper.js","App.jsx","index.jsx"],"names":["Object","freeze","ASYNC_SUCCESS","ASYNC_ERROR","ASYNC_LOADING","NORMAL_ACTION","DB_MESSAGE_STATUS","DB_MESSAGE_CREATION_LOADING","DB_MESSAGE_GET_LOADING","DB_SAVE_MESSAGES","DB_MESSAGE_TYPES_GET","DB_MESSAGE_TYPES_SAVED","SET_CURRENT_VIEW_FROM_URI","DB_MESSAGE_SAVED","DB_MESSAGES_GET","DB_RETURNED_MESSAGE","RESET_MESSAGE_PREVIEW","SET_SELECTED_SCHEMA","SET_PREVIEW_SCHEMA","OPEN_MODAL","CLOSE_MODAL","SET_CURRENT_GAME_SETUP_TAB","SET_GAME_SETUP_DATA","ALL_WARGAME_NAMES_SAVED","SET_CURRENT_WARGAME","ADD_NEW_FORCE","SET_SELECTED_FORCE","ADD_NEW_CHANNEL","SET_SELECTED_CHANNEL","SET_WARGAME_NAME","SET_FORCE_OVERVIEW","GAME_TITLE_INVALID","ADD_NEW_RECIPIENT","SHOW_NOTIFICATION","HIDE_NOTIFICATION","UPDATE_RECIPIENT","REMOVE_RECIPIENT","SET_CURRENT_WARGAME_PLAYER","SET_FORCE","SET_ROLE","SET_FILTERED_CHANNELS","SET_CHANNEL","SET_MESSAGE_SCHEMA","SET_LATEST_MESSAGES","modalAction","open","openModal","type","ActionConstant","payload","modal","close","ModalWrapper","handleBackgroundClick","e","target","currentTarget","_this","props","dispatch","setSize","this","editable","react_default","a","createElement","className","onClick","children","Component","connect","apiPath","headers","Content-Type","Access-Control-Allow-Origin","Access-Control-Allow-Methods","Access-Control-Allow-Headers","forceTemplate","overview","roles","channelTemplate","populateWargame","fetch","concat","then","response","ok","Error","statusText","json","data","catch","err","console","log","editWargame","name","method","body","JSON","stringify","res","updateWargame","dbName","title","localDoc","duplicateWargame","games","getWargame","postNewMessage","channel","message","Promise","resolve","reject","getAllMessages","id","setCurrentTab","tab","setGameData","setWargameTitle","addNewForce","setSelectedForce","addNewChannel","setSelectedChannel","setForceOverview","saveAllWargameNames","names","setCurrentWargame","addRecipientToChannel","updateRecipient","createNewWargameDB","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","wargame","wrap","_context2","prev","next","sent","_","omit","stop","_x2","apply","arguments","_ref4","_callee4","_context4","wargamesApi","_x4","AddForceModal","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hideModal","setState","forceName","setNewForceName","value","sameName","tabs","currentTab","forces","addForce","state","currentModal","disable","length","Modals_ModalWrapper","autoFocus","onChange","disabled","_ref","addMessage","schema","duplicateMessageInDb","getAllMessagesFromDb","updateMessageInDb","getMessage","deleteMessageFromDb","showNotification","hideNotification","setCurrentViewFromURI","path","DBMessageSaveStatus","status","DBSaveMessageArray","messages","DBSaveMessagePreview","loadingDBMessageCreate","isLoading","loadingDBMessageGet","resetMessagePreview","createMessage","check","object","_callee","result","_context","messagesApi","t0","alert","_x","duplicateMessage","messageId","string","updateMessage","_ref3","_callee3","responses","_message","_context3","all","toConsumableArray","_x3","deleteMessage","_ref5","getSingleMessage","_ref6","_callee5","_context5","_x5","createMessageType","messageTypesApi","duplicateMessageType","updateMessageType","allMessages","deleteMessageType","getAllMessageTypes","setSelectedSchema","schemaId","setPreviewSchema","DeleteModal","currentViewURI","umpireMenu","selectedSchemaID","messagePreviewId","AddChannelModal","channelName","setChannelName","channels","addChannel","ModalSwitch","Modals_AddForceModal","Modals_DeleteModal","Modals_AddChannelModal","Fragment","Notification","onClickHandler","notification","react_fontawesome_index_es","icon","faTimes","Link","onClickMethod","aNewTab","metaKey","ctrlKey","anExternalLink","href","startsWith","preventDefault","class","UmpireMenu","Components_Link","objectDestructuringEmpty","WargameSearchList","filterMessages","input","searchInput","searchQuery","listData","filter","db","toLowerCase","indexOf","displayControls","activeTitle","hideControls","messageList","nextProps","nextState","nextContext","sameMessagesQuantity","difference","that","list","key","placeholder","map","onMouseOver","bind","onMouseLeave","faPencilAlt","setSelectedWargame","faClone","GameDesignerInterface","createWargame","wargameNames","Components_WargameSearchList","wargameList","JsonCreator","saveMessage","messageTypes","find","mes","_id","details","editor","getValue","objectSpread","editorPreviewRef","React","createRef","selectedSchema","destroy","JSONEditor","current","theme","setValue","faSave","ref","MessagePreview","pair","deconstructObj","moment","format","withoutName","item","obj","entries","i","createObjItem","array","of","deconstructArr","boolean","createBoolItem","ISO_8601","isValid","createTimeItem","createStrItem","detail","ValidationNotification","TextInput","updateStore","options","numInput","invalid","validInput","Components_ValidationNotification","SearchList","setSelected","active","selected","date","lastUpdated","classNames","searchlist-title","setSelectedSchemaId","creatorType","newState","duplicateTemplate","deleteTemplate","split","buildMessageBoard","setTimeout","_ref7","_callee6","_context6","_x6","faPlus","Components_SearchList","faTrash","faArrowLeft","size","createSearchListSection","Components_JsonCreator","previewForm","Components_MessagePreview","messagePreview","createTemplatesActions","createMessagesActions","EditMessage","messageToEdit","JsonEditor","Editor","elementId","jsonEditor","renderZone","document","getElementById","PreviewEditor","SchemaEditor","isObjectPropertiesButton","node","matches","span","parentElement","querySelector","innerText","observer","MutationObserver","mutationsList","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","addedNodes","forEach","nodeType","classList","remove","add","return","observe","childList","subtree","prototype","updateSchema","validate","getJSON","create","defineProperty","enumerable","writable","no_additional_properties","custom_validators","errors","minimum","maximum","push","property","on","button","root","getButton","button_holder","getHeaderButtonHolder","appendChild","header","parentNode","insertBefore","nextSibling","addEventListener","contents","blob","Blob","window","navigator","msSaveOrOpenBlob","download","URL","createObjectURL","dataset","downloadurl","join","dispatchEvent","MouseEvent","view","bubbles","cancelable","JsonSchemaEditor","content","schemaEditor","editorBox","assertThisInitialized","updateEditor","saved","defaultValue","newValue","newJson","save","counter","defaults","object_layout","layout","booleanOptions","Card","CardHeader","CardBody","CardFooter","EditorPreview","previewBox","editorPreview","iconlib","updateMetaSchema","updatePreviewSchema","updateOptions","properties","Date","Status","enum","Description","metaSchema","jsonMetaSchema","previewSchema","metaschema","jsonSchemaEditor","saveSchema","DropdownInput","selectOptions","opt","Row","TextArea","style","resize","SettingsTab","updateDescription","gameDescription","updateSpatialRepresentation","spatialRepresentation","updatePlanningInterval","planningInterval","updateReplayInterval","replayInterval","updateTurnStrategy","turnStrategy","Inputs_TextArea","Layout_Row","Inputs_DropdownInput","Inputs_TextInput","TabsSearchList","prop","unshift","list-title","createList","RemovableGroupItem","ForcesTab","force","updateOverview","curTab","selectedForce","role","Layout_RemovableGroupItem","Components_TabsSearchList","createForceEditor","EditSubscriptionRow","updateSubscriptionForce","option","editSubscriptionForce","updateSubscriptionRole","editSubscriptionRole","updateSubscriptionTemplates","editSubscriptionTemplates","updateChannel","subscriptionData","label","templates","subscriptionId","cancelEdit","react_select_esm","forceOptions","roleOptions","templateOptions","isMulti","ChannelsTable","subscriptionToEdit","setSelectedRole","selectedRole","setSelectedTemplate","selectedTemplates","addToChannel","channelData","values","d","messageType","row","removeSubscription","editSubscription","_this2","Layout_EditSubscriptionRow","createRow","isDisabled","filterChannels","channelList","curPropsState","keys","nextPropsState","selectedChannel","Layout_ChannelsTable","createChannelEditor","TabContainer","Typography","component","padding","TabbedView","handleChange","event","invalidFields","classes","AppBar","position","color","Tabs","indicatorColor","textColor","centered","tabName","Tab","TabViews_SettingsTab","TabViews_ForcesTab","ChannelsTab","validation","withStyles","flexGrow","backgroundColor","palette","background","paper","ProgressBar","GameSetup","updateWargameTitle","saveWargame","checkAllValid","currentWargame","wargameTitle","reduce","entry","parseInt","completed","complete","progress-indicator--active","progress-indicator--complete","validWargameName","link","link--noIcon","link--disabled","Components_ProgressBar_ProgressBar","createIndicators","Views_TabbedView","setForce","setRole","setFilteredChannels","setChannel","setMessageSchema","setWargameMessages","getMessageTemplate","template","messageTemplatesApi","MessagesList","curChannel","sendMessage","allChannels","uniqBy","flatMap","isEqual","to","from","NewMessage","setTemplate","val","MessageCreator","MessageFeeds","playerUi","createTabs","createMessageList","MessageFeeds_TabContainer","Views_MessagesList","Components_NewMessage","messageSchema","PlayerUi","updateSelectedForce","updateSelectedRole","goBack","allForces","cursor","Views_MessageFeeds","Router","routes","action","ChooseInterface","Views_GameDesignerInterface","Views_UmpireMenu","CreateTemplate","EditTemplate","CreateMessage","Views_EditMessage","Views_GameSetup","Views_PlayerUi","currentView","router","UniversalRouter","pathname","deepCopy","objectpassed","temporaryStorage","constructor","initialState","0","1","2","middlewares","thunk","createStore","combineReducers","copyState","history","pushState","listWithoutThis","game","uniqueName","every","newParticipant","uniqId","time","recipientIndex","findIndex","recipient","splice","inputResults","flatMapDeep","flatten","n","isEmpty","isArray","isObject","channelsTab","forcesTab","channelParticipants","channelActive","some","uniqWith","participant","applyMiddleware","App","es","store","Store","Components_Router","Modals_ModalSwitch","Components_Notification","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.24aeae16.chunk.js","sourcesContent":["export default Object.freeze({\r\n  ASYNC_SUCCESS: 'ASYNC_SUCCESS',\r\n  ASYNC_ERROR: 'ASYNC_ERROR',\r\n  ASYNC_LOADING: 'ASYNC_LOADING',\r\n  NORMAL_ACTION: 'NORMAL_ACTION',\r\n  DB_MESSAGE_STATUS: 'DB_MESSAGE_STATUS',\r\n  DB_MESSAGE_CREATION_LOADING:  'DB_MESSAGE_CREATION_LOADING',\r\n  DB_MESSAGE_GET_LOADING: 'DB_MESSAGE_GET_LOADING',\r\n  DB_SAVE_MESSAGES: 'DB_SAVE_MESSAGES',\r\n  DB_MESSAGE_TYPES_GET: 'DB_MESSAGE_TYPES_GET',\r\n  DB_MESSAGE_TYPES_SAVED: 'DB_MESSAGE_TYPES_SAVED',\r\n  SET_CURRENT_VIEW_FROM_URI: 'SET_CURRENT_VIEW_FROM_URI',\r\n  DB_MESSAGE_SAVED: 'DB_MESSAGE_SAVED',\r\n  DB_MESSAGES_GET: 'DB_MESSAGES_GET',\r\n  DB_RETURNED_MESSAGE: 'DB_RETURNED_MESSAGE',\r\n  RESET_MESSAGE_PREVIEW: 'RESET_MESSAGE_PREVIEW',\r\n  SET_SELECTED_SCHEMA: 'SET_SELECTED_SCHEMA',\r\n  SET_PREVIEW_SCHEMA: 'SET_PREVIEW_SCHEMA',\r\n  OPEN_MODAL: 'OPEN_MODAL',\r\n  CLOSE_MODAL: 'CLOSE_MODAL',\r\n  SET_CURRENT_GAME_SETUP_TAB: 'SET_CURRENT_GAME_SETUP_TAB',\r\n  SET_GAME_SETUP_DATA: 'SET_GAME_SETUP_DATA',\r\n  ALL_WARGAME_NAMES_SAVED: 'ALL_WARGAME_NAMES_SAVED',\r\n  SET_CURRENT_WARGAME: 'SET_CURRENT_WARGAME',\r\n  ADD_NEW_FORCE: 'ADD_NEW_FORCE',\r\n  SET_SELECTED_FORCE: 'SET_SELECTED_FORCE',\r\n  ADD_NEW_CHANNEL: 'ADD_NEW_CHANNEL',\r\n  SET_SELECTED_CHANNEL: 'SET_SELECTED_CHANNEL',\r\n  SET_WARGAME_NAME: 'SET_WARGAME_NAME',\r\n  SET_FORCE_OVERVIEW: 'SET_FORCE_OVERVIEW',\r\n  GAME_TITLE_INVALID: 'GAME_TITLE_INVALID',\r\n  ADD_NEW_RECIPIENT: 'ADD_NEW_RECIPIENT',\r\n  SHOW_NOTIFICATION: 'SHOW_NOTIFICATION',\r\n  HIDE_NOTIFICATION: 'HIDE_NOTIFICATION',\r\n  UPDATE_RECIPIENT: 'UPDATE_RECIPIENT',\r\n  REMOVE_RECIPIENT: 'REMOVE_RECIPIENT',\r\n  SET_CURRENT_WARGAME_PLAYER: 'SET_CURRENT_WARGAME_PLAYER',\r\n  SET_FORCE: 'SET_FORCE',\r\n  SET_ROLE: 'SET_ROLE',\r\n  SET_FILTERED_CHANNELS: 'SET_FILTERED_CHANNELS',\r\n  SET_CHANNEL: 'SET_CHANNEL',\r\n  SET_MESSAGE_SCHEMA: 'SET_MESSAGE_SCHEMA',\r\n  SET_LATEST_MESSAGES: 'SET_LATEST_MESSAGES',\r\n});\r\n","import ActionConstant from '../ActionConstants.js';\r\n\r\nexport const modalAction = {\r\n  open: (openModal) => ({\r\n    type: ActionConstant.OPEN_MODAL,\r\n    payload: {\r\n      open: true,\r\n      modal: openModal,\r\n    },\r\n  }),\r\n\r\n  close: () => ({\r\n    type: ActionConstant.CLOSE_MODAL,\r\n    payload: {\r\n      open: false,\r\n      modal: '',\r\n    },\r\n  })\r\n};\r\n","import React, {Component}  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\n\r\nclass ModalWrapper extends Component {\r\n\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  handleBackgroundClick = (e) => {\r\n    if (e.target === e.currentTarget) this.props.dispatch(modalAction.close());\r\n  };\r\n\r\n  render() {\r\n    const setSize = this.props.editable ? \"modal setsize\": 'modal';\r\n\r\n    return (\r\n      <div className=\"modal-bg\" onClick={this.handleBackgroundClick}>\r\n        <div className={setSize}>\r\n          {this.props.children}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default connect()(ModalWrapper);","import uniqid from \"uniqid\";\r\n\r\nexport const apiPath = process.env.NODE_ENV === 'development' ? 'http://localhost:5000/api' : 'https://serge-dev.herokuapp.com/api';\r\n\r\nexport const headers = {\r\n  'Content-Type': 'application/json',\r\n  'Access-Control-Allow-Origin': '*',\r\n  'Access-Control-Allow-Methods': 'POST',\r\n  'Access-Control-Allow-Headers': 'Authorization, Lang'\r\n};\r\n\r\nexport const forceTemplate = {\r\n  overview: 'An overview written here..',\r\n  roles: ['General']\r\n};\r\n\r\nexport const channelTemplate = [];\r\n\r\n// export const channelTemplate = [{\r\n//   force: 'white',\r\n//   role: 'General',\r\n//   template: {\r\n//     name: '',\r\n//     id: '',\r\n//   },\r\n//   // subscriptionId: uniqid.time(),\r\n// }];\r\n","import {fetch} from \"whatwg-fetch\";\r\nimport {apiPath, headers} from \"../pouchDB/consts\";\r\nimport _ from \"lodash\";\r\n\r\n\r\nexport const populateWargame = () => {\r\n  return fetch(`${apiPath}/wargames/populate`)\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      return data;\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const createWargame = () => {\r\n  return fetch(`${apiPath}/wargames/create`, {\r\n    method: 'POST',\r\n    headers,\r\n  })\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then((res) => {\r\n      return res;\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const editWargame = (name) => {\r\n  return fetch(`${apiPath}/wargames/edit`, {\r\n    method: 'POST',\r\n    headers,\r\n    body: JSON.stringify({name})\r\n  })\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then((res) => {\r\n      return res;\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const updateWargame = (dbName, data, title) => {\r\n  return fetch(`${apiPath}/wargames/update`, {\r\n    method: 'POST',\r\n    headers,\r\n    body: JSON.stringify({dbName, data, title})\r\n  })\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then((localDoc) => {\r\n      return localDoc;\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const duplicateWargame = (dbName) => {\r\n  return fetch(`${apiPath}/wargames/duplicate`, {\r\n      method: 'POST',\r\n      headers,\r\n      body: JSON.stringify({dbName})\r\n    })\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then((games) => {\r\n      return games;\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getWargame = () => {\r\n  return fetch(`${apiPath}/wargames/getActive`)\r\n    .then((response) => {\r\n      console.log(response.ok);\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const postNewMessage = (dbName, channel, message) => {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${apiPath}/wargames/createMessage`, {\r\n      method: 'POST',\r\n      headers,\r\n      body: JSON.stringify({dbName, channel, message})\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        resolve(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const getAllMessages = (id) => {\r\n  return fetch(`${apiPath}/wargames/getMessages/wargameId/${id}`)\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      return data;\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\nimport 'whatwg-fetch';\r\nimport check from 'check-types';\r\nimport _ from \"lodash\";\r\n\r\nimport * as wargamesApi from \"../../api/wargames_api\";\r\n\r\nimport { apiPath, headers } from \"../../pouchDB/consts\";\r\n\r\n\r\nexport const setCurrentTab = (tab) => ({\r\n  type: ActionConstant.SET_CURRENT_GAME_SETUP_TAB,\r\n  payload: tab\r\n});\r\n\r\nexport const setGameData = (data) => ({\r\n  type: ActionConstant.SET_GAME_SETUP_DATA,\r\n  payload: data,\r\n});\r\n\r\nexport const setWargameTitle = (data) => ({\r\n  type: ActionConstant.SET_WARGAME_NAME,\r\n  payload: data,\r\n});\r\n\r\nexport const gameTitleInvalid = (data) => ({\r\n  type: ActionConstant.GAME_TITLE_INVALID,\r\n  payload: data,\r\n});\r\n\r\nexport const addNewForce = (data) => ({\r\n  type: ActionConstant.ADD_NEW_FORCE,\r\n  payload: data,\r\n});\r\n\r\nexport const setSelectedForce = (payload) => ({\r\n  type: ActionConstant.SET_SELECTED_FORCE,\r\n  payload\r\n});\r\n\r\n\r\nexport const addNewChannel = (data) => ({\r\n  type: ActionConstant.ADD_NEW_CHANNEL,\r\n  payload: data,\r\n});\r\n\r\n\r\nexport const setSelectedChannel = (payload) => ({\r\n  type: ActionConstant.SET_SELECTED_CHANNEL,\r\n  payload\r\n});\r\n\r\n\r\nexport const setForceOverview = (payload) => ({\r\n  type: ActionConstant.SET_FORCE_OVERVIEW,\r\n  payload,\r\n});\r\n\r\n\r\nconst saveAllWargameNames = (names) => ({\r\n  type: ActionConstant.ALL_WARGAME_NAMES_SAVED,\r\n  payload: names\r\n});\r\n\r\n\r\nconst setCurrentWargame = (data) => ({\r\n  type: ActionConstant.SET_CURRENT_WARGAME,\r\n  payload: data\r\n});\r\n\r\n\r\nexport const addRecipientToChannel = (data) => ({\r\n  type: ActionConstant.ADD_NEW_RECIPIENT,\r\n  payload: data,\r\n});\r\n\r\nexport const updateRecipient = (id, data) => ({\r\n  type: ActionConstant.UPDATE_RECIPIENT,\r\n  payload: { id,data }\r\n});\r\n\r\nexport const removeRecipient = (id) => ({\r\n  type: ActionConstant.REMOVE_RECIPIENT,\r\n  payload: id\r\n});\r\n\r\n\r\nexport const populateWargameStore = () => {\r\n  return async (dispatch) => {\r\n\r\n    var wargameNames = await wargamesApi.populateWargame();\r\n\r\n    dispatch(saveAllWargameNames(wargameNames));\r\n  }\r\n};\r\n\r\n\r\nexport const createNewWargameDB = () => {\r\n\r\n  return async (dispatch) => {\r\n\r\n    var wargame = await wargamesApi.createWargame();\r\n\r\n    dispatch(setCurrentWargame(_.omit(wargame, ['_id', '_rev'])));\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const editWargame = (name) => {\r\n  return async (dispatch) => {\r\n\r\n    let wargame = await wargamesApi.editWargame(name);\r\n\r\n    dispatch(setCurrentWargame(wargame));\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const updateWargame = (dbName, data, title) => {\r\n\r\n  return async (dispatch) => {\r\n\r\n    let localDoc = await wargamesApi.updateWargame(dbName, data, title);\r\n    dispatch(setCurrentWargame(localDoc));\r\n\r\n  }\r\n};\r\n\r\n\r\nexport const duplicateWargame = (dbName) => {\r\n  return async (dispatch) => {\r\n\r\n    var games = await wargamesApi.duplicateWargame(dbName);\r\n\r\n    console.log(games);\r\n\r\n    dispatch(saveAllWargameNames(games));\r\n  }\r\n};\r\n\r\n","import React, {Component} from 'react';\r\nimport ModalWrapper from './ModalWrapper';\r\nimport \"../../scss/App.scss\";\r\nimport { connect } from 'react-redux';\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport {addNewForce, setSelectedForce} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nclass AddForceModal extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      forceName: ''\r\n    };\r\n  }\r\n\r\n  hideModal = () => {\r\n\r\n    this.setState({\r\n      forceName: '',\r\n    });\r\n\r\n    this.props.dispatch(modalAction.close());\r\n  };\r\n\r\n\r\n  setNewForceName = (e) => {\r\n\r\n    this.setState({\r\n      forceName: e.target.value,\r\n      sameName: this.props.wargame.tabs[this.props.wargame.currentTab].data.forces[e.target.value]\r\n    });\r\n  };\r\n\r\n  addForce = () => {\r\n    this.props.dispatch(addNewForce(this.state.forceName));\r\n    this.props.dispatch(setSelectedForce(this.state.forceName));\r\n  };\r\n\r\n  render() {\r\n\r\n    if (!this.props.currentModal.open) return false;\r\n\r\n    var disable = this.state.forceName.length < 1 || this.state.sameName;\r\n\r\n    return (\r\n      <ModalWrapper>\r\n        <div className=\"display-text-wrapper\">\r\n          <h3>Create force</h3>\r\n          {this.state.sameName ? <p className=\"notification\">Already exists</p> : false}\r\n          <input autoFocus className=\"modal-input\" type=\"text\" onChange={this.setNewForceName} />\r\n          <div className=\"buttons\">\r\n            <button disabled={disable} name=\"add\" className=\"btn btn-action btn-action--primary\" onClick={this.addForce}>Add</button>\r\n            <button name=\"cancel\" className=\"btn btn-action btn-action--secondary\" onClick={this.hideModal}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </ModalWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame, currentModal }) => ({\r\n  wargame,\r\n  currentModal\r\n});\r\n\r\nexport default connect(mapStateToProps)(AddForceModal);\r\n","import {fetch} from \"whatwg-fetch\";\r\nimport {apiPath, headers} from \"../pouchDB/consts\";\r\n\r\nexport const addMessage = (message, schema) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${apiPath}/messages/create`, {\r\n      method: 'POST',\r\n      headers,\r\n      body: JSON.stringify({message, schema})\r\n    })\r\n      .then((response) => {\r\n        resolve(response.json());\r\n      })\r\n      .catch((err) => reject(err));\r\n  })\r\n};\r\n\r\nexport const duplicateMessageInDb = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${apiPath}/messages/duplicate`, {\r\n      method: 'POST',\r\n      headers,\r\n      body: JSON.stringify({id})\r\n    })\r\n      .then((response) => {\r\n        resolve(response.json());\r\n      })\r\n      .catch((err) => reject(err));\r\n  })\r\n};\r\n\r\nexport const getAllMessagesFromDb = () => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${apiPath}/messages/getAll`)\r\n      .then((response) => {\r\n        resolve(response.json());\r\n      })\r\n      .catch((err) => reject(err));\r\n  })\r\n};\r\n\r\nexport const updateMessageInDb = (id, message) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${apiPath}/messages/update`, {\r\n      method: 'POST',\r\n      headers,\r\n      body: JSON.stringify({id, message})\r\n    })\r\n      .then((response) => {\r\n        resolve(response.json());\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n};\r\n\r\nexport const getMessage = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${apiPath}/messages/get`, {\r\n      method: 'POST',\r\n      headers,\r\n      body: JSON.stringify({id})\r\n    })\r\n      .then((response) => {\r\n        resolve(response.json());\r\n      })\r\n      .catch((err) => reject(err));\r\n  })\r\n};\r\n\r\nexport const deleteMessageFromDb = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${apiPath}/messages/delete`, {\r\n      method: 'POST',\r\n      headers,\r\n      body: JSON.stringify({id})\r\n    })\r\n      .then((response) => {\r\n        resolve(response.json());\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n};\r\n","import ActionConstant from '../ActionConstants.js';\r\n\r\nexport const showNotification = (payload) => ({\r\n  type: ActionConstant.SHOW_NOTIFICATION,\r\n  payload: {\r\n    open: true,\r\n    message: payload,\r\n  },\r\n});\r\n\r\nexport const hideNotification = () => ({\r\n  type: ActionConstant.HIDE_NOTIFICATION,\r\n  payload: {\r\n    open: false,\r\n    message: '',\r\n  },\r\n});\r\n","import ActionConstant from '../ActionConstants';\r\n\r\nexport const setCurrentViewFromURI = (path) => ({\r\n  type: ActionConstant.SET_CURRENT_VIEW_FROM_URI,\r\n  payload: path\r\n});","import ActionConstant from '../ActionConstants';\r\nimport 'whatwg-fetch';\r\nimport check from 'check-types';\r\n\r\nimport * as messagesApi from \"../../api/messages_api\";\r\n\r\nimport { showNotification } from \"../Notification/Notification_ActionCreators\";\r\nimport {setCurrentViewFromURI} from \"../setCurrentViewFromURI/setCurrentViewURI_ActionCreators\";\r\nimport {apiPath, headers} from \"../../pouchDB/consts\";\r\n\r\nconst DBMessageSaveStatus = (status) => ({\r\n  type: ActionConstant.DB_MESSAGE_STATUS,\r\n  payload: status\r\n});\r\n\r\nconst DBSaveMessageArray = (messages) => ({\r\n  type: ActionConstant.DB_MESSAGE_SAVED,\r\n  payload: messages\r\n});\r\n\r\nconst DBSaveMessagePreview = (message) => ({\r\n  type: ActionConstant.DB_RETURNED_MESSAGE,\r\n  payload: message\r\n});\r\n\r\nconst loadingDBMessageCreate = (isLoading) => ({\r\n  type: ActionConstant.DB_MESSAGE_CREATION_LOADING,\r\n  isLoading\r\n});\r\n\r\nconst loadingDBMessageGet = (isLoading) => ({\r\n  type: ActionConstant.DB_MESSAGES_GET,\r\n  isLoading\r\n});\r\n\r\nexport const resetMessagePreview = () => ({\r\n  type: ActionConstant.RESET_MESSAGE_PREVIEW,\r\n});\r\n\r\n\r\nexport const createMessage = (message, schema) => {\r\n\r\n  if (!check.object(message)) throw Error(`createMessageType() requires object with message, from & to NOT. ${message}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    try {\r\n      var result = await messagesApi.addMessage(message, schema);\r\n\r\n      if (result.err) {\r\n        dispatch(showNotification(result.err));\r\n      }\r\n\r\n      if (result.ok) {\r\n        dispatch(DBMessageSaveStatus(result));\r\n        let messages = await messagesApi.getAllMessagesFromDb();\r\n        dispatch(DBSaveMessageArray(messages));\r\n        dispatch(loadingDBMessageCreate(false));\r\n        dispatch(setCurrentViewFromURI(\"/client/umpireMenu/library\"));\r\n      }\r\n    } catch(e) {\r\n      dispatch(loadingDBMessageCreate(false));\r\n      alert(e);\r\n    }\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const duplicateMessage = (messageId) => {\r\n\r\n  if (!check.string(messageId)) throw Error(`duplicateMessage() requires a string Not. ${messageId}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    var result = await messagesApi.duplicateMessageInDb(messageId);\r\n\r\n    if (result) {\r\n      dispatch(DBMessageSaveStatus(result));\r\n      let messages = await messagesApi.getAllMessagesFromDb();\r\n      dispatch(DBSaveMessageArray(messages));\r\n    }\r\n    dispatch(loadingDBMessageCreate(false));\r\n  }\r\n};\r\n\r\n\r\nexport const updateMessage = (message, id) => {\r\n\r\n  if (!check.object(message)) throw Error(`updateMessage() requires object with message, from & to NOT. ${message}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    try {\r\n      const result = await messagesApi.updateMessageInDb(id, message);\r\n\r\n      if (result.err) {\r\n        dispatch(showNotification(result.err));\r\n      }\r\n\r\n      if (result.ok) {\r\n        dispatch(DBMessageSaveStatus(result));\r\n\r\n        let responses = await Promise.all([messagesApi.getAllMessagesFromDb(), messagesApi.getMessage(result.id)]);\r\n        let [messages, message] = [...responses];\r\n\r\n        dispatch(DBSaveMessagePreview(message));\r\n        dispatch(DBSaveMessageArray(messages));\r\n        dispatch(loadingDBMessageCreate(false));\r\n        dispatch(setCurrentViewFromURI(\"/client/umpireMenu/library\"));\r\n\r\n      }\r\n    } catch (e) {\r\n      // CREATE ERROR WARNING MESSAGE\r\n      dispatch(loadingDBMessageCreate(false));\r\n      alert(e);\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport const deleteMessage = (messageId) => {\r\n\r\n  if (!check.string(messageId)) throw Error(`duplicateMessage() requires a string Not. ${messageId}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    var result = await messagesApi.deleteMessageFromDb(messageId);\r\n\r\n    if (result) {\r\n      let messages = await messagesApi.getAllMessagesFromDb();\r\n      dispatch(DBSaveMessageArray(messages));\r\n      dispatch(resetMessagePreview());\r\n    } else {\r\n      // error action\r\n    }\r\n\r\n    dispatch(loadingDBMessageCreate(false));\r\n  }\r\n};\r\n\r\n\r\nexport const getSingleMessage = (id) => {\r\n\r\n  if (!check.string(id)) throw Error(`duplicateMessage() requires a string id..`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageGet(true));\r\n\r\n    let result = await messagesApi.getMessage(id);\r\n\r\n    dispatch(DBSaveMessagePreview(result));\r\n    dispatch(loadingDBMessageGet(false));\r\n  }\r\n};\r\n\r\nexport const getAllMessages = () => {\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageGet(true));\r\n\r\n    let result = await messagesApi.getAllMessagesFromDb();\r\n\r\n    dispatch(DBSaveMessageArray(result));\r\n    dispatch(loadingDBMessageGet(false));\r\n  }\r\n};\r\n","import {fetch} from \"whatwg-fetch\";\r\nimport {apiPath, headers} from \"../pouchDB/consts\";\r\n\r\nexport const postNewMessage = (schema) => {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${apiPath}/messageTypes/create`, {\r\n      method: 'POST',\r\n      headers,\r\n      body: JSON.stringify(schema)\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        resolve(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const duplicateMessageInDb = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${apiPath}/messageTypes/duplicate`, {\r\n      method: 'POST',\r\n      headers,\r\n      body: JSON.stringify({id})\r\n    })\r\n      .then((response) => {\r\n        resolve(response.json());\r\n      })\r\n      .catch((err) => reject(err));\r\n  })\r\n};\r\n\r\nexport const updateMessageInDb = (schema, id) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${apiPath}/messageTypes/update`, {\r\n      method: 'POST',\r\n      headers,\r\n      body: JSON.stringify({id, schema})\r\n    })\r\n      .then((response) => {\r\n        resolve(response.json());\r\n      })\r\n      .catch((err) => reject(err));\r\n  })\r\n};\r\n\r\nexport const deleteMessageFromDb = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${apiPath}/messageTypes/delete`, {\r\n      method: 'POST',\r\n      headers,\r\n      body: JSON.stringify({id})\r\n    })\r\n      .then((response) => {\r\n        resolve(response.json());\r\n      })\r\n      .catch((err) => reject(err));\r\n  })\r\n};\r\n\r\nexport const getAllMessagesFromDb = () => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${apiPath}/messageTypes/getAll`)\r\n      .then((response) => {\r\n        resolve(response.json());\r\n      })\r\n      .catch((err) => reject(err));\r\n  })\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\nimport 'whatwg-fetch';\r\nimport check from 'check-types';\r\n\r\nimport * as messageTypesApi from \"../../api/messageTypes_api\";\r\n\r\nimport {setCurrentViewFromURI} from \"../setCurrentViewFromURI/setCurrentViewURI_ActionCreators\";\r\nimport {showNotification} from \"../Notification/Notification_ActionCreators\";\r\n\r\nconst DBMessageSaveStatus = (status) => ({\r\n  type: ActionConstant.DB_MESSAGE_STATUS,\r\n  payload: status\r\n});\r\n\r\nconst DBSaveMessageArray = (messages) => ({\r\n  type: ActionConstant.DB_MESSAGE_TYPES_SAVED,\r\n  payload: messages\r\n});\r\n\r\nconst loadingDBMessageCreate = (isLoading) => ({\r\n  type: ActionConstant.DB_MESSAGE_CREATION_LOADING,\r\n  isLoading\r\n});\r\n\r\nconst loadingDBMessageGet = (isLoading) => ({\r\n  type: ActionConstant.DB_MESSAGE_TYPES_GET,\r\n  isLoading\r\n});\r\n\r\n\r\nexport const createMessageType = (schema) => {\r\n\r\n  if (!check.object(schema)) throw Error(`createMessageType() requires schema object & NOT. ${schema}`);\r\n\r\n  return async (dispatch) => {\r\n\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    try {\r\n\r\n      var result = await messageTypesApi.postNewMessage(schema);\r\n\r\n      if (result.err) {\r\n        dispatch(showNotification(result.err));\r\n        dispatch(loadingDBMessageCreate(false));\r\n      }\r\n\r\n      if (result.ok) {\r\n        dispatch(DBMessageSaveStatus(result));\r\n        let messages = await messageTypesApi.getAllMessagesFromDb();\r\n        dispatch(DBSaveMessageArray(messages));\r\n\r\n        dispatch(loadingDBMessageCreate(false));\r\n        dispatch(setCurrentViewFromURI(\"/client/umpireMenu/templates\"));\r\n      }\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport const duplicateMessageType = (id) => {\r\n\r\n  if (!check.string(id)) throw Error(`duplicateTemplate() requires a string Not. ${id}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    var result = await messageTypesApi.duplicateMessageInDb(id);\r\n\r\n    if (result) {\r\n      dispatch(DBMessageSaveStatus(true));\r\n      let messages = await messageTypesApi.getAllMessagesFromDb();\r\n      dispatch(DBSaveMessageArray(messages));\r\n    }\r\n    dispatch(loadingDBMessageCreate(false));\r\n  }\r\n};\r\n\r\nexport const updateMessageType = (schema, id) => {\r\n\r\n  if (!check.object(schema)) throw Error(`updateMessageType() requires schema & not ${schema}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    try {\r\n      const result = await messageTypesApi.updateMessageInDb(schema, id);\r\n\r\n      if (result.err) {\r\n        dispatch(showNotification(result.err));\r\n        dispatch(loadingDBMessageCreate(false));\r\n      }\r\n\r\n      if (result.ok) {\r\n        dispatch(DBMessageSaveStatus(result.ok));\r\n\r\n        let allMessages = await messageTypesApi.getAllMessagesFromDb();\r\n\r\n        dispatch(DBSaveMessageArray(allMessages));\r\n        dispatch(loadingDBMessageCreate(false));\r\n        dispatch(setCurrentViewFromURI(\"/client/umpireMenu/templates\"));\r\n\r\n      }\r\n    } catch (e) {\r\n      // CREATE ERROR WARNING MESSAGE\r\n      dispatch(loadingDBMessageCreate(false));\r\n      alert(e);\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport const deleteMessageType = (messageId) => {\r\n\r\n  if (!check.string(messageId)) throw Error(`deleteMessage() requires a string of id not. ${messageId}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    var result = await messageTypesApi.deleteMessageFromDb(messageId);\r\n\r\n    if (result) {\r\n      let messages = await messageTypesApi.getAllMessagesFromDb();\r\n      dispatch(DBSaveMessageArray(messages));\r\n    } else {\r\n      // error action\r\n    }\r\n\r\n    dispatch(loadingDBMessageCreate(false));\r\n  }\r\n};\r\n\r\n\r\nexport const getAllMessageTypes = () => {\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageGet(true));\r\n\r\n    let result = await messageTypesApi.getAllMessagesFromDb();\r\n\r\n    dispatch(DBSaveMessageArray(result));\r\n    dispatch(loadingDBMessageGet(false));\r\n  }\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\n\r\nexport const setSelectedSchema = (schemaId) => ({\r\n  type: ActionConstant.SET_SELECTED_SCHEMA,\r\n  payload: schemaId\r\n});\r\n\r\n\r\nexport const setPreviewSchema = (schema) => ({\r\n  type: ActionConstant.SET_PREVIEW_SCHEMA,\r\n  payload: schema\r\n});","import React, {Component} from 'react';\r\nimport ModalWrapper from './ModalWrapper';\r\nimport \"../../scss/App.scss\";\r\nimport { connect } from 'react-redux';\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport { deleteMessage } from \"../../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\nimport { deleteMessageType } from \"../../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\nimport {setPreviewSchema, setSelectedSchema} from \"../../ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators\";\r\n\r\nclass DeleteModal extends Component {\r\n\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  hideModal = () => {\r\n    this.props.dispatch(modalAction.close());\r\n  };\r\n\r\n  deleteMessage = () => {\r\n    if (this.props.currentViewURI === \"/client/umpireMenu/templates\") {\r\n      this.props.dispatch(deleteMessageType(this.props.umpireMenu.selectedSchemaID));\r\n      this.props.dispatch(setPreviewSchema(\"\"));\r\n      this.props.dispatch(setSelectedSchema(\"\"));\r\n    } else {\r\n      this.props.dispatch(deleteMessage(this.props.messages.messagePreviewId));\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    if (!this.props.currentModal.open) return false; // needed ?\r\n\r\n    return (\r\n      <ModalWrapper>\r\n        <div className=\"display-text-wrapper\">\r\n          <h3>Delete</h3>\r\n          <p>This will permanently remove the message.<br/>Are you sure?</p>\r\n          <div className=\"buttons\">\r\n            <button name=\"delete\" className=\"btn btn-action btn-action--primary\" onClick={this.deleteMessage}>Delete</button>\r\n            <button name=\"cancel\" className=\"btn btn-action btn-action--secondary\" onClick={this.hideModal}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </ModalWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ currentModal, messages, umpireMenu, currentViewURI }) => ({\r\n  currentModal,\r\n  messages,\r\n  umpireMenu,\r\n  currentViewURI\r\n});\r\n\r\nexport default connect(mapStateToProps)(DeleteModal);\r\n","import React, {Component} from 'react';\r\nimport ModalWrapper from './ModalWrapper';\r\nimport \"../../scss/App.scss\";\r\nimport { connect } from 'react-redux';\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport {\r\n  addNewChannel,\r\n  setSelectedChannel\r\n} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nclass AddChannelModal extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      channelName: ''\r\n    };\r\n  }\r\n\r\n  hideModal = () => {\r\n\r\n    this.setState({\r\n      channelName: '',\r\n    });\r\n\r\n    this.props.dispatch(modalAction.close());\r\n  };\r\n\r\n\r\n  setChannelName = (e) => {\r\n\r\n    this.setState({\r\n      channelName: e.target.value,\r\n      sameName: this.props.wargame.tabs[this.props.wargame.currentTab].data.channels[e.target.value]\r\n    });\r\n  };\r\n\r\n  addChannel = () => {\r\n    this.props.dispatch(addNewChannel(this.state.channelName));\r\n    this.props.dispatch(setSelectedChannel(this.state.channelName));\r\n  };\r\n\r\n  render() {\r\n\r\n    if (!this.props.currentModal.open) return false;\r\n\r\n    var disable = this.state.channelName.length < 1 || this.state.sameName;\r\n\r\n    return (\r\n      <ModalWrapper>\r\n        <div className=\"display-text-wrapper\">\r\n          <h3>Create channel</h3>\r\n          {this.state.sameName ? <p className=\"notification\">Already exists</p> : false}\r\n          <input autoFocus className=\"modal-input\" type=\"text\" onChange={this.setChannelName} />\r\n          <div className=\"buttons\">\r\n            <button disabled={disable} name=\"add\" className=\"btn btn-action btn-action--primary\" onClick={this.addChannel}>Add</button>\r\n            <button name=\"cancel\" className=\"btn btn-action btn-action--secondary\" onClick={this.hideModal}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </ModalWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame, currentModal }) => ({\r\n  wargame,\r\n  currentModal\r\n});\r\n\r\nexport default connect(mapStateToProps)(AddChannelModal);\r\n","import React, {Component} from 'react';\r\nimport \"../../scss/App.scss\";\r\nimport { connect } from 'react-redux';\r\nimport AddForceModal from \"./AddForceModal\";\r\nimport DeleteModal from './DeleteModal';\r\nimport AddChannelModal from \"./AddChannelModal\";\r\n// import { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\n\r\nclass ModalSwitch extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n\r\n    var modal;\r\n\r\n    switch (this.props.currentModal.modal) {\r\n\r\n      case \"addForce\":\r\n        modal = <AddForceModal />;\r\n        break;\r\n\r\n      case \"delete\":\r\n        modal = <DeleteModal />;\r\n        break;\r\n\r\n      case \"addChannel\":\r\n        modal = <AddChannelModal />;\r\n        break;\r\n\r\n      default:\r\n        modal = false;\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {modal}\r\n      </>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = ({ currentModal }) => ({\r\n  currentModal,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ModalSwitch);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\n\r\nimport { hideNotification } from \"../ActionsAndReducers/Notification/Notification_ActionCreators\";\r\n\r\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nclass Notification extends Component {\r\n\r\n  onClickHandler = (e) => {\r\n\r\n    this.props.dispatch(hideNotification());\r\n\r\n  };\r\n\r\n  render() {\r\n\r\n    if (!this.props.notification.open) return false;\r\n\r\n    return (\r\n      <div id=\"notification\">\r\n        {this.props.notification.message}\r\n        <FontAwesomeIcon icon={faTimes} onClick={this.onClickHandler} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ notification }) => ({\r\n  notification,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Notification);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport { setCurrentViewFromURI } from \"../ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_ActionCreators\"\r\n\r\nimport '../scss/App.scss';\r\n\r\nclass Link extends Component {\r\n\r\n  onClickHandler = (e) => {\r\n\r\n    if (this.props.onClickMethod) this.props.onClickMethod();\r\n\r\n    const aNewTab = e.metaKey || e.ctrlKey;\r\n    const anExternalLink = this.props.href.startsWith('http');\r\n\r\n    if (!aNewTab && !anExternalLink) {\r\n      e.preventDefault();\r\n      this.props.dispatch(setCurrentViewFromURI(this.props.href));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <a href={this.props.href} onClick={this.onClickHandler} id={this.props.id ? this.props.id : null} className={this.props.class ? this.props.class : null}>\r\n        {this.props.children}\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default connect()(Link);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Link from \"../Components/Link\";\r\n\r\nimport '../scss/App.scss';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass UmpireMenu extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"umpire\" className=\"flex-content-wrapper\">\r\n        <div className=\"flex-content flex-content--fill\">\r\n          <Link href=\"/client/umpireMenu\" class=\"link link--secondary link--large\">Umpire Menu</Link>\r\n          <Link href=\"/client/playerUi\" class=\"link link--secondary link--large\">Player UI</Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({  }) => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps)(UmpireMenu);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\nimport {setSelectedSchema} from \"../ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators\";\r\nimport {getSingleMessage} from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport moment from \"moment\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  editWargame,\r\n  duplicateWargame,\r\n} from \"../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\nimport {setCurrentViewFromURI} from \"../ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_ActionCreators\";\r\n\r\nimport {faClone, faPencilAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nclass WargameSearchList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageList: this.props.listData,\r\n      searchQuery: this.props.listData,\r\n      searchInput: \"\",\r\n    };\r\n  }\r\n\r\n\r\n  componentWillUpdate(nextProps, nextState, nextContext) {\r\n\r\n    let sameMessagesQuantity = _.difference(nextProps.listData, this.state.messageList).length;\r\n\r\n    if (\r\n      nextProps.listData.length !== this.state.messageList.length ||\r\n      (sameMessagesQuantity !== 0 && this.state.searchInput.length === 0)\r\n    ) {\r\n      this.setState({\r\n        messageList: nextProps.listData\r\n      });\r\n    }\r\n\r\n    if (\r\n      this.state.searchInput.length > 0 &&\r\n      sameMessagesQuantity !== 0\r\n    ) {\r\n      this.filterMessages();\r\n    }\r\n  }\r\n\r\n  setSelectedWargame(name) {\r\n    this.props.dispatch(editWargame(name));\r\n    this.props.dispatch(setCurrentViewFromURI('/client/gameSetup'));\r\n  }\r\n\r\n  duplicateWargame(name) {\r\n    this.props.dispatch(duplicateWargame(name));\r\n  }\r\n\r\n  filterMessages = (input) => {\r\n\r\n    let value = input ? input.target.value : this.state.searchInput;\r\n\r\n    let searchQuery = this.props.listData.filter(function(db) {\r\n      return db.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n    });\r\n\r\n    this.setState({\r\n      searchQuery,\r\n      searchInput: input ? value : this.state.searchInput\r\n    });\r\n  };\r\n\r\n  displayControls = (activeTitle) => {\r\n    this.setState({\r\n      activeTitle,\r\n    });\r\n  };\r\n\r\n  hideControls = () => {\r\n    this.setState({\r\n      activeTitle: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    var that = this;\r\n\r\n    var list = this.state.searchInput ? this.state.searchQuery : this.state.messageList;\r\n\r\n    return (\r\n      <div className=\"searchlist\">\r\n        <input type=\"text\" className=\"searchlist-input\" key=\"search-templates\" placeholder=\"Search games\" onChange={ this.filterMessages } value={this.state.searchInput} />\r\n        <div className=\"searchlist-list\">\r\n          { list.map(function(db) {\r\n            // let active\r\n            return (\r\n              <span className=\"searchlist-title\" key={db.title} onMouseOver={that.displayControls.bind(that, db.title)} onMouseLeave={that.hideControls}>\r\n                {db.title}\r\n                {that.state.activeTitle === db.title ?\r\n                  <>\r\n                    <FontAwesomeIcon icon={faPencilAlt} onClick={that.setSelectedWargame.bind(that, db.name)} />\r\n                    <FontAwesomeIcon icon={faClone} onClick={that.duplicateWargame.bind(that, db.name)} />\r\n                  </>\r\n                  : null\r\n                }\r\n              </span>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// empty mapStateToProps is here for react-redux to wire up the dispatch function to props so firing actions is possible.\r\nconst mapStateToProps = ({  }) => ({\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(WargameSearchList);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Link from \"../Components/Link\";\r\n\r\nimport '../scss/App.scss';\r\n// import SearchList from \"../Components/SearchList\";\r\n\r\nimport {\r\n  populateWargameStore,\r\n  createNewWargameDB,\r\n} from \"../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nimport WargameSearchList from \"../Components/WargameSearchList\";\r\n\r\nclass GameDesignerInterface extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(populateWargameStore());\r\n  }\r\n\r\n  createWargame = () => {\r\n    this.props.dispatch(createNewWargameDB());\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"umpire\" className=\"flex-content-wrapper\">\r\n        <div className=\"flex-content flex-content--big\">\r\n          <Link href=\"/client/umpireMenu/templates\" class=\"link link--secondary link--large\">Message Templates</Link>\r\n          <Link href=\"/client/umpireMenu/library\" class=\"link link--secondary link--large\">Message Library</Link>\r\n        </div>\r\n        <div className=\"flex-content flex-content--big\">\r\n          <span>Games</span>\r\n          <Link\r\n            href=\"/client/gameSetup\"\r\n            class=\"link link--noIcon\"\r\n            onClickMethod={this.createWargame}\r\n          >Create</Link>\r\n          <WargameSearchList key=\"searchlist\"\r\n                             listData={this.props.wargame.wargameList}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// empty mapStateToProps is here for react-redux to wire up the dispatch function to props so firing actions is possible.\r\nconst mapStateToProps = ({wargame}) => ({\r\n  wargame\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(GameDesignerInterface);\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createMessage,\r\n} from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport JSONEditor from '@json-editor/json-editor';\r\n// import flatpickr from \"flatpickr\";\r\n// for json.. datetime-local\r\n// \"flatpickr\": {\r\n//   \"wrap\": true,\r\n//     \"time_24hr\": true,\r\n//     \"allowInput\": true\r\n// }\r\nimport '../scss/App.scss';\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSave} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nclass JsonCreator extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.editor = null;\r\n    this.editorPreviewRef = React.createRef();\r\n\r\n    this.state = {\r\n      selectedSchema: ''\r\n    };\r\n  }\r\n\r\n\r\n  componentWillUpdate(nextProps, nextState, nextContext) {\r\n\r\n    if (this.editor && nextProps.umpireMenu.selectedSchemaID !== this.props.umpireMenu.selectedSchemaID) {\r\n      this.editor.destroy();\r\n      this.editor = null;\r\n    }\r\n\r\n    if (\r\n      nextProps.umpireMenu.selectedSchemaID.length > 0 &&\r\n      nextProps.messageTypes &&\r\n      nextProps.messageTypes.messages.length > 0\r\n    ) {\r\n\r\n      if (this.editor) return;\r\n\r\n      this.editor = new JSONEditor(this.editorPreviewRef.current, {\r\n        schema: nextProps.messageTypes.messages.find((mes) => mes._id === nextProps.umpireMenu.selectedSchemaID).details,\r\n        theme: 'bootstrap4'\r\n      });\r\n    }\r\n\r\n    if (\r\n      nextProps.messages.messagePreviewId.length > 0 &&\r\n      nextProps.messageTypes.messages.length > 0 &&\r\n      !nextProps.disabled\r\n    ) {\r\n\r\n      const data = nextProps.messages.messages.find(function(mes) {\r\n        return mes._id.toLowerCase().indexOf(nextProps.messages.messagePreviewId.toLowerCase()) > -1;\r\n      });\r\n      this.editor.setValue(data.details);\r\n    }\r\n\r\n    if (this.props.disabled && this.editor) {\r\n      this.editor.disable();\r\n    }\r\n  }\r\n\r\n\r\n  saveMessage = () => {\r\n    let schema = this.props.messageTypes.messages.find((mes) => mes._id === this.props.umpireMenu.selectedSchemaID).details;\r\n    console.log(this.editor.getValue());\r\n\r\n    console.log({...schema, _id: this.props.umpireMenu.selectedSchemaID});\r\n    this.props.dispatch(createMessage(this.editor.getValue(), {...schema, _id: this.props.umpireMenu.selectedSchemaID}));\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"button-wrap\">\r\n          {!this.props.disabled ? <span onClick={this.saveMessage} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span> : null }\r\n        </div>\r\n          <div id=\"preview-editor\" ref={this.editorPreviewRef}></div>\r\n        <div className=\"button-wrap\">\r\n          {!this.props.disabled ? <span onClick={this.saveMessage} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span> : null }\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, selectedSchema, umpireMenu }) => ({\r\n  messages,\r\n  messageTypes,\r\n  selectedSchema,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(JsonCreator);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\nimport check from \"check-types\";\r\nimport moment from \"moment\";\r\n\r\nclass MessagePreview extends Component {\r\n\r\n  createObjItem(pair) {\r\n    const that = this;\r\n    return (\r\n      <>\r\n        {/*<h3>{pair[0]}</h3>*/}\r\n        <span key={`objItem--${pair[0]}-${pair[1]}`} className=\"group-section\">{ that.deconstructObj(pair[1]) }</span>\r\n      </>\r\n    )\r\n  }\r\n\r\n  createBoolItem(pair) {\r\n    return <span key={`boolItem--${pair[0]}-${pair[1]}`}>{pair[1] ? pair[0] : false}</span>\r\n  }\r\n\r\n  createTimeItem(pair) {\r\n\r\n    return (\r\n      <>\r\n        <h3>{pair[0]}</h3>\r\n        <span key={`dateTime-${pair[1]}`}>{moment(pair[1]).format('Do MMMM YYYY, HH:mm')}</span>\r\n      </>\r\n    )\r\n  }\r\n\r\n  createStrItem(pair, withoutName) {\r\n    return <span key={`strItem-${pair[0]}-${pair[1]}`}><b>{pair[0]}: </b>{pair[1]}</span>\r\n  }\r\n\r\n  deconstructArr(pair) {\r\n    const that = this;\r\n    return (\r\n      <>\r\n        <h3>{pair[0]}</h3>\r\n        {pair[1].map((item) => {\r\n          // CHECK NAME PROP ON EVERY OBJ\r\n          return (\r\n              <span key={`section-${item.name}`}>{ that.deconstructObj(item) }</span>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\n  deconstructObj(obj) {\r\n\r\n    const that = this;\r\n    const keyPropPairs = Object.entries(obj);\r\n\r\n    return keyPropPairs.map((pair, i) => {\r\n\r\n      if (check.object(pair[1])) return that.createObjItem(pair);\r\n      if (check.array.of.object(pair[1])) return that.deconstructArr(pair);\r\n      if (check.boolean(pair[1])) return that.createBoolItem(pair);\r\n\r\n      if (moment(pair[1], moment.ISO_8601, true).isValid()) return that.createTimeItem(pair);\r\n\r\n      return that.createStrItem(pair);\r\n\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    if (!this.props.detail) return false;\r\n\r\n    const that = this;\r\n    const keyPropPairs = Object.entries(this.props.detail);\r\n\r\n    return keyPropPairs.map((pair, i) => {\r\n\r\n      if (i===0) return <h2 key={`title-${pair[1]}`}>{pair[1]}</h2>;\r\n\r\n      if (check.object(pair[1])) return that.createObjItem(pair);\r\n      if (check.array.of.object(pair[1])) return that.deconstructArr(pair);\r\n      if (check.boolean(pair[1])) return that.createBoolItem(pair);\r\n      if (moment(pair[1], moment.ISO_8601, true).isValid()) return that.createTimeItem(pair);\r\n\r\n      return (\r\n        <>\r\n          <h3>{pair[0]}</h3>\r\n          <span key={`${pair[0]}-${pair[1]}`}>{pair[1]}</span>\r\n        </>\r\n      )\r\n\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport default connect()(MessagePreview);","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\n\r\nclass ValidationNotification extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"invalid-notification\"><p>{this.props.children}</p></div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({}) => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps)(ValidationNotification);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { classNames } from \"classnames\";\r\nimport {Tooltip} from \"react-materialize\";\r\n\r\nimport '../../scss/App.scss';\r\nimport ValidationNotification from \"../ValidationNotification\";\r\n\r\nclass TextInput extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      type: this.props.options.numInput ? \"number\" : \"text\",\r\n    };\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.props.updateStore(e.target.value);\r\n  };\r\n\r\n  render() {\r\n\r\n    let invalid = !this.props.validInput ? 'invalid-input' : '';\r\n\r\n    if (!this.props.validInput) {\r\n      var invalidNotification = <ValidationNotification>This name is not unique</ValidationNotification>;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <input className={invalid} id={this.props.id ? this.props.id : null} type={this.state.type} onChange={this.onChange} value={this.props.data ? this.props.data : \"\"} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nTextInput.propTypes = {\r\n  updateStore: PropTypes.func.isRequired,\r\n  options: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nexport default TextInput;\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\n\r\nimport moment from \"moment\";\r\nimport classNames from \"classnames\";\r\nimport {PropTypes} from \"prop-types\";\r\nimport TextInput from \"./Inputs/TextInput\";\r\n\r\nclass SearchList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n\r\n  setSelected = (item) => {\r\n    this.props.setSelected(item);\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    var that = this;\r\n\r\n    return (\r\n      <div className=\"searchlist\">\r\n        <input type=\"text\" className=\"searchlist-input\" key=\"search-templates\" placeholder={this.props.placeholder} onChange={ this.props.filter } value={this.props.searchQuery} />\r\n        <div className=\"searchlist-list\">\r\n          { this.props.listData.map(function(item) {\r\n\r\n            // onClick handlers should not contain instantiating () to pass a specific value, .bind can be used here this is a simpler\r\n            // ES5 way to pass properties to click handlers from arrays, another option is to build a sub-component but I don't like\r\n            // how the data moves back and forth, it breaks Reacts initial idea of 1 way data flow.\r\n\r\n            let active = item._id === that.props.selected ? 'active' : null;\r\n\r\n            let title = item.details.title;\r\n            let date = moment(item.lastUpdated).format('DD/MM/YY');\r\n            return <span className={classNames({\"searchlist-title\": true, active})} href=\"#\" onClick={that.setSelected.bind(that, item)} key={item._id}>{title} - {date}</span>\r\n          })\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// empty mapStateToProps is here for react-redux to wire up the dispatch function to props so firing actions is possible.\r\nconst mapStateToProps = ({ currentViewURI, umpireMenu }) => ({\r\n  currentViewURI,\r\n  umpireMenu\r\n});\r\n\r\nSearchList.propTypes = {\r\n  listData: PropTypes.array.isRequired,\r\n  filter: PropTypes.func.isRequired,\r\n  selected: PropTypes.string.isRequired,\r\n  setSelected: PropTypes.func.isRequired,\r\n  searchQuery: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nexport default connect(mapStateToProps)(SearchList);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Link from \"../Components/Link\";\r\n\r\nimport {\r\n  getAllMessageTypes,\r\n  duplicateMessageType,\r\n} from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n\r\nimport {\r\n  getAllMessages,\r\n  duplicateMessage, getSingleMessage\r\n} from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport { modalAction } from \"../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\n\r\n\r\nimport JsonCreator from \"../Components/JsonCreator\";\r\nimport MessagePreview from \"../Components/MessagePreview\";\r\nimport '../scss/App.scss';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPencilAlt, faClone, faTrash, faArrowLeft,faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport SearchList from \"../Components/SearchList\";\r\nimport {setSelectedSchema} from \"../ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators\";\r\n\r\nclass UmpireMenu extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let creatorType = this.props.currentViewURI.split('/')[3];\r\n\r\n    this.state = {\r\n      searchQuery: '',\r\n      creatorType: creatorType,\r\n      messageList: creatorType === 'templates' ? this.props.messageTypes.messages : this.props.messages.messages,\r\n    };\r\n\r\n    this.buildMessageBoard();\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(setSelectedSchema(\"\"));\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.state.searchQuery.length === 0) {\r\n      // only on page load\r\n      this.setState({\r\n        messageList: this.state.creatorType === 'templates' ? nextProps.messageTypes.messages : nextProps.messages.messages,\r\n      });\r\n    }\r\n\r\n    if (nextProps.messages.messages.length !== this.props.messages.messages.length) setTimeout(this.filterMessages, 1); // setTimeout to wait one tick to allow messageList to update\r\n  }\r\n\r\n\r\n  buildMessageBoard() {\r\n\r\n    switch (this.state.creatorType) {\r\n\r\n      case 'templates':\r\n        // get template data action\r\n        this.props.dispatch(getAllMessageTypes());\r\n        break;\r\n\r\n      case 'library':\r\n        // get library data action\r\n        this.props.dispatch(getAllMessages());\r\n        break;\r\n\r\n      default:\r\n        // throw developer an error\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  setSelectedSchemaId = (item) => {\r\n\r\n    switch (this.state.creatorType) {\r\n      case 'templates':\r\n        this.props.dispatch(setSelectedSchema(item._id));\r\n        break;\r\n\r\n      case 'library':\r\n        this.props.dispatch(setSelectedSchema(item.schema._id));\r\n        this.props.dispatch(getSingleMessage(item._id));\r\n        break;\r\n\r\n      default:\r\n        console.log('error');\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  // event listener functions from the DOM will lose scope of this to the React Class unless stated as an arrow function\r\n  // or this is bound to them within the constructor like.. this.filterMessages = this.filterMessages.bind(this);\r\n  // arrow functions are es6 syntax and preferable if babel compiler can compile them. - They have the scope of where they're\r\n  // defined unlike a normal function that has it's own scope.\r\n  filterMessages = (input) => {\r\n\r\n    let value = input ? input.target.value : this.state.searchQuery;\r\n\r\n    let newState;\r\n\r\n    switch (this.state.creatorType) {\r\n      case 'templates':\r\n        newState = this.props.messageTypes.messages.filter(function(mes) {\r\n          return mes.details.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n        });\r\n        break;\r\n\r\n      case 'library':\r\n        newState = this.props.messages.messages.filter(function(mes) {\r\n          return mes.details.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n        });\r\n        break;\r\n\r\n      default:\r\n        newState = [];\r\n        break;\r\n    }\r\n\r\n    this.setState({\r\n      messageList: newState,\r\n      searchQuery: value\r\n    });\r\n  };\r\n\r\n\r\n  createSearchListSection() {\r\n\r\n    switch (this.state.creatorType) {\r\n\r\n      case 'templates':\r\n\r\n        return [\r\n            <Link href=\"/client/messageCreator/create/template\" key=\"templates\" class=\"link\"><FontAwesomeIcon icon={faPlus} />Create new template</Link>,\r\n            <SearchList key=\"searchlist\"\r\n                        listData={this.state.messageList}\r\n                        searchQuery={this.state.searchQuery}\r\n                        filter={this.filterMessages}\r\n                        selected={this.props.umpireMenu.selectedSchemaID}\r\n                        setSelected={this.setSelectedSchemaId}\r\n                        placeholder={'Select template'}\r\n            />\r\n        ];\r\n\r\n      case 'library':\r\n\r\n        return [\r\n            <Link href=\"/client/messageCreator/create/message\" key=\"messages\" class=\"link\"><FontAwesomeIcon icon={faPlus} />Create new Message</Link>,\r\n            <SearchList key=\"searchlist\"\r\n                        listData={this.state.messageList}\r\n                        searchQuery={this.state.searchQuery}\r\n                        filter={this.filterMessages}\r\n                        selected={this.props.messages.messagePreviewId}\r\n                        setSelected={this.setSelectedSchemaId}\r\n                        placeholder={'Select template'}\r\n            />\r\n        ];\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  createMessagesActions() {\r\n    return this.props.messages.messagePreviewId.length > 0 ?\r\n      <>\r\n        <Link class=\"link link--secondary\" href={this.state.creatorType === 'templates' ? \"/messageCreator/edit/template\" : \"/messageCreator/edit/message\"}><FontAwesomeIcon icon={faPencilAlt} />Edit</Link>\r\n        <span className=\"link link--secondary\" onClick={this.duplicateMessage}><FontAwesomeIcon icon={faClone} />Duplicate</span>\r\n        <span className=\"link link--secondary\" onClick={this.deleteMessage}><FontAwesomeIcon icon={faTrash} />Delete</span>\r\n      </>\r\n      :\r\n      null;\r\n  }\r\n\r\n\r\n  createTemplatesActions() {\r\n    return this.props.umpireMenu.selectedSchemaID.length > 0 ?\r\n      <>\r\n        <Link class=\"link link--secondary\" href={this.state.creatorType === 'templates' ? \"/messageCreator/edit/template\" : \"/messageCreator/edit/message\"}><FontAwesomeIcon icon={faPencilAlt} />Edit</Link>\r\n        <span className=\"link link--secondary\" onClick={this.duplicateTemplate}><FontAwesomeIcon icon={faClone} />Duplicate</span>\r\n        <span className=\"link link--secondary\" onClick={this.deleteTemplate}><FontAwesomeIcon icon={faTrash} />Delete</span>\r\n      </>\r\n      :\r\n      null;\r\n  };\r\n\r\n\r\n  duplicateTemplate = () => {\r\n    this.props.dispatch(duplicateMessageType(this.props.umpireMenu.selectedSchemaID))\r\n  };\r\n\r\n\r\n  deleteTemplate = () => {\r\n    this.props.dispatch(modalAction.open(\"delete\"));\r\n  };\r\n\r\n\r\n  duplicateMessage = () => {\r\n    this.props.dispatch(duplicateMessage(this.props.messages.messagePreviewId));\r\n  };\r\n\r\n\r\n  deleteMessage = () => {\r\n    this.props.dispatch(modalAction.open(\"delete\"));\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message {this.state.creatorType}</h1>\r\n        <div className=\"flex-content-wrapper\">\r\n          <div id=\"selection\" className=\"flex-content\">\r\n            { this.createSearchListSection() }\r\n          </div>\r\n          <div id=\"preview\" className=\"flex-content flex-content--big\">\r\n            <p className=\"heading--sml\">Preview</p>\r\n            { this.state.creatorType === 'templates' ?\r\n              <JsonCreator id=\"preview\"\r\n                           disabled={true}\r\n                           previewForm={true}\r\n              />\r\n            :\r\n              <div id=\"message-preview\">\r\n                <MessagePreview detail={this.props.messages.messagePreview.details} />\r\n              </div>\r\n            }\r\n          </div>\r\n          <div id=\"function\" className=\"flex-content flex-content--sml\">\r\n            <p className=\"heading--sml\">Actions</p>\r\n\r\n            {this.state.creatorType === 'templates' ?\r\n              this.createTemplatesActions()\r\n            :\r\n              this.createMessagesActions()\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messageTypes, messages, currentViewURI, umpireMenu }) => ({\r\n  messageTypes,\r\n  messages,\r\n  currentViewURI,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(UmpireMenu);\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  updateMessage,\r\n} from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport JSONEditor from '@json-editor/json-editor';\r\nimport '../scss/App.scss';\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSave} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nclass JsonCreator extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.editor = null;\r\n    this.editorPreviewRef = React.createRef();\r\n\r\n    this.state = {\r\n      selectedSchema: ''\r\n    };\r\n  }\r\n\r\n\r\n  componentWillUpdate(nextProps, nextState, nextContext) {\r\n\r\n    if (this.editor && nextProps.umpireMenu.selectedSchemaID !== this.props.umpireMenu.selectedSchemaID) {\r\n      this.editor.destroy();\r\n      this.editor = null;\r\n    }\r\n\r\n    // check logic\r\n    if (\r\n      nextProps.messages.messagePreviewId.length > 0 ||\r\n      nextProps.umpireMenu.selectedSchemaID.length > 0\r\n      // nextProps.messages.messagePreviewId.length > 0 &&\r\n      // nextProps.umpireMenu.selectedSchemaID.length > 0\r\n    ) {\r\n\r\n      if (this.editor) return;\r\n\r\n      this.editor = new JSONEditor(this.editorPreviewRef.current, {\r\n        schema: nextProps.messages.messagePreview.schema,\r\n        theme: 'bootstrap4'\r\n      });\r\n    }\r\n\r\n    if (nextProps.messages.messagePreview.details) {\r\n      this.editor.setValue(nextProps.messages.messagePreview.details);\r\n    }\r\n\r\n    if (this.props.disabled && this.editor) {\r\n      this.editor.disable();\r\n    }\r\n  }\r\n\r\n\r\n  saveMessage = () => {\r\n    this.props.dispatch(updateMessage(this.editor.getValue(), this.props.messages.messagePreviewId));\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"button-wrap\">\r\n          {!this.props.disabled ? <span onClick={this.saveMessage} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span> : null }\r\n        </div>\r\n          <div id=\"preview-editor\" ref={this.editorPreviewRef}></div>\r\n        <div className=\"button-wrap\">\r\n          {!this.props.disabled ? <span onClick={this.saveMessage} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span> : null }\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, selectedSchema, umpireMenu }) => ({\r\n  messages,\r\n  messageTypes,\r\n  selectedSchema,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(JsonCreator);\r\n","import React, { Component } from 'react';\r\nimport '../scss/App.scss';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport JsonEditor from \"../Components/JsonEditor\";\r\n\r\nimport { getAllMessageTypes } from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n// import { resetMessagePreview } from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport Link from \"../Components/Link\";\r\n// import SearchList from \"../Components/SearchList\";\r\n// import {setCurrentViewFromURI} from \"../ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_ActionCreators\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faArrowLeft} from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass EditMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageToEdit: this.props.messages.messagePreviewId,\r\n      messageList: this.props.messages.messages, // set to state for filter, without filter don't set props to state to avoid bugs\r\n      searchInput: '',\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(getAllMessageTypes());\r\n  }\r\n\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.props.messages.messages.length !== nextProps.messages.messages.length) {\r\n      this.setState({\r\n        messageToEdit: nextProps.messages.messagePreviewId,\r\n        messageList:  nextProps.messages.messages\r\n      });\r\n    }\r\n  }\r\n\r\n  filterMessages = (input) => {\r\n\r\n    let value = input.target.value;\r\n\r\n    let newState = this.props.messages.messages.filter(function(mes) {\r\n      return mes.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n    });\r\n\r\n    this.setState({\r\n      messageList: newState,\r\n      searchInput: value.toLowerCase()\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message library</h1>\r\n        <div className=\"flex-content-wrapper\">\r\n          <div id=\"preview\" className=\"flex-content flex-content--solo-item\">\r\n            <JsonEditor id=\"preview\"\r\n                         disabled={ false }\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes }) => ({\r\n  messages,\r\n  messageTypes\r\n});\r\n\r\nexport default connect(mapStateToProps)(EditMessage);\r\n","import React, { Component } from 'react';\r\nimport '../scss/App.scss';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport JsonCreator from \"../Components/JsonCreator\";\r\n\r\nimport {getAllMessageTypes} from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\nimport { resetMessagePreview } from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport Link from \"../Components/Link\";\r\nimport SearchList from \"../Components/SearchList\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {setSelectedSchema} from \"../ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators\";\r\n\r\nclass EditMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageList: this.props.messageTypes.messages, // set to state for filter, without filter don't set props to state to avoid bugs\r\n      searchInput: '',\r\n    };\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(resetMessagePreview());\r\n    this.props.dispatch(getAllMessageTypes());\r\n  };\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.props.messageTypes.messages.length !== nextProps.messageTypes.messages.length) {\r\n      this.setState({\r\n        messageList: nextProps.messageTypes.messages\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  filterMessages = (input) => {\r\n\r\n    let value = input.target.value;\r\n\r\n    let newState = this.props.messageTypes.messages.filter(function(mes) {\r\n      return mes.details.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n    });\r\n\r\n    this.setState({\r\n      messageList: newState,\r\n      searchQuery: value\r\n    });\r\n  };\r\n\r\n  setSelectedSchemaId = (item) => {\r\n    this.props.dispatch(setSelectedSchema(item._id));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message library</h1>\r\n         <div className=\"flex-content-wrapper\">\r\n          <div id=\"selection\" className=\"flex-content\">\r\n            <SearchList key=\"search-templates\"\r\n                        listData={this.state.messageList}\r\n                        searchQuery={this.state.searchQuery}\r\n                        filter={this.filterMessages}\r\n                        selected={this.props.umpireMenu.selectedSchemaID}\r\n                        setSelected={this.setSelectedSchemaId}\r\n                        placeholder={'Select template'}\r\n            />\r\n          </div>\r\n          <div id=\"preview\" className=\"flex-content flex-content--big\">\r\n            <JsonCreator id=\"preview\" disabled={false} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, umpireMenu, currentViewURI }) => ({\r\n  messages,\r\n  messageTypes,\r\n  umpireMenu,\r\n  currentViewURI\r\n});\r\n\r\nexport default connect(mapStateToProps)(EditMessage);\r\n","import JSONEditor from '@json-editor/json-editor'\r\n// -------- Editor class ---------------------------------------------------\r\n\r\n// create a JSON Editor, elementId is the id in which to render the editor\r\nfunction Editor(elementId) {\r\n    this.jsonEditor = null;\r\n    this.renderZone = typeof elementId === \"string\" ? document.getElementById(elementId) : elementId.current;\r\n}\r\n\r\n// Destroy editor, and remove it from view\r\nEditor.prototype.destroy = function() {\r\n    if(this.jsonEditor) {\r\n        this.jsonEditor.destroy();\r\n        this.jsonEditor = null;\r\n    }\r\n}\r\n\r\n// Recreate a new editor based on the given schema and start value\r\n// If schema is undefined, the editor is not recreated, but only destroyed\r\nEditor.prototype.updateSchema = function(schema) {\r\n    this.destroy();\r\n    this.jsonEditor = new JSONEditor(this.renderZone, { schema: schema });\r\n}\r\n\r\n// Validate JSON\r\nEditor.prototype.validate = function() {\r\n    return this.jsonEditor.validate();\r\n}\r\n\r\n// Get generated JSON\r\nEditor.prototype.getJSON = function() {\r\n    return this.jsonEditor.getValue();\r\n}\r\n\r\n// --------------- PreviewEditor subclass ------------------------------------\r\n\r\n// create a JSON Editor that doesn't allow specifying additional properties,\r\n// but only those specified in the schema can be set.\r\n// elementId is the id in which to render the editor,\r\nexport function PreviewEditor(elementId) {\r\n    Editor.call(this, elementId);\r\n}\r\n\r\n// Inherit Editor methods\r\nPreviewEditor.prototype = Object.create(Editor.prototype);\r\n\r\n// After `PreviewEditor.prototype = Object.create(Editor.prototype)` instruction,\r\n// PreviewEditor.prototype is a copy of Editor.prototype,\r\n// so the `constructor` property of PreviewEditor.prototype is Editor,\r\n// but a PreviewEditor object is created with the PreviewEditor constructor,\r\n// so we override the `constructor` property of PreviewEditor.prototype to PreviewEditor\r\nObject.defineProperty(PreviewEditor.prototype, 'constructor', {\r\n    value: PreviewEditor,\r\n    enumerable: false, // so that it does not appear in 'for in' loop\r\n    writable: true\r\n});\r\n\r\nPreviewEditor.prototype.updateSchema = function(schema) {\r\n    this.destroy();\r\n    this.jsonEditor = new JSONEditor(this.renderZone, {\r\n        schema: schema,\r\n        no_additional_properties: true\r\n    });\r\n}\r\n\r\n\r\n// --------------- SchemaEditor subclass -------------------------------------\r\n\r\n// create a JSON Editor for a JSON Schema, it adds a save button\r\n// to save the Schema to a file, and also\r\n// makes the 'Properties' buttons distinguishable to avoid confusion between\r\n// schema properties and object properties.\r\n// elementId is the id in which to render the editor,\r\nexport function SchemaEditor(elementId) {\r\n    Editor.call(this, elementId);\r\n\r\n    // Check whether the node is a properties button for an object,\r\n    // and not for the schema of an object named properties\r\n    var isObjectPropertiesButton = function(node) {\r\n        // Does the path end in '.properties'?\r\n        if(node.matches('div[data-schemapath$=\".properties\"] > h3 > div > button.json-editor-btntype-properties')) {\r\n            var containingDiv = node.parentElement.parentElement.parentElement;\r\n            var span = containingDiv.querySelector('h3 > span');\r\n\r\n            // Is it an object properties or a property named properties?\r\n            if(span && span.innerText === 'properties') {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    this.observer = new MutationObserver(function(mutationsList, observer) {\r\n        for(var mutation of mutationsList) {\r\n            mutation.addedNodes.forEach(function(node) {\r\n                if(node.nodeType === 1) {\r\n                    if(isObjectPropertiesButton(node)) {\r\n                        node.querySelector('span').innerText = 'Add/Remove';\r\n                    }\r\n                    else if(node.matches('button.json-editor-btntype-properties')) {\r\n                        // For other properties buttons, remove the 'Properties' label,\r\n                        // and use a cog as icon\r\n                        var icon = node.querySelector('i');\r\n                        icon.classList.remove('fa-pen');\r\n                        icon.classList.add('fa-cog');\r\n\r\n                        var span = node.querySelector('span');\r\n                        span.innerText = '';\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    this.observer.observe(this.renderZone, { childList: true, subtree: true });\r\n}\r\n\r\n// Inherit Editor methods\r\nSchemaEditor.prototype = Object.create(Editor.prototype);\r\n\r\n// After `SchemaEditor.prototype = Object.create(Editor.prototype)` instruction,\r\n// SchemaEditor.prototype is a copy of Editor.prototype,\r\n// so the `constructor` property of SchemaEditor.prototype is Editor,\r\n// but a SchemaEditor object is created with the SchemaEditor constructor,\r\n// so we override the `constructor` property of SchemaEditor.prototype to SchemaEditor\r\nObject.defineProperty(SchemaEditor.prototype, 'constructor', {\r\n    value: SchemaEditor,\r\n    enumerable: false, // so that it does not appear in 'for in' loop\r\n    writable: true\r\n});\r\n\r\n// Override the updateSchema function\r\nSchemaEditor.prototype.updateSchema = function(schema) {\r\n    this.destroy();\r\n\r\n    // Add extra validation logic for integer schemas that use the `range` format.\r\n    // For integer schemas that use the `range` format we require that minimum and maximum properties are set, too.\r\n    var range_integer_validator = function(schema, value, path) {\r\n        var errors = [];\r\n        if(value !== null && value.type === 'integer' && value.format === 'range') {\r\n            if(typeof value.minimum === 'undefined' || typeof value.maximum === 'undefined') {\r\n                errors.push({\r\n                    path: path,\r\n                    property: 'format',\r\n                    message: 'The range format requires that you specify both minimum and maximum properties, too.'\r\n                });\r\n            }\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    // Check that if minimum and maximum are specified, minimum <= maximum\r\n    var min_max_consistence_validator = function(schema, value, path) {\r\n        var errors = [];\r\n        if(value !== null && (value.type === 'integer' || value.type === 'number')) {\r\n            if(typeof value.minimum !== 'undefined' && typeof value.minimum !== 'undefined' && value.minimum > value.maximum) {\r\n                errors.push({\r\n                    path: path,\r\n                    property: 'maximum',\r\n                    message: 'The maximum value must be greater than or equal than the minimum value.'\r\n                });\r\n            }\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    // Recreate the JSON-Editor\r\n    this.jsonEditor = new JSONEditor(this.renderZone, {\r\n        schema: schema,\r\n        custom_validators: [ range_integer_validator, min_max_consistence_validator ]\r\n    });\r\n\r\n\r\n    // Add a save button\r\n    var filename = 'schema.json';\r\n    var saveButtonLabel = 'Save';\r\n\r\n    this.jsonEditor.on('ready', function() {\r\n        var button = this.root.getButton(saveButtonLabel, 'save', saveButtonLabel);\r\n        var button_holder = this.root.theme.getHeaderButtonHolder();\r\n        button_holder.appendChild(button);\r\n        this.root.header.parentNode.insertBefore(button_holder, this.root.header.nextSibling);\r\n\r\n        var jsonEditor = this;\r\n        button.addEventListener('click', function(e) {\r\n            e.preventDefault();\r\n            var contents = jsonEditor.getValue();\r\n            var blob = new Blob([JSON.stringify(contents, null, 2)], {\r\n                type: \"application/json;charset=utf-8\"\r\n            });\r\n\r\n            if(window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n                window.navigator.msSaveOrOpenBlob(blob, filename);\r\n            }\r\n            else {\r\n                var a = document.createElement('a');\r\n                a.download = filename;\r\n                a.href = URL.createObjectURL(blob);\r\n                a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n\r\n                a.dispatchEvent(new MouseEvent('click', {\r\n                    'view': window,\r\n                    'bubbles': true,\r\n                    'cancelable': false\r\n                }));\r\n            }\r\n        }, false);\r\n    });\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Card, CardHeader, CardBody, CardFooter } from 'reactstrap';\r\nimport { SchemaEditor } from './json-schema-editor/editor';\r\nimport PropTypes from 'prop-types';\r\nimport JSONEditor from '@json-editor/json-editor';\r\n\r\nclass JsonSchemaEditor extends Component {\r\n\r\n  constructor(props, content) {\r\n    super(props, content);\r\n\r\n    this.schemaEditor = null;\r\n    this.editorBox = React.createRef();\r\n    this.onChange = this.onChange.bind(this);\r\n    this.updateEditor = this.updateEditor.bind(this);\r\n    this.saved = \"\";\r\n    this.value = this.props.defaultValue;\r\n  }\r\n\r\n  onChange(newValue, e) {\r\n    const errors = this.schemaEditor.validate();\r\n    console.log(errors);\r\n    if(errors.length) {\r\n      alert('Invalid schema');\r\n    }\r\n    else {\r\n      if(this.props.onChange) {\r\n        this.value = this.schemaEditor.jsonEditor.getValue();\r\n        this.props.onChange(this.schemaEditor.getJSON());\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.schemaEditor = new SchemaEditor(this.editorBox);\r\n    this.updateEditor(this.props.schema, this.props.options);\r\n  }\r\n\r\n  componentWillReceiveProps({schema, options}) {\r\n    this.updateEditor(schema, options);\r\n  }\r\n\r\n  updateEditor(schema, options) {\r\n    try {\r\n      const newJson = JSON.stringify(schema);\r\n      if(newJson !== this.save || options.counter !== this.props.options.counter) {\r\n\r\n        JSONEditor.defaults.options.object_layout = options.layout;\r\n        JSONEditor.defaults.options = {\r\n          ...JSONEditor.defaults.options,\r\n          ...options.booleanOptions\r\n        };\r\n\r\n        this.save = newJson;\r\n        this.schemaEditor.updateSchema(schema);\r\n        this.schemaEditor.jsonEditor.setValue(this.value);\r\n        this.schemaEditor.jsonEditor.on('change', this.onChange);\r\n      }\r\n    }\r\n    catch(err) {\r\n      alert('Invalid json schema');\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          Schema Editor\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div id=\"schema-editor\" ref={this.editorBox} />\r\n        </CardBody>\r\n        <CardFooter>\r\n        </CardFooter>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nJsonSchemaEditor.propTypes = {\r\n  schema: PropTypes.object.isRequired,\r\n  onChange: PropTypes.func\r\n};\r\n\r\nexport default JsonSchemaEditor;\r\n","import React, { Component } from 'react';\r\nimport { Card, CardHeader, CardBody, CardFooter } from 'reactstrap';\r\nimport { PreviewEditor } from './json-schema-editor/editor';\r\n\r\nclass EditorPreview extends Component {\r\n\r\n  constructor(props, content) {\r\n    super(props, content);\r\n\r\n    this.previewBox = React.createRef();\r\n    this.editorPreview = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.editorPreview = new PreviewEditor(this.previewBox);\r\n  }\r\n\r\n  componentWillReceiveProps({ schema }) {\r\n    this.editorPreview.destroy();\r\n    if (schema !== null) this.editorPreview.updateSchema(schema);\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          Editor Preview\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div id='editor-preview' ref={this.previewBox}/>\r\n        </CardBody>\r\n        <CardFooter>\r\n          The Editor Preview will be updated as you make changes in the Schema Editor\r\n        </CardFooter>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditorPreview;\r\n","import React, { Component } from 'react';\r\nimport jsonMetaSchema from './data.json';\r\nimport JSONEditor from '@json-editor/json-editor';\r\nimport Editor from './jsonEditor';\r\nimport Preview from './editorPreview';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\nimport { setPreviewSchema } from \"../../ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass SchemaEditor extends Component {\r\n\r\n  constructor(props, content) {\r\n    super(props, content);\r\n\r\n    JSONEditor.defaults.options.iconlib = \"fontawesome5\";\r\n    JSONEditor.defaults.options.theme   = 'bootstrap4';\r\n    this.updateMetaSchema = this.updateMetaSchema.bind(this);\r\n    this.updatePreviewSchema = this.updatePreviewSchema.bind(this);\r\n    this.updateOptions = this.updateOptions.bind(this);\r\n\r\n    this.schemaEditor = null;\r\n    this.editorPreview = null;\r\n\r\n    this.defaultValue = {\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"title\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"Date\": {\r\n          \"type\": \"string\",\r\n          \"format\": \"datetime-local\"\r\n        },\r\n        \"Status\": {\r\n          \"type\": \"string\",\r\n          \"enum\": [\r\n            \"Minor\",\r\n            \"Major\",\r\n            \"Critical\"\r\n          ]\r\n        },\r\n        \"Description\": {\r\n          \"type\": \"string\",\r\n          \"format\": \"textarea\"\r\n        }\r\n      },\r\n      \"title\": \"Machinery Failure\",\r\n      \"format\": \"grid\"\r\n    };\r\n\r\n\r\n    if (this.props.schemaId) {\r\n      this.defaultValue = this.props.messageTypes.messages.find((mes) => mes._id === this.props.schemaId).details;\r\n    }\r\n\r\n\r\n    this.state = {\r\n      metaSchema: jsonMetaSchema,\r\n      previewSchema: null,\r\n      options: {\r\n        layout: JSONEditor.defaults.options.object_layout,\r\n        booleanOptions: {}\r\n      }\r\n    }\r\n  }\r\n\r\n  updatePreviewSchema(schema) {\r\n    console.log(\"preview update\");\r\n    this.setState({previewSchema: schema});\r\n\r\n    this.props.dispatch(setPreviewSchema(schema));\r\n  }\r\n\r\n  updateOptions(options) {\r\n    console.log(\"options update\");\r\n    this.setState({options: options});\r\n  }\r\n\r\n  updateMetaSchema(schema) {\r\n    console.log(\"editor update\");\r\n    this.setState({metaschema: schema});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"flex-content flex-content--left50\">\r\n          <Editor\r\n            schema={this.state.metaSchema}\r\n            onChange={this.updatePreviewSchema}\r\n            options={this.state.options}\r\n            defaultValue={this.defaultValue}\r\n          />\r\n        </div>\r\n        <div className=\"flex-content flex-content--right50\">\r\n          <Preview schema={this.state.previewSchema}/>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ umpireMenu, }) => ({\r\n  umpireMenu,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SchemaEditor);","import React, { Component } from 'react';\r\nimport '../scss/App.scss';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getAllMessageTypes,\r\n  updateMessageType } from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n\r\nimport { resetMessagePreview } from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport Link from \"../Components/Link\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport SchemaEditor from \"../Components/jsonSchemaEditor/index\";\r\n\r\nclass EditMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageList: this.props.messageTypes.messages, // set to state for filter, without filter don't set props to state to avoid bugs\r\n      searchInput: '',\r\n    };\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(resetMessagePreview());\r\n    this.props.dispatch(getAllMessageTypes());\r\n  };\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.props.messageTypes.messages.length !== nextProps.messageTypes.messages.length) {\r\n      this.setState({\r\n        messageList: nextProps.messageTypes.messages\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  filterMessages = (input) => {\r\n\r\n    let value = input.target.value;\r\n\r\n    let newState = this.props.messageTypes.messages.filter(function(mes) {\r\n      return mes.details.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n    });\r\n\r\n    this.setState({\r\n      messageList: newState,\r\n      searchInput: value.toLowerCase()\r\n    });\r\n  };\r\n\r\n  updateSchema = () => {\r\n    this.props.dispatch(updateMessageType(this.props.umpireMenu.previewSchema, this.props.umpireMenu.selectedSchemaID));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message template</h1>\r\n        <div className=\"button-wrap\">\r\n          <span onClick={this.updateSchema} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span>\r\n        </div>\r\n        <div className=\"flex-content-wrapper\">\r\n          <SchemaEditor\r\n            schemaId={this.props.umpireMenu.selectedSchemaID}\r\n            messageTypes={this.props.messageTypes}\r\n          />\r\n        </div>\r\n        <div className=\"button-wrap\">\r\n          <span onClick={this.updateSchema} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, currentViewURI, umpireMenu }) => ({\r\n  messages,\r\n  messageTypes,\r\n  currentViewURI,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(EditMessage);\r\n","import React, { Component } from 'react';\r\nimport '../scss/App.scss';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getAllMessageTypes,\r\n  createMessageType\r\n} from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n\r\nimport { resetMessagePreview } from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport Link from \"../Components/Link\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport SchemaEditor from \"../Components/jsonSchemaEditor/index\";\r\nimport {setSelectedSchema} from \"../ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators\";\r\n\r\nclass EditMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageList: this.props.messageTypes.messages, // set to state for filter, without filter don't set props to state to avoid bugs\r\n      searchInput: '',\r\n    };\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(resetMessagePreview());\r\n    this.props.dispatch(getAllMessageTypes());\r\n  };\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.props.messageTypes.messages.length !== nextProps.messageTypes.messages.length) {\r\n      this.setState({\r\n        messageList: nextProps.messageTypes.messages\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  saveSchema = () => {\r\n    this.props.dispatch(createMessageType(this.props.umpireMenu.previewSchema));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message template</h1>\r\n        <div className=\"button-wrap\">\r\n          <span onClick={this.saveSchema} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span>\r\n        </div>\r\n        <div className=\"flex-content-wrapper\">\r\n          <SchemaEditor />\r\n        </div>\r\n        <div className=\"button-wrap\">\r\n          <span onClick={this.saveSchema} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, currentViewURI, umpireMenu }) => ({\r\n  messages,\r\n  messageTypes,\r\n  currentViewURI,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(EditMessage);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport '../../scss/App.scss';\r\n\r\nclass DropdownInput extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.props.updateStore(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <select disabled={this.props.disabled} value={this.props.data ? this.props.data : \"placeholder\"} onChange={this.onChange}>\r\n        <option value=\"placeholder\">{this.props.placeholder}</option>\r\n        { this.props.selectOptions.map((opt, i) => {\r\n          return (<option key={`${opt}${i}`} value={opt}>{opt}</option>)\r\n        })}\r\n      </select>\r\n    );\r\n  }\r\n}\r\n\r\nDropdownInput.propTypes = {\r\n  updateStore: PropTypes.func.isRequired,\r\n  selectOptions: PropTypes.array.isRequired,\r\n  // options: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nexport default DropdownInput;\r\n","import React, { Component } from 'react';\r\n\r\nclass Row extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"flex-content flex-content--row\">\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Row;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport '../../scss/App.scss';\r\n\r\nclass TextArea extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.props.updateStore(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <textarea value={this.props.data} onChange={this.onChange} style={{resize: \"none\"}}></textarea>\r\n    );\r\n  }\r\n}\r\n\r\nTextArea.propTypes = {\r\n  updateStore: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default TextArea;\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport TextInput from \"../../Components/Inputs/TextInput\";\r\nimport DropdownInput from \"../../Components/Inputs/DropdownInput\";\r\nimport Row from \"../../Components/Layout/Row\";\r\n\r\nimport { setGameData } from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\nimport TextArea from \"../../Components/Inputs/TextArea\";\r\n\r\nclass SettingsTab extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  };\r\n\r\n\r\n  updateDescription = (value) => {\r\n    this.props.dispatch(setGameData({gameDescription: value}));\r\n  };\r\n\r\n  updateSpatialRepresentation = (value) => {\r\n    this.props.dispatch(setGameData({spatialRepresentation: value}));\r\n  };\r\n\r\n  updatePlanningInterval = (value) => {\r\n    this.props.dispatch(setGameData({planningInterval: value}));\r\n  };\r\n\r\n  updateReplayInterval = (value) => {\r\n    this.props.dispatch(setGameData({replayInterval: value}));\r\n  };\r\n\r\n  updateTurnStrategy = (value) => {\r\n    this.props.dispatch(setGameData({turnStrategy: value}));\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"flex-content-wrapper\">\r\n\r\n        <div className=\"flex-content flex-content--left50\">\r\n          <p className=\"heading--sml\">Game description &amp; objectives</p>\r\n          <TextArea\r\n            updateStore={this.updateDescription}\r\n            data={this.props.wargame.tabs[this.props.wargame.currentTab].data.gameDescription}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex-content flex-content--right50\">\r\n\r\n          <Row>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml\">Spatial Representation</p>\r\n            </div>\r\n            <div className=\"flex-content flex-content--fill\">\r\n              <DropdownInput\r\n                updateStore={this.updateSpatialRepresentation}\r\n                selectOptions={[\"opt1\", \"opt2\", \"opt3\"]}\r\n                placeholder=\"Select spatial representation\"\r\n                data={this.props.wargame.tabs[this.props.wargame.currentTab].data.spatialRepresentation}\r\n              />\r\n            </div>\r\n          </Row>\r\n\r\n          <Row>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml\">Planning Interval</p>\r\n            </div>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <TextInput\r\n                updateStore={this.updatePlanningInterval}\r\n                options={{ numInput: true }}\r\n                data={this.props.wargame.tabs[this.props.wargame.currentTab].data.planningInterval}\r\n                validInput={true}\r\n              />\r\n            </div>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml heading--mleft\">min.</p>\r\n            </div>\r\n          </Row>\r\n\r\n          <Row>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml\">Replay interval</p>\r\n            </div>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <TextInput\r\n                updateStore={this.updateReplayInterval}\r\n                options={{ numInput: true }}\r\n                data={this.props.wargame.tabs[this.props.wargame.currentTab].data.replayInterval}\r\n                validInput={true}\r\n              />\r\n            </div>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml heading--mleft\">min.</p>\r\n            </div>\r\n          </Row>\r\n\r\n          <Row>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml\">Turn Strategy</p>\r\n            </div>\r\n            <div className=\"flex-content flex-content--fill\">\r\n              <DropdownInput\r\n                updateStore={this.updateTurnStrategy}\r\n                selectOptions={[\"opt1\", \"opt2\", \"opt3\"]}\r\n                placeholder=\"Not implemented yet\"\r\n                data={this.props.wargame.tabs[this.props.wargame.currentTab].data.turnStrategy}\r\n                // disabled={true}\r\n              />\r\n            </div>\r\n          </Row>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame }) => ({\r\n  wargame,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SettingsTab);\r\n","import React, { Component } from 'react';\r\nimport classNames from \"classnames\";\r\nimport '../scss/App.scss';\r\nimport {PropTypes} from \"prop-types\";\r\n\r\nclass TabsSearchList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  setSelected = (item) => {\r\n    this.props.setSelected(item);\r\n  };\r\n\r\n  createList() {\r\n    var data = this.props.listData;\r\n\r\n    var list = [];\r\n    for (var prop in data) {\r\n      let active = prop === this.props.selected ? 'active' : '';\r\n      list.unshift(<span href=\"#\" onClick={this.setSelected.bind(this, prop)} key={prop} className={classNames({\"list-title\": true, active})}>{prop}</span>);\r\n    }\r\n    return list;\r\n  }\r\n\r\n  render() {\r\n\r\n    var that = this;\r\n\r\n    return (\r\n      <div className=\"list\">\r\n        {this.props.filter ?\r\n          <input type=\"text\" className=\"list-input\" key=\"search-templates\" placeholder={this.props.placeholder} onChange={ this.props.filter } value={this.props.searchQuery} />\r\n          : false\r\n        }\r\n        <div className=\"list-list\">\r\n          { this.createList() }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTabsSearchList.propTypes = {\r\n  listData: PropTypes.object.isRequired,\r\n  filter: PropTypes.func,\r\n  selected: PropTypes.string.isRequired,\r\n  setSelected: PropTypes.func.isRequired,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nexport default TabsSearchList;\r\n","import React, { Component } from 'react';\r\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nclass RemovableGroupItem extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <span className=\"group-item\" key={this.props.children}>\r\n        {this.props.children}\r\n        <FontAwesomeIcon icon={faTimes} />\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RemovableGroupItem;\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport TabsSearchList from \"../../Components/TabsSearchList\";\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport {\r\n  setSelectedForce,\r\n  setForceOverview\r\n} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\nimport '../../scss/App.scss';\r\nimport TextArea from \"../../Components/Inputs/TextArea\";\r\nimport RemovableGroupItem from \"../../Components/Layout/RemovableGroupItem\";\r\n\r\nclass ForcesTab extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  };\r\n\r\n  openModal = () => {\r\n    this.props.dispatch(modalAction.open(\"addForce\"));\r\n  };\r\n\r\n  setSelected = (force) => {\r\n    this.props.dispatch(setSelectedForce(force));\r\n  };\r\n\r\n  updateOverview = (overview) => {\r\n    this.props.dispatch(setForceOverview(overview));\r\n  };\r\n\r\n  createForceEditor() {\r\n\r\n    let curTab = this.props.wargame.currentTab;\r\n    let selectedForce = this.props.wargame.tabs[curTab].data.selectedForce;\r\n\r\n    return (\r\n      <div className=\"flex-content--fill forcesTab\">\r\n\r\n        <h3>{selectedForce}</h3>\r\n\r\n        <span className=\"link link--secondary link--noIcon link--disabled\">Change icon</span>\r\n\r\n        <p className=\"heading--sml\">Overview &amp; Objectives</p>\r\n        <TextArea\r\n          updateStore={this.updateOverview}\r\n          data={this.props.wargame.tabs[curTab].data.forces[selectedForce].overview}\r\n        />\r\n\r\n        <p className=\"heading--sml\">Roles</p>\r\n        <span className=\"link link--secondary link--noIcon link--disabled\">Add a new role</span>\r\n\r\n        <div className=\"flex-content\">\r\n          {this.props.wargame.tabs[curTab].data.forces[selectedForce].roles.map((role) => {\r\n            return (<RemovableGroupItem key={role}>{role}</RemovableGroupItem>)\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n\r\n    let curTab = this.props.wargame.currentTab;\r\n    let selectedForce = this.props.wargame.tabs[curTab].data.selectedForce;\r\n\r\n    return (\r\n      <div className=\"flex-content-wrapper\">\r\n        <div className=\"flex-content\">\r\n          <span className=\"link link--noIcon\" onClick={this.openModal}>Add a new force</span>\r\n          <TabsSearchList listData={this.props.wargame.tabs[curTab].data.forces}\r\n                          setSelected={this.setSelected}\r\n                          selected={selectedForce}\r\n          />\r\n        </div>\r\n\r\n        {selectedForce ?\r\n          this.createForceEditor()\r\n        : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// temp use allMessages\r\nconst mapStateToProps = ({ messages, wargame }) => ({\r\n  messages,\r\n  wargame,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ForcesTab);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../../scss/App.scss';\r\nimport Select from \"react-select\";\r\n\r\nclass EditSubscriptionRow extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      subscriptionId: this.props.data.subscriptionId,\r\n      editSubscriptionForce: {value: this.props.data.force, label: this.props.data.force},\r\n      editSubscriptionRole: {value: this.props.data.role, label: this.props.data.role},\r\n      editSubscriptionTemplates: this.props.data.templates,\r\n    };\r\n  }\r\n\r\n  updateSubscriptionForce = (option) => {\r\n    this.setState({\r\n      editSubscriptionForce: option,\r\n    });\r\n  };\r\n\r\n  updateSubscriptionRole = (option) => {\r\n    this.setState({\r\n      editSubscriptionRole: option,\r\n    });\r\n  };\r\n\r\n  updateSubscriptionTemplates = (option) => {\r\n    this.setState({\r\n      editSubscriptionTemplates: option,\r\n    });\r\n  };\r\n\r\n  updateChannel = () => {\r\n    let subscriptionData = {\r\n      force: this.state.editSubscriptionForce.label,\r\n      role: this.state.editSubscriptionRole.label,\r\n      templates: this.state.editSubscriptionTemplates,\r\n    };\r\n    this.props.updateRecipient(this.state.subscriptionId, subscriptionData);\r\n    this.props.cancelEdit();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <tr>\r\n        <td>\r\n          <Select\r\n            value={this.state.editSubscriptionForce}\r\n            options={this.props.forceOptions}\r\n            onChange={this.updateSubscriptionForce}\r\n          />\r\n        </td>\r\n        <td>\r\n          <Select\r\n            value={this.state.editSubscriptionRole}\r\n            options={this.props.roleOptions}\r\n            onChange={this.updateSubscriptionRole}\r\n          />\r\n        </td>\r\n        <td>\r\n          <Select\r\n            value={this.state.editSubscriptionTemplates}\r\n            options={this.props.templateOptions}\r\n            onChange={this.updateSubscriptionTemplates}\r\n            isMulti\r\n          />\r\n        </td>\r\n        <td>\r\n          <button\r\n            className=\"btn btn-action btn-action--secondary\"\r\n            onClick={this.updateChannel}\r\n            // disabled={!this.state.selectedTemplates.length > 0}\r\n          >\r\n            Save</button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default connect()(EditSubscriptionRow);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\n\r\nimport {\r\n  addRecipientToChannel,\r\n  updateRecipient,\r\n  removeRecipient,\r\n} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators.js\";\r\n\r\nimport EditSubscriptionRow from \"./EditSubscriptionRow\";\r\nimport Select from \"react-select\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTrash,\r\n  faPencilAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass ChannelsTable extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var tabs = Object.values(this.props.wargame.tabs);\r\n    let forces = tabs.find((d) => d.name === \"Forces\").data.forces;\r\n\r\n    let forceOptions = [];\r\n    for (let prop in forces) {\r\n      forceOptions.push({\r\n        value: prop,\r\n        label: prop,\r\n      });\r\n    }\r\n\r\n    let templateOptions = this.props.messageTypes.messages.map((messageType) => {\r\n      return {\r\n        value: messageType._id,\r\n        label: messageType.title,\r\n      }\r\n    });\r\n\r\n    this.state = {\r\n      selectedForce: {value: null, label: null},\r\n      forceOptions: forceOptions,\r\n      selectedRole:  {value: null, label: null},\r\n      roleOptions: [],\r\n      selectedTemplates:  [],\r\n      templateOptions: templateOptions,\r\n      subscriptionToEdit: null,\r\n      editSubscriptionForce: '',\r\n      editSubscriptionRole: '',\r\n      editSubscriptionTemplates: [],\r\n    }\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState, nextContext) {\r\n\r\n    if (nextState.selectedForce.value === null) return;\r\n\r\n    if (this.state.selectedForce.value !== nextState.selectedForce.value) {\r\n\r\n      var tabs = Object.values(this.props.wargame.tabs);\r\n\r\n      let roleOptions = [];\r\n      var roles = tabs.find((d) => d.name === \"Forces\").data.forces[nextState.selectedForce.value].roles;\r\n\r\n      roles.forEach((role) => {\r\n\r\n        roleOptions.push({\r\n          value: role,\r\n          label: role,\r\n        });\r\n      });\r\n\r\n      this.setState({\r\n        roleOptions,\r\n      });\r\n    }\r\n  }\r\n\r\n  createRow(data, i) {\r\n    var row = [];\r\n    for (var prop in data) {\r\n      if (prop === \"subscriptionId\") continue;\r\n\r\n      var value = '';\r\n      if (typeof data[prop] !== \"string\") {\r\n        data[prop].forEach((item, i) => {\r\n          value += item.label;\r\n          if (i !== data[prop].length-1) value+=', ';\r\n        });\r\n      } else {\r\n        value = data[prop];\r\n      }\r\n      row.push(<td key={`${value}i`}>{value}</td>)\r\n    }\r\n    row.push(\r\n      <td key={`edit-delete${i}`}>\r\n        <FontAwesomeIcon icon={faTrash} onClick={this.removeSubscription.bind(this, data.subscriptionId)} />\r\n        <FontAwesomeIcon icon={faPencilAlt} onClick={this.editSubscription.bind(this, data.subscriptionId)} />\r\n      </td>\r\n    );\r\n    return (<tr key={`row-${i}`}>{row}</tr>);\r\n  }\r\n\r\n  removeSubscription(subscriptionId) {\r\n    this.props.dispatch(removeRecipient(subscriptionId))\r\n  };\r\n\r\n  editSubscription(subscriptionId) {\r\n    this.setState({\r\n      subscriptionToEdit: subscriptionId,\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      subscriptionToEdit: \"\",\r\n    });\r\n  };\r\n\r\n  updateRecipient = (id, data) => {\r\n    this.props.dispatch(updateRecipient(id, data));\r\n  };\r\n\r\n  setSelectedForce = (option) => {\r\n    this.setState({\r\n      selectedForce: option,\r\n    });\r\n  };\r\n\r\n  setSelectedRole = (option) => {\r\n    this.setState({\r\n      selectedRole: option,\r\n    });\r\n  };\r\n\r\n  setSelectedTemplate = (option) => {\r\n    this.setState({\r\n      selectedTemplates: option,\r\n    });\r\n  };\r\n\r\n  addToChannel = () => {\r\n\r\n    let channelData = {\r\n      force: this.state.selectedForce.value,\r\n      role: this.state.selectedRole.value,\r\n      templates: this.state.selectedTemplates,\r\n    };\r\n    this.props.dispatch(addRecipientToChannel(channelData));\r\n\r\n    this.setState({\r\n      selectedForce: {value: null, label: null},\r\n      selectedRole: {value: null, label: null},\r\n      selectedTemplates: [],\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"flex-content\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Force</th>\r\n              <th>Roles</th>\r\n              <th>Templates</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.data.map((data, i) => {\r\n              return data.subscriptionId === this.state.subscriptionToEdit ? <EditSubscriptionRow\r\n                                                                                  key={data.subscriptionId}\r\n                                                                                  data={data}\r\n                                                                                  forceOptions={this.state.forceOptions}\r\n                                                                                  roleOptions={this.state.roleOptions}\r\n                                                                                  templateOptions={this.state.templateOptions}\r\n                                                                                  cancelEdit={this.cancelEdit}\r\n                                                                                  updateRecipient={this.updateRecipient}\r\n                                                                            /> : this.createRow(data, i);\r\n            })}\r\n            <tr>\r\n              <td>\r\n                <Select\r\n                  value={this.state.selectedForce}\r\n                  options={this.state.forceOptions}\r\n                  onChange={this.setSelectedForce}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Select\r\n                  value={this.state.selectedRole}\r\n                  options={this.state.roleOptions}\r\n                  onChange={this.setSelectedRole}\r\n                  isDisabled={!this.state.selectedForce.value}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Select\r\n                  value={this.state.selectedTemplates}\r\n                  options={this.state.templateOptions}\r\n                  onChange={this.setSelectedTemplate}\r\n                  isDisabled={!this.state.selectedRole.value}\r\n                  isMulti\r\n                />\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-action btn-action--secondary\"\r\n                  onClick={this.addToChannel}\r\n                  disabled={!this.state.selectedTemplates.length > 0}>\r\n                  Save</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame, messageTypes }) => ({\r\n  wargame,\r\n  messageTypes,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ChannelsTable);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport {\r\n  setSelectedChannel,\r\n  setForceOverview\r\n} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nimport {\r\n  getAllMessageTypes,\r\n} from \"../../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n\r\nimport '../../scss/App.scss';\r\n\r\nimport TabsSearchList from \"../../Components/TabsSearchList\";\r\nimport ChannelsTable from \"../../Components/Layout/ChannelsTable\";\r\n\r\nclass ForcesTab extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      channelList: this.props.wargame.tabs[this.props.wargame.currentTab].data.channels,\r\n      searchQuery: '',\r\n    }\r\n  };\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    const curPropsState = Object.keys(this.props.wargame.tabs[this.props.wargame.currentTab].data.channels);\r\n    const nextPropsState = Object.keys(nextProps.wargame.tabs[nextProps.wargame.currentTab].data.channels);\r\n\r\n    if (curPropsState.length !== nextPropsState.length) {\r\n      this.setState({\r\n        channelList: nextProps.wargame.tabs[nextProps.wargame.currentTab].data.channels\r\n      });\r\n    }\r\n  }\r\n\r\n  openModal = () => {\r\n    this.props.dispatch(modalAction.open(\"addChannel\"));\r\n  };\r\n\r\n  setSelected = (force) => {\r\n    this.props.dispatch(setSelectedChannel(force));\r\n  };\r\n\r\n  updateOverview = (overview) => {\r\n    this.props.dispatch(setForceOverview(overview));\r\n  };\r\n\r\n  filterChannels = (input) => {\r\n\r\n    let value = input.target.value;\r\n\r\n    let list = this.props.wargame.tabs[this.props.wargame.currentTab].data.channels;\r\n\r\n    let newState = {};\r\n    for (let prop in list) {\r\n      if (prop.toLowerCase().indexOf(value.toLowerCase()) > -1) newState[prop] = list[prop];\r\n    }\r\n\r\n    this.setState({\r\n      channelList: newState,\r\n      searchQuery: value\r\n    });\r\n  };\r\n\r\n  createChannelEditor() {\r\n\r\n    let curTab = this.props.wargame.currentTab;\r\n    let selectedChannel = this.props.wargame.tabs[curTab].data.selectedChannel;\r\n\r\n    return (\r\n      <div className=\"flex-content--fill channelsTab\">\r\n        <h3>{selectedChannel}</h3>\r\n\r\n        <p className=\"heading--sml\">Participants and messages</p>\r\n\r\n        <ChannelsTable data={this.props.wargame.tabs[curTab].data.channels[selectedChannel]} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n\r\n    const curTab = this.props.wargame.currentTab;\r\n    const selectedChannel = this.props.wargame.tabs[curTab].data.selectedChannel;\r\n\r\n    return (\r\n      <div className=\"flex-content-wrapper\">\r\n        <div className=\"flex-content\">\r\n          <span className=\"link link--noIcon\" onClick={this.openModal}>Add channel</span>\r\n          <TabsSearchList listData={this.state.channelList}\r\n                          filter={this.filterChannels}\r\n                          searchQuery={this.state.searchQuery}\r\n                          setSelected={this.setSelected}\r\n                          selected={selectedChannel}\r\n                          placeholder={\"Search channels\"}\r\n          />\r\n        </div>\r\n\r\n        {selectedChannel ?\r\n          this.createChannelEditor()\r\n        : null}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// temp use allMessages\r\nconst mapStateToProps = ({ messages, wargame }) => ({\r\n  messages,\r\n  wargame,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ForcesTab);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SettingsTab from \"./TabViews/SettingsTab\";\r\nimport ForcesTab from \"./TabViews/ForcesTab\";\r\nimport ChannelsTab from \"./TabViews/ChannelsTab\";\r\nimport ValidationNotification from \"../Components/ValidationNotification\";\r\nimport {getAllMessageTypes} from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n});\r\n\r\n\r\nclass TabbedView extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    console.log(this.props.tabs);\r\n\r\n    this.state = {\r\n      value: 0,\r\n      tabs: Object.values(this.props.tabs).map((item) => item.name),\r\n      invalidFields: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setCurrentTab(0);\r\n  }\r\n\r\n\r\n  handleChange = (event, value) => {\r\n    this.setState({ value });\r\n    this.props.setCurrentTab(value);\r\n  };\r\n\r\n  render() {\r\n\r\n    const { value } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className={classes.root}>\r\n          <AppBar position=\"static\" color=\"default\">\r\n            <Tabs\r\n              value={value}\r\n              onChange={this.handleChange}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              centered\r\n            >\r\n              { this.state.tabs.map((tabName, i) => <Tab key={tabName + i} label={tabName} />) }\r\n            </Tabs>\r\n          </AppBar>\r\n          {value === 0 && <TabContainer><SettingsTab /></TabContainer>}\r\n          {/*{value === 1 && <TabContainer>PlatformTypes.jsx</TabContainer>}*/}\r\n          {value === 1 && <TabContainer><ForcesTab /></TabContainer>}\r\n          {/*{value === 3 && <TabContainer>BackHistory.jsx</TabContainer>}*/}\r\n          {/*{value === 4 && <TabContainer>Positions.jsx</TabContainer>}*/}\r\n          {value === 2 && <TabContainer><ChannelsTab /></TabContainer>}\r\n          {/*{value === 6 && <TabContainer>PlayControl.jsx</TabContainer>}*/}\r\n        </div>\r\n        <ValidationNotification validation={ this.props.wargame.validation } />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame }) => ({\r\n  wargame\r\n});\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(TabbedView));\r\n","import React, { Component } from 'react';\r\n\r\nclass ProgressBar extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"progress\">\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProgressBar;","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {\r\n  setCurrentTab,\r\n  setWargameTitle,\r\n  updateWargame,\r\n  renameWargame,\r\n  validateWargameData,\r\n} from \"../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nimport TabbedView from \"./TabbedView\";\r\nimport ProgressBar from \"../Components/ProgressBar/ProgressBar\";\r\n\r\nimport Link from \"../Components/Link\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport classNames from \"classnames\";\r\nimport TextInput from \"../Components/Inputs/TextInput\";\r\nimport {modalAction} from \"../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport ValidationNotification from \"../Components/ValidationNotification\";\r\nimport {getAllMessageTypes} from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n\r\nclass GameSetup extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(getAllMessageTypes());\r\n  }\r\n\r\n  setCurrentTab = (tab) => {\r\n    this.props.dispatch(setCurrentTab(tab));\r\n  };\r\n\r\n  createIndicators() {\r\n    const that = this;\r\n\r\n    return Object.entries(this.props.wargame.tabs).map(function (entry) {\r\n\r\n      let active = that.props.wargame.currentTab === parseInt(entry[0]);\r\n      let completed = entry[1].complete;\r\n      return (<div key={entry[0]} className={classNames(\"progress-indicator\", {\"progress-indicator--active\": active, \"progress-indicator--complete\": completed})}></div>);\r\n    });\r\n  }\r\n\r\n  updateWargameTitle = (name) => {\r\n    this.props.dispatch(setWargameTitle(name));\r\n  };\r\n\r\n\r\n  saveWargame = () => {\r\n    if (this.checkAllValid()) {\r\n      this.props.dispatch(updateWargame(this.props.wargame.currentWargame, this.props.wargame.tabs, this.props.wargame.wargameTitle));\r\n    }\r\n  };\r\n\r\n  checkAllValid = () => {\r\n    return Object.values(this.props.wargame.validation).reduce((entry) => entry === true);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"view-wrapper\">\r\n          <div id=\"sidebar\">\r\n            <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n          </div>\r\n          <div className=\"flex-content-wrapper flex-content-wrapper--distribute\">\r\n            <TextInput\r\n              id=\"title-editable\"\r\n              updateStore={this.updateWargameTitle}\r\n              options={{numInput: false}}\r\n              data={this.props.wargame.wargameTitle}\r\n              validInput={this.props.wargame.validation.validWargameName}\r\n            />\r\n            <span className={classNames({\"link\": true, \"link--noIcon\": true, \"link--disabled\": !this.checkAllValid()})} onClick={this.saveWargame}>save</span>\r\n            <ProgressBar>\r\n              {this.createIndicators()}\r\n            </ProgressBar>\r\n          </div>\r\n          <TabbedView\r\n            tabs={this.props.wargame.tabs}\r\n            setCurrentTab={this.setCurrentTab}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n// temp use allMessages\r\nconst mapStateToProps = ({ wargame }) => ({\r\n  wargame\r\n});\r\n\r\nexport default connect(mapStateToProps)(GameSetup);\r\n","import ActionConstant from '../ActionConstants';\r\nimport * as wargamesApi from \"../../api/wargames_api\";\r\nimport * as messageTemplatesApi from \"../../api/messageTypes_api\";\r\n\r\nconst setCurrentWargame = (data) => ({\r\n  type: ActionConstant.SET_CURRENT_WARGAME_PLAYER,\r\n  payload: data\r\n});\r\n\r\nexport const setForce = (data) => ({\r\n  type: ActionConstant.SET_FORCE,\r\n  payload: data\r\n});\r\n\r\nexport const setRole = (data) => ({\r\n  type: ActionConstant.SET_ROLE,\r\n  payload: data\r\n});\r\n\r\nexport const setFilteredChannels = () => ({\r\n  type: ActionConstant.SET_FILTERED_CHANNELS,\r\n});\r\n\r\nexport const setChannel = (data) => ({\r\n  type: ActionConstant.SET_CHANNEL,\r\n  payload: data,\r\n});\r\n\r\nexport const setMessageSchema = (schema) => ({\r\n  type: ActionConstant.SET_MESSAGE_SCHEMA,\r\n  payload: schema,\r\n});\r\n\r\nexport const setWargameMessages = (messages) => ({\r\n  type: ActionConstant.SET_LATEST_MESSAGES,\r\n  payload: messages,\r\n});\r\n\r\nexport const getWargame = () => {\r\n  return async (dispatch) => {\r\n\r\n    var wargameNames = await wargamesApi.populateWargame();\r\n\r\n    // will get active wargame during later stages\r\n    let wargame = await wargamesApi.getWargame();\r\n    dispatch(setCurrentWargame(wargame));\r\n  }\r\n};\r\n\r\nexport const saveMessage = (dbName, channel, message) => {\r\n  return async (dispatch) => {\r\n    let response = await wargamesApi.postNewMessage(dbName, channel, message);\r\n\r\n    let wargame = await wargamesApi.getWargame();\r\n    let messages = await wargamesApi.getAllMessages(wargame.name);\r\n\r\n    dispatch(setWargameMessages(messages));\r\n  }\r\n};\r\n\r\nexport const getMessageTemplate = (id) => {\r\n  return async (dispatch) => {\r\n    let messages = await messageTemplatesApi.getAllMessagesFromDb();\r\n\r\n    var template = messages.find((message) => message._id === id);\r\n\r\n    dispatch(setMessageSchema(template.details));\r\n  }\r\n};\r\n\r\nexport const getAllMessages = () => {\r\n  return async (dispatch) => {\r\n\r\n    var wargame = await wargamesApi.getWargame();\r\n\r\n    var messages = await wargamesApi.getAllMessages(wargame.name);\r\n\r\n    dispatch(setWargameMessages(messages));\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport MessagePreview from \"../Components/MessagePreview\";\r\n\r\nimport '../scss/App.scss';\r\n\r\nclass MessagesList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    let messages = this.props.messages.filter((item) => item.channel === this.props.curChannel);\r\n\r\n    console.log(messages);\r\n\r\n    return (\r\n      <>\r\n        {messages.map((item, i) => {\r\n          return (<MessagePreview key={i} detail={item.message} />);\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({  }) => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps)(MessagesList);\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport _ from \"lodash\";\r\n\r\nimport JSONEditor from '@json-editor/json-editor';\r\nimport '../scss/App.scss';\r\n\r\nimport {\r\n  saveMessage,\r\n  getAllMessages,\r\n} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\n// import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n// import {faSave} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nclass JsonCreator extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.editor = null;\r\n    this.editorPreviewRef = React.createRef();\r\n\r\n    this.state = {\r\n      selectedSchema: ''\r\n    };\r\n  }\r\n\r\n  sendMessage = () => {\r\n\r\n    let forces = this.props.wargame.allChannels[this.props.wargame.selectedChannel];\r\n    let templates = _.uniqBy(_.flatMap(forces, (force) => force.templates), _.isEqual);\r\n    templates = templates.map((item) => item.value);\r\n\r\n    let to = this.props.wargame.allChannels[this.props.wargame.selectedChannel].map((item) => item.force);\r\n    let from = this.props.wargame.selectedForce;\r\n\r\n    this.props.dispatch(saveMessage(this.props.wargame.currentWargame, {templates, to, from}, this.editor.getValue()));\r\n    this.props.dispatch(getAllMessages());\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n    if (this.editor) {\r\n      this.editor.destroy();\r\n      this.editor = null;\r\n    }\r\n\r\n    if (nextProps.schema && nextProps.schema.type) {\r\n        if (this.editor) return;\r\n\r\n        this.editor = new JSONEditor(this.editorPreviewRef.current, {\r\n          schema: nextProps.schema,\r\n          theme: 'bootstrap4'\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"preview-editor\" ref={this.editorPreviewRef}></div>\r\n        <button name=\"send\" className=\"btn btn-action btn-action--primary\" onClick={this.sendMessage}>Send</button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame }) => ({\r\n  wargame\r\n});\r\n\r\nexport default connect(mapStateToProps)(JsonCreator);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Select from \"react-select\";\r\nimport '../scss/App.scss';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n  getMessageTemplate,\r\n} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\nimport MessageCreator from \"../Components/MessageCreator.jsx\";\r\n\r\nclass NewMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      template: {value: '', label: ''},\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n    if (this.props.curChannel !== nextProps.curChannel) {\r\n      this.setState({\r\n        template: {value: '', label: ''},\r\n      });\r\n    }\r\n  }\r\n\r\n  setTemplate = (val) => {\r\n    this.props.dispatch(getMessageTemplate(val.value));\r\n    this.setState({\r\n      template: val,\r\n    })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Select\r\n          value={this.state.template}\r\n          options={this.props.templates}\r\n          onChange={this.setTemplate}\r\n        />\r\n        <MessageCreator schema={this.props.schema} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nNewMessage.propTypes = {\r\n  templates: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({  }) => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps)(NewMessage);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {\r\n  setChannel,\r\n  setMessageSchema,\r\n} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\nimport MessagesList from \"./MessagesList\";\r\nimport NewMessage from \"../Components/NewMessage\";\r\n\r\nimport '../scss/App.scss';\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n});\r\n\r\nclass MessageFeeds extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: 0,\r\n    }\r\n  }\r\n\r\n  handleChange = (event, value) => {\r\n\r\n    let channel = Object.keys(this.props.playerUi.channels)[value];\r\n\r\n    this.props.dispatch(setChannel(channel));\r\n    this.props.dispatch(setMessageSchema({}));\r\n\r\n    this.setState({ value });\r\n  };\r\n\r\n  createTabs = () => {\r\n\r\n    let channels = this.props.playerUi.channels;\r\n    let tabs = [];\r\n\r\n    for (let prop in channels) {\r\n      tabs.push(<Tab key={prop} label={prop} />)\r\n    }\r\n\r\n    return tabs;\r\n  };\r\n\r\n  createMessageList = (tab) => {\r\n\r\n    let curChannel= this.props.playerUi.selectedChannel;\r\n\r\n    let contents;\r\n\r\n    // switch (tab) {\r\n    //\r\n    //   case 0:\r\n    //     contents = (\r\n    //       <>\r\n    //         <MessagesList/>\r\n    //\r\n    //         <NewMessage\r\n    //           templates={this.props.tabs[this.props.curChannel].templates}\r\n    //         />\r\n    //       </>\r\n    //     );\r\n    //     break;\r\n    //\r\n    //   default:\r\n    //     contents = false;\r\n    //     break;\r\n    // }\r\n\r\n    return (\r\n      <TabContainer>\r\n        <MessagesList\r\n          curChannel={curChannel}\r\n          messages={this.props.playerUi.messages}\r\n        />\r\n\r\n        <NewMessage\r\n          curChannel={curChannel}\r\n          schema={this.props.playerUi.messageSchema}\r\n          templates={this.props.playerUi.channels[curChannel].templates}\r\n        />\r\n      </TabContainer>\r\n    )\r\n  };\r\n\r\n  render() {\r\n\r\n    const { value } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className={classes.root}>\r\n          <AppBar position=\"static\" color=\"default\">\r\n            <Tabs\r\n              value={value}\r\n              onChange={this.handleChange}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              centered\r\n            >\r\n              {this.createTabs()}\r\n            </Tabs>\r\n          </AppBar>\r\n          {this.createMessageList(value)}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ playerUi }) => ({\r\n  playerUi,\r\n});\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(MessageFeeds));\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport '../scss/App.scss';\r\nimport {\r\n  getWargame,\r\n  setForce,\r\n  setRole,\r\n  setFilteredChannels,\r\n  getAllMessages,\r\n} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\nimport MessageFeeds from \"./MessageFeeds\";\r\nimport DropdownInput from \"../Components/Inputs/DropdownInput\";\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass PlayerUi extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(getWargame());\r\n    this.props.dispatch(getAllMessages());\r\n  }\r\n\r\n  updateSelectedForce = (force) => {\r\n    this.props.dispatch(setForce(force));\r\n  };\r\n\r\n  updateSelectedRole = (role) => {\r\n    this.props.dispatch(setRole(role));\r\n    this.props.dispatch(setFilteredChannels());\r\n  };\r\n\r\n  goBack = () => {\r\n    this.props.dispatch(setForce(\"\"));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"flex-content-wrapper\">\r\n\r\n        <div className=\"flex-content flex-content--fill\">\r\n          {!this.props.playerUi.selectedForce ?\r\n            <div className=\"flex-content--center\">\r\n              <h1>Set force</h1>\r\n              <DropdownInput updateStore={this.updateSelectedForce} selectOptions={Object.keys(this.props.playerUi.allForces)}/>\r\n            </div>\r\n            : false\r\n          }\r\n\r\n          {this.props.playerUi.selectedForce && !this.props.playerUi.selectedRole ?\r\n            <div className=\"flex-content--center\">\r\n              <h1>Set role</h1>\r\n              <FontAwesomeIcon icon={faArrowLeft} size=\"2x\" style={{cursor: 'pointer'}} onClick={this.goBack} />\r\n              <DropdownInput updateStore={this.updateSelectedRole} selectOptions={this.props.playerUi.allForces[this.props.playerUi.selectedForce].roles}/>\r\n            </div>\r\n            : false\r\n          }\r\n\r\n          {this.props.playerUi.selectedForce && this.props.playerUi.selectedRole ?\r\n            <MessageFeeds\r\n            />\r\n            : false\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ playerUi }) => ({\r\n  playerUi,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PlayerUi);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport UniversalRouter from \"universal-router\";\r\n\r\nimport ChooseInterface from \"../Views/ChooseInterface\";\r\nimport GameDesignerInterface from '../Views/GameDesignerInterface';\r\nimport UmpireMenu from '../Views/UmpireMenu';\r\nimport EditMessage from '../Views/EditMessage';\r\nimport CreateMessage from '../Views/CreateMessage';\r\nimport EditTemplate from '../Views/EditTemplate';\r\nimport CreateTemplate from '../Views/CreateTemplate';\r\nimport GameSetup from \"../Views/GameSetup\";\r\nimport PlayerUi from \"../Views/PlayerUi\";\r\n\r\nimport '../scss/App.scss';\r\n\r\nclass Router extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.routes = [\r\n      { path: '/client/', action: () => <ChooseInterface /> },\r\n      { path: '/client/umpireMenu', action: () => <GameDesignerInterface/> },\r\n      { path: '/client/umpireMenu/:creatorType', action: () => <UmpireMenu /> },\r\n      { path: '/client/messageCreator', children: [\r\n          { path: '/create/template', action: () => <CreateTemplate /> },\r\n          { path: '/edit/template', action: () => <EditTemplate /> },\r\n          { path: '/create/message', action: () => <CreateMessage /> },\r\n          { path: '/edit/message', action: () => <EditMessage /> },\r\n        ]\r\n      },\r\n      { path: '/client/gameSetup', action: () => <GameSetup /> },\r\n      { path: '/client/playerUi', action: () => <PlayerUi /> },\r\n    ];\r\n\r\n    // let currentPath = new URL(window.location.href).pathname;\r\n\r\n    this.state = {\r\n      currentView: <ChooseInterface />\r\n    };\r\n\r\n    this.router = new UniversalRouter(this.routes);\r\n\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n    this.router.resolve({ pathname: nextProps.currentViewURI }).then(result => {\r\n      this.setState({\r\n        currentView: result,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        { this.state.currentView }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ currentViewURI }) => ({\r\n  currentViewURI\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(Router);\r\n","export default function deepCopy(objectpassed) {\r\n\r\n  // arrays return \"object\" in js so any object or array will be looped to copy deeply.\r\n  // strings, numbers and booleans are deep copied naturally, while any objects within arrays or objects\r\n  // or objects within arrays are only copied shallowly.\r\n  if (objectpassed === null || typeof objectpassed !== 'object') {\r\n    return objectpassed;\r\n  }\r\n\r\n  var temporaryStorage = objectpassed.constructor();\r\n\r\n  for (var key in objectpassed) {\r\n    temporaryStorage[key] = deepCopy((objectpassed[key]));\r\n  }\r\n  return temporaryStorage;\r\n}","import ActionConstant from '../ActionConstants';\r\nimport copyState from \"../copyStateHelper.js\";\r\n\r\nvar initialState = {\r\n  isLoading: false,\r\n  messages: [],\r\n};\r\n\r\nexport const messageTypesReducer = (state = initialState, action) => {\r\n\r\n  var newState = copyState(state);\r\n\r\n  switch (action.type) {\r\n    case ActionConstant.DB_MESSAGE_TYPES_GET:\r\n      newState.isLoading = action.isLoading;\r\n      return newState;\r\n\r\n    case ActionConstant.DB_MESSAGE_TYPES_SAVED:\r\n      newState.messages = action.payload;\r\n      return newState;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};","import ActionConstant from '../ActionConstants';\r\nimport copyState from \"../copyStateHelper.js\";\r\n\r\nvar initialState = {\r\n  isLoading: false,\r\n  messages: [],\r\n  messagePreviewId: '',\r\n  messagePreview: {}\r\n};\r\n\r\nexport const messagesReducer = (state = initialState, action) => {\r\n\r\n  // redux works on the principle of keeping your data immutable.\r\n  // directly editing the state will cause an error, it leaves immutability up to you,\r\n  // the simplest solution with smallest footprint I've found so far is to use this deepCopy helper I found online.\r\n  var newState = copyState(state);\r\n\r\n  switch (action.type) {\r\n    case ActionConstant.DB_MESSAGES_GET:\r\n      newState.isLoading = action.isLoading;\r\n      return newState;\r\n\r\n    case ActionConstant.DB_MESSAGE_SAVED:\r\n      newState.messages = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.DB_RETURNED_MESSAGE:\r\n      newState.messagePreviewId = action.payload._id;\r\n      newState.messagePreview = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.RESET_MESSAGE_PREVIEW:\r\n      newState.messagePreviewId = '';\r\n      newState.messagePreview = {};\r\n      return newState;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};","import ActionConstant from '../ActionConstants';\r\nimport deepCopy from \"../copyStateHelper.js\";\r\n\r\nconst initialState = {\r\n  selectedSchemaID: '',\r\n  previewSchema: {}\r\n};\r\n\r\nexport const umpireMenuReducer = (state = initialState, action) => {\r\n\r\n  let newState = deepCopy(state);\r\n\r\n  switch (action.type) {\r\n    case ActionConstant.SET_SELECTED_SCHEMA:\r\n      newState.selectedSchemaID = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.SET_PREVIEW_SCHEMA:\r\n      newState.previewSchema = action.payload;\r\n      return newState;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};","import ActionConstant from '../ActionConstants';\r\nimport copyState from \"../copyStateHelper.js\";\r\nimport _ from \"lodash\";\r\nimport uniqId from \"uniqid\";\r\n\r\nimport {\r\n  forceTemplate,\r\n  channelTemplate,\r\n} from \"../../pouchDB/consts\";\r\n\r\nvar initialState = {\r\n  isLoading: false,\r\n  wargameList: [],\r\n  currentWargame: '',\r\n  wargameTitle: '',\r\n  validation: {\r\n    validWargameName: true,\r\n  },\r\n  tabs: {\r\n    0: {\r\n      name: \"Overview - settings\",\r\n      data: {\r\n        gameDescription: '',\r\n        spatialRepresentation: '',\r\n        planningInterval: null,\r\n        replayInterval: null,\r\n        turnStrategy: '',\r\n      },\r\n      complete: false,\r\n    },\r\n    // 1: {\r\n    //   name: \"Platform Types\",\r\n    //   complete: false,\r\n    // },\r\n    1: {\r\n      name: \"Forces\",\r\n      data: {\r\n        // forces: {'white': forceTemplate},\r\n        forces: {},\r\n        selectedForce: '',\r\n        roles: [],\r\n      },\r\n      complete: false,\r\n    },\r\n    // 3: {\r\n    //   name: \"Back history\",\r\n    //   complete: false,\r\n    // },\r\n    // 4: {\r\n    //   name: \"Positions\",\r\n    //   complete: false,\r\n    // },\r\n    2: {\r\n      name: \"Channels\",\r\n      data: {\r\n        // channels: {'white weather': channelTemplate},\r\n        channels: {},\r\n        selectedChannel: '',\r\n      },\r\n      complete: false,\r\n    },\r\n    // 6: {\r\n    //   name: \"Play control\",\r\n    //   complete: false,\r\n    // },\r\n  },\r\n  currentTab: 0\r\n};\r\n\r\nexport const wargamesReducer = (state = initialState, action) => {\r\n\r\n  let newState = copyState(state);\r\n\r\n  let tab = newState.currentTab;\r\n\r\n  switch (action.type) {\r\n\r\n    case ActionConstant.ALL_WARGAME_NAMES_SAVED:\r\n      newState.wargameList = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.SET_CURRENT_WARGAME:\r\n      newState.currentWargame = action.payload.name;\r\n      newState.wargameTitle = action.payload.wargameTitle;\r\n      newState.tabs = action.payload.tabs;\r\n      return newState;\r\n\r\n    case ActionConstant.SET_WARGAME_NAME:\r\n\r\n      let listWithoutThis = [];\r\n\r\n      newState.wargameList.forEach((game) => {\r\n        if (game.name !== newState.currentWargame) listWithoutThis.push(game);\r\n      });\r\n\r\n      let uniqueName = listWithoutThis.every((wargame) => wargame.title !== action.payload );\r\n\r\n      newState.validation.validWargameName = uniqueName;\r\n      newState.wargameTitle = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.SET_CURRENT_GAME_SETUP_TAB:\r\n      newState.currentTab = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_GAME_SETUP_DATA:\r\n      newState.tabs[tab].data = {...newState.tabs[tab].data, ...action.payload};\r\n      break;\r\n\r\n    case ActionConstant.ADD_NEW_FORCE:\r\n      newState.tabs[tab].data.forces[action.payload] = forceTemplate;\r\n      break;\r\n\r\n    case ActionConstant.SET_SELECTED_FORCE:\r\n      newState.tabs[tab].data.selectedForce = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.ADD_NEW_CHANNEL:\r\n      newState.tabs[tab].data.channels[action.payload] = channelTemplate;\r\n      break;\r\n\r\n    case ActionConstant.SET_SELECTED_CHANNEL:\r\n      newState.tabs[tab].data.selectedChannel = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_FORCE_OVERVIEW:\r\n      let selected = newState.tabs[tab].data.selectedForce;\r\n      newState.tabs[tab].data.forces[selected].overview = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.ADD_NEW_RECIPIENT:\r\n      var curChannel = newState.tabs[tab].data.selectedChannel;\r\n      let newParticipant = {...action.payload, subscriptionId: uniqId.time()};\r\n      newState.tabs[tab].data.channels[curChannel].push(newParticipant);\r\n      break;\r\n\r\n    case ActionConstant.UPDATE_RECIPIENT:\r\n      var curChannel = newState.tabs[tab].data.selectedChannel;\r\n      var recipientIndex = newState.tabs[tab].data.channels[curChannel].findIndex((recipient) => recipient.subscriptionId === action.payload.id);\r\n      newState.tabs[tab].data.channels[curChannel].splice(recipientIndex, 1, {...action.payload.data, subscriptionId: action.payload.id});\r\n      break;\r\n\r\n    case ActionConstant.REMOVE_RECIPIENT:\r\n      var curChannel = newState.tabs[tab].data.selectedChannel;\r\n      var recipientIndex = newState.tabs[tab].data.channels[curChannel].findIndex((recipient) => recipient.subscriptionId === action.payload);\r\n      newState.tabs[tab].data.channels[curChannel].splice(recipientIndex, 1);\r\n      break;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n\r\n  let flatten = (n) => {\r\n    if (_.isEmpty(n)) return null; // force show empty array\r\n    return (_.isArray(n) || _.isObject(n)) ? _.flatMapDeep(n, flatten) : n;\r\n  };\r\n\r\n  let inputResults = _.flatMapDeep(newState.tabs[tab].data, flatten);\r\n\r\n  newState.tabs[tab].complete = inputResults.every((item) => item !== null && item.length > 0);\r\n\r\n  return newState;\r\n};\r\n","import ActionConstant from '../ActionConstants.js';\r\nimport copyState from \"../copyStateHelper.js\";\r\n\r\nconst initialState = {\r\n  open: false,\r\n  message: '',\r\n};\r\n\r\nexport const notificationReducer = (state = initialState, action) => {\r\n\r\n    let newState = copyState(state);\r\n\r\n    switch (action.type) {\r\n      case ActionConstant.SHOW_NOTIFICATION:\r\n        newState = action.payload;\r\n        return newState;\r\n\r\n      case ActionConstant.HIDE_NOTIFICATION:\r\n        newState = action.payload;\r\n        return newState;\r\n\r\n      default:\r\n        return newState;\r\n    }\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\nimport copyState from \"../../Helpers/copyStateHelper\";\r\nimport _ from \"lodash\";\r\n\r\nconst initialState = {\r\n  selectedForce: '',\r\n  selectedRole: '',\r\n  selectedChannel: '',\r\n  currentWargame: '',\r\n  wargameTitle: '',\r\n  channels: {},\r\n  allChannels: {},\r\n  forces: {},\r\n  allForces: {},\r\n  messageSchema: {},\r\n  messages: [],\r\n};\r\n\r\nexport const playerUiReducer = (state = initialState, action) => {\r\n\r\n  let newState = copyState(state);\r\n\r\n  switch (action.type) {\r\n\r\n    case ActionConstant.SET_CURRENT_WARGAME_PLAYER:\r\n\r\n      newState.currentWargame = action.payload.name;\r\n      newState.wargameTitle = action.payload.wargameTitle;\r\n\r\n      let channelsTab = Object.values(action.payload.tabs).find((obj) => obj.name === \"Channels\");\r\n      newState.allChannels = channelsTab.data.channels;\r\n\r\n      let forcesTab = Object.values(action.payload.tabs).find((obj) => obj.name === \"Forces\");\r\n      newState.allForces = forcesTab.data.forces;\r\n      break;\r\n\r\n    case ActionConstant.SET_FORCE:\r\n      newState.selectedForce = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_ROLE:\r\n      newState.selectedRole = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_FILTERED_CHANNELS:\r\n\r\n      let channels = {};\r\n      for (let channel in newState.allChannels) {\r\n\r\n        let channelParticipants = newState.allChannels[channel].filter((recipient) => recipient.force === newState.selectedForce && recipient.role === newState.selectedRole);\r\n        let channelActive = newState.allChannels[channel].some((recipient) => recipient.force === newState.selectedForce && recipient.role === newState.selectedRole);\r\n\r\n        // only allow unique participants in gameSetup but check here also\r\n        channelParticipants = _.uniqWith(channelParticipants, _.isEqual);\r\n\r\n        if (channelActive) {\r\n          channels[channel] = {\r\n            templates: _.flatMap(channelParticipants, (participant) => participant.templates),\r\n            messages: []\r\n          };\r\n        }\r\n      }\r\n      newState.selectedChannel = Object.keys(channels)[0];\r\n      newState.channels = channels;\r\n      break;\r\n\r\n    case ActionConstant.SET_CHANNEL:\r\n      newState.selectedChannel = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_MESSAGE_SCHEMA:\r\n      newState.messageSchema = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_LATEST_MESSAGES:\r\n      newState.messages = action.payload;\r\n      break;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n\r\n  return newState;\r\n};\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport { messageTypesReducer } from \"../ActionsAndReducers/dbMessageTypes/messageTypes_Reducer\";\r\nimport { messagesReducer } from \"../ActionsAndReducers/dbMessages/messages_Reducer\";\r\nimport { currentModal } from \"../ActionsAndReducers/Modal/Modal_Reducer\";\r\nimport { currentViewURIReducer } from \"../ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_Reducer\";\r\nimport { umpireMenuReducer } from \"../ActionsAndReducers/UmpireMenu/umpireMenu_Reducer\";\r\nimport { wargamesReducer } from \"../ActionsAndReducers/dbWargames/wargames_Reducer\";\r\nimport { notificationReducer } from \"../ActionsAndReducers/Notification/Notification_Reducer\";\r\nimport { playerUiReducer } from \"../ActionsAndReducers/playerUi/playerUi_Reducer\";\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\nconst middlewares = [thunk];\r\n\r\nif (process.env.NODE_ENV === `development`) {\r\n  const { logger } = require(`redux-logger`);\r\n  middlewares.push(logger);\r\n}\r\n\r\nexport default createStore(combineReducers({\r\n  messageTypes: messageTypesReducer,\r\n  messages: messagesReducer,\r\n  umpireMenu: umpireMenuReducer,\r\n  currentViewURI: currentViewURIReducer,\r\n  currentModal,\r\n  notification: notificationReducer,\r\n  wargame: wargamesReducer,\r\n  playerUi: playerUiReducer,\r\n}), applyMiddleware(...middlewares));\r\n","import ActionConstant from '../ActionConstants';\r\n\r\nexport const currentViewURIReducer = (state = '/', action) => {\r\n\r\n  let newState = state;\r\n\r\n  switch (action.type) {\r\n    case ActionConstant.SET_CURRENT_VIEW_FROM_URI:\r\n      window.history.pushState({}, '', action.payload);\r\n      newState = action.payload;\r\n      return newState;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};","import ActionConstant from '../ActionConstants.js';\r\nimport copyState from \"../copyStateHelper.js\";\r\n\r\nexport const currentModal = (state = {}, action) => {\r\n\r\n    let newState = copyState(state);\r\n\r\n    switch (action.type) {\r\n      case ActionConstant.OPEN_MODAL:\r\n          newState = action.payload;\r\n          return newState;\r\n        case ActionConstant.CLOSE_MODAL:\r\n          newState = action.payload;\r\n          return newState;\r\n        default:\r\n          newState = {};\r\n          return newState;\r\n    }\r\n};\r\n","export default function deepCopy(objectpassed) {\r\n\r\n  // arrays return \"object\" in js so any object or array will be looped to copy deeply.\r\n  // strings, numbers and booleans are deep copied naturally, while any objects within arrays or objects\r\n  // or objects within arrays are only copied shallowly.\r\n  if (objectpassed === null || typeof objectpassed !== 'object') {\r\n    return objectpassed;\r\n  }\r\n\r\n  var temporaryStorage = objectpassed.constructor();\r\n\r\n  for (var key in objectpassed) {\r\n    temporaryStorage[key] = deepCopy((objectpassed[key]));\r\n  }\r\n  return temporaryStorage;\r\n}","import React, { Component } from 'react';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport ModalSwitch from \"./Components/Modals/ModalSwitch\";\r\nimport Notification from \"./Components/Notification\";\r\n\r\nimport Router from \"./Components/Router\";\r\n\r\nimport './scss/App.scss';\r\nimport Store from './Store/Store';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n        <Provider store={Store}>\r\n          <Router />\r\n          <ModalSwitch />\r\n          <Notification />\r\n        </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}