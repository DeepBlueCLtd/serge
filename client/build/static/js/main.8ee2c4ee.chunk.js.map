{"version":3,"sources":["ActionsAndReducers/ActionConstants.js","ActionsAndReducers/Modal/Modal_ActionCreators.js","Components/Modals/ModalWrapper.jsx","api/consts.js","api/messageTypes_api.js","ActionsAndReducers/playerUi/playerUi_ActionCreators.js","api/wargames_api.js","ActionsAndReducers/Notification/Notification_ActionCreators.js","ActionsAndReducers/dbWargames/wargames_ActionCreators.js","Components/Modals/AddForceModal.jsx","api/messages_api.js","ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_ActionCreators.js","ActionsAndReducers/dbMessages/messages_ActionCreators.js","ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators.js","ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators.js","Components/Modals/DeleteModal.jsx","Components/Modals/AddChannelModal.jsx","Components/Modals/ModalSwitch.jsx","Components/Notification.jsx","Components/Link.jsx","Views/ChooseInterface.jsx","Components/WargameSearchList.jsx","Views/GameDesignerInterface.jsx","Components/JsonCreator.jsx","Components/MessagePreview.jsx","Components/SearchList.jsx","Views/UmpireMenu.jsx","Components/JsonEditor.jsx","Views/EditMessage.jsx","Views/CreateMessage.jsx","Components/jsonSchemaEditor/json-schema-editor/editor.js","Components/jsonSchemaEditor/jsonEditor.js","Components/jsonSchemaEditor/editorPreview.js","Components/jsonSchemaEditor/index.js","Views/EditTemplate.jsx","Views/CreateTemplate.jsx","Components/Inputs/TextInput.jsx","Components/Inputs/DropdownInput.jsx","Components/Layout/Row.jsx","Components/Inputs/TextArea.jsx","Views/TabViews/SettingsTab.jsx","Components/TabsSearchList.jsx","Components/Layout/RemovableGroupItem.jsx","Views/TabViews/ForcesTab.jsx","Components/Layout/EditSubscriptionRow.jsx","Components/Layout/ChannelsTable.jsx","Views/TabViews/ChannelsTab.jsx","Components/ValidationNotification.jsx","Views/TabbedView.jsx","Components/ProgressBar/ProgressBar.jsx","Views/GameSetup.jsx","Components/MessagePreviewPlayerUi.jsx","Views/MessagesList.jsx","Components/MessageCreator.jsx","Components/NewMessage.jsx","Views/MessageFeeds.jsx","Views/PlayerUi.jsx","Components/Router.jsx","ActionsAndReducers/copyStateHelper.js","ActionsAndReducers/dbMessageTypes/messageTypes_Reducer.js","ActionsAndReducers/dbMessages/messages_Reducer.js","ActionsAndReducers/UmpireMenu/umpireMenu_Reducer.js","ActionsAndReducers/dbWargames/wargames_Reducer.js","ActionsAndReducers/Notification/Notification_Reducer.js","ActionsAndReducers/playerUi/playerUi_Reducer.js","Store/Store.jsx","ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_Reducer.js","ActionsAndReducers/Modal/Modal_Reducer.js","Helpers/copyStateHelper.js","App.jsx","index.jsx"],"names":["Object","freeze","ASYNC_SUCCESS","ASYNC_ERROR","ASYNC_LOADING","NORMAL_ACTION","DB_MESSAGE_STATUS","DB_MESSAGE_CREATION_LOADING","DB_MESSAGE_GET_LOADING","DB_SAVE_MESSAGES","DB_MESSAGE_TYPES_GET","DB_MESSAGE_TYPES_SAVED","SET_CURRENT_VIEW_FROM_URI","DB_MESSAGE_SAVED","DB_MESSAGES_GET","DB_RETURNED_MESSAGE","RESET_MESSAGE_PREVIEW","SET_SELECTED_SCHEMA","SET_PREVIEW_SCHEMA","OPEN_MODAL","CLOSE_MODAL","SET_CURRENT_GAME_SETUP_TAB","SET_GAME_SETUP_DATA","ALL_WARGAME_NAMES_SAVED","SET_CURRENT_WARGAME","ADD_NEW_FORCE","SET_SELECTED_FORCE","ADD_NEW_CHANNEL","SET_SELECTED_CHANNEL","SET_WARGAME_NAME","SET_FORCE_OVERVIEW","GAME_TITLE_INVALID","ADD_NEW_RECIPIENT","SHOW_NOTIFICATION","HIDE_NOTIFICATION","UPDATE_RECIPIENT","REMOVE_RECIPIENT","SET_CURRENT_WARGAME_PLAYER","SET_FORCE","SET_ROLE","SET_FILTERED_CHANNELS","SET_CHANNEL","SET_MESSAGE_SCHEMA","SET_LATEST_MESSAGES","modalAction","open","openModal","type","ActionConstant","payload","modal","close","ModalWrapper","handleBackgroundClick","e","target","currentTarget","_this","props","dispatch","setSize","this","editable","react_default","a","createElement","className","onClick","children","Component","connect","databasePath","forceTemplate","overview","roles","channelTemplate","dbDefaultSettings","_id","wargameTitle","tabs","0","name","data","gameDescription","spatialRepresentation","planningInterval","replayInterval","turnStrategy","1","forces","selectedForce","2","channels","selectedChannel","db","PouchDB","allDocs","then","entries","rows","length","machine","Date","toISOString","lastUpdated","title","details","machineryFailure","completed","put","setTimeout","weather","weatherForecast","console","log","populateDb","postNewMessage","schema","Promise","resolve","reject","asyncToGenerator","regenerator_default","mark","_callee","allMessages","time","schemaObj","wrap","_context","prev","next","getAllMessagesFromDb","sent","find","messageType","toLowerCase","abrupt","result","catch","err","stop","duplicateMessageInDb","id","get","doc","concat","uniqid","updateMessageInDb","_callee2","_context2","_rev","deleteMessageFromDb","remove","changes","since","include_docs","descending","results","map","filter","hasOwnProperty","setForce","setRole","setFilteredChannels","setChannel","setMessageSchema","setWargameMessages","messages","saveMessage","dbName","message","_ref2","wargame","wargamesApi","_x2","apply","arguments","getMessageTemplate","_ref3","_callee3","template","_context3","messageTemplatesApi","_x3","getAllMessages","_ref4","_callee4","_context4","_x4","wargameDbStore","populateWargame","fetch","serverPath","response","json","dbs","wargameNames","toCreate","_","difference","pull","forEach","live","on","unshift","promises","game","res","all","createWargame","uniqId","settings","objectSpread","editWargame","dbPath","getNameFromPath","updateWargame","getAllWargames","games","some","updateLocalDoc","duplicateWargame","newDb","newDbName","getWargame","dbId","path","URL","pathname","index","lastIndexOf","substring","showNotification","hideNotification","setCurrentTab","tab","setGameData","setWargameTitle","addNewForce","setSelectedForce","addNewChannel","setSelectedChannel","setForceOverview","saveAllWargameNames","names","setCurrentWargame","addRecipientToChannel","updateRecipient","createNewWargameDB","wargames","omit","clearWargames","window","location","reload","_ref5","_callee5","localDoc","_context5","_x5","AddForceModal","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hideModal","setState","forceName","setNewForceName","value","sameName","currentTab","addForce","state","currentModal","disable","Modals_ModalWrapper","autoFocus","onChange","disabled","_ref","addMessage","messageDetail","el","updatedMessage","getMessage","setCurrentViewFromURI","DBMessageSaveStatus","status","DBSaveMessageArray","DBSaveMessagePreview","loadingDBMessageCreate","isLoading","loadingDBMessageGet","resetMessagePreview","createMessage","check","object","Error","messagesApi","ok","t0","alert","_x","duplicateMessage","messageId","string","updateMessage","responses","_message","toConsumableArray","deleteMessage","getSingleMessage","_ref6","createMessageType","messageTypesApi","duplicateMessageType","updateMessageType","deleteMessageType","getAllMessageTypes","setSelectedSchema","schemaId","setPreviewSchema","DeleteModal","currentViewURI","umpireMenu","selectedSchemaID","messagePreviewId","AddChannelModal","channelName","setChannelName","addChannel","ModalSwitch","Modals_AddForceModal","Modals_DeleteModal","Modals_AddChannelModal","Fragment","Notification","onClickHandler","notification","react_fontawesome_index_es","icon","faTimes","Link","onClickMethod","aNewTab","metaKey","ctrlKey","anExternalLink","href","startsWith","preventDefault","class","UmpireMenu","Components_Link","WargameSearchList","filterMessages","input","searchInput","searchQuery","listData","indexOf","displayControls","activeTitle","hideControls","messageList","nextProps","nextState","nextContext","sameMessagesQuantity","_callee6","_context6","_x6","that","list","key","placeholder","onMouseOver","bind","onMouseLeave","faPencilAlt","setSelectedWargame","faClone","GameDesignerInterface","Components_WargameSearchList","wargameList","JsonCreator","messageTypes","mes","editor","getValue","editorPreviewRef","React","createRef","selectedSchema","destroy","JSONEditor","current","theme","setValue","faSave","ref","MessagePreview","pair","deconstructObj","moment","format","withoutName","item","obj","i","createObjItem","array","of","deconstructArr","boolean","createBoolItem","ISO_8601","isValid","createTimeItem","createStrItem","detail","from","SearchList","setSelected","active","selected","date","classNames","searchlist-title","setSelectedSchemaId","creatorType","newState","duplicateTemplate","deleteTemplate","split","buildMessageBoard","_ref7","faPlus","Components_SearchList","faTrash","faArrowLeft","size","createSearchListSection","Components_JsonCreator","previewForm","Components_MessagePreview","messagePreview","createTemplatesActions","createMessagesActions","EditMessage","messageToEdit","JsonEditor","Editor","elementId","jsonEditor","renderZone","document","getElementById","PreviewEditor","SchemaEditor","isObjectPropertiesButton","node","matches","span","parentElement","querySelector","innerText","observer","MutationObserver","mutationsList","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","addedNodes","nodeType","classList","add","return","observe","childList","subtree","prototype","updateSchema","validate","getJSON","create","defineProperty","enumerable","writable","no_additional_properties","custom_validators","errors","minimum","maximum","push","property","button","root","getButton","button_holder","getHeaderButtonHolder","appendChild","header","parentNode","insertBefore","nextSibling","addEventListener","contents","blob","Blob","JSON","stringify","navigator","msSaveOrOpenBlob","download","createObjectURL","dataset","downloadurl","join","dispatchEvent","MouseEvent","view","bubbles","cancelable","JsonSchemaEditor","content","schemaEditor","editorBox","assertThisInitialized","updateEditor","saved","defaultValue","newValue","options","newJson","save","counter","defaults","object_layout","layout","booleanOptions","Card","CardHeader","CardBody","CardFooter","EditorPreview","previewBox","editorPreview","iconlib","updateMetaSchema","updatePreviewSchema","updateOptions","properties","Status","enum","Description","metaSchema","jsonMetaSchema","previewSchema","metaschema","jsonSchemaEditor","saveSchema","TextInput","updateStore","numInput","invalid","validInput","DropdownInput","selectOptions","opt","Row","TextArea","style","resize","SettingsTab","updateDescription","updateSpatialRepresentation","updatePlanningInterval","updateReplayInterval","updateTurnStrategy","Inputs_TextArea","Layout_Row","Inputs_DropdownInput","Inputs_TextInput","TabsSearchList","prop","list-title","createList","RemovableGroupItem","ForcesTab","force","updateOverview","curTab","role","Layout_RemovableGroupItem","Components_TabsSearchList","createForceEditor","EditSubscriptionRow","updateSubscriptionForce","option","editSubscriptionForce","updateSubscriptionRole","editSubscriptionRole","updateSubscriptionTemplates","editSubscriptionTemplates","updateChannel","subscriptionData","label","templates","subscriptionId","cancelEdit","react_select_esm","forceOptions","roleOptions","templateOptions","isMulti","ChannelsTable","subscriptionToEdit","setSelectedRole","selectedRole","setSelectedTemplate","selectedTemplates","addToChannel","channelData","values","d","row","j","removeSubscription","editSubscription","_this2","Layout_EditSubscriptionRow","createRow","isDisabled","filterChannels","channelList","curPropsState","keys","nextPropsState","Layout_ChannelsTable","createChannelEditor","ValidationNotification","TabContainer","Typography","component","padding","TabbedView","handleChange","event","invalidFields","classes","AppBar","position","color","Tabs","indicatorColor","textColor","centered","tabName","Tab","TabViews_SettingsTab","TabViews_ForcesTab","ChannelsTab","Components_ValidationNotification","validation","withStyles","flexGrow","backgroundColor","palette","background","paper","ProgressBar","GameSetup","updateWargameTitle","saveWargame","checkAllValid","currentWargame","reduce","entry","parseInt","complete","progress-indicator--active","progress-indicator--complete","validWargameName","link","link--noIcon","link--disabled","Components_ProgressBar_ProgressBar","createIndicators","Views_TabbedView","MessagesList","channel","curChannel","Collapsible_default","trigger","transitionTime","easing","MessagePreviewPlayerUi","sendMessage","messageDetails","playerUi","NewMessage","setTemplate","val","MessageCreator","MessageFeeds","createTabs","createMessageList","MessageFeeds_TabContainer","Views_MessagesList","Components_NewMessage","messageSchema","PlayerUi","updateSelectedForce","updateSelectedRole","goBack","allForces","cursor","Views_MessageFeeds","Router","routes","action","ChooseInterface","Views_GameDesignerInterface","Views_UmpireMenu","CreateTemplate","EditTemplate","CreateMessage","Views_EditMessage","Views_GameSetup","Views_PlayerUi","currentView","router","UniversalRouter","deepCopy","objectpassed","temporaryStorage","constructor","initialState","allChannels","middlewares","thunk","createStore","combineReducers","copyState","history","pushState","recipientIndex","listWithoutThis","uniqueName","every","newParticipant","findIndex","recipient","splice","inputResults","flatMapDeep","flatten","n","isEmpty","isArray","isObject","channelsTab","forcesTab","channelParticipants","channelActive","uniqWith","isEqual","flatMap","participant","applyMiddleware","App","es","store","Store","Components_Router","Modals_ModalSwitch","Components_Notification","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.8ee2c4ee.chunk.js","sourcesContent":["export default Object.freeze({\r\n  ASYNC_SUCCESS: 'ASYNC_SUCCESS',\r\n  ASYNC_ERROR: 'ASYNC_ERROR',\r\n  ASYNC_LOADING: 'ASYNC_LOADING',\r\n  NORMAL_ACTION: 'NORMAL_ACTION',\r\n  DB_MESSAGE_STATUS: 'DB_MESSAGE_STATUS',\r\n  DB_MESSAGE_CREATION_LOADING:  'DB_MESSAGE_CREATION_LOADING',\r\n  DB_MESSAGE_GET_LOADING: 'DB_MESSAGE_GET_LOADING',\r\n  DB_SAVE_MESSAGES: 'DB_SAVE_MESSAGES',\r\n  DB_MESSAGE_TYPES_GET: 'DB_MESSAGE_TYPES_GET',\r\n  DB_MESSAGE_TYPES_SAVED: 'DB_MESSAGE_TYPES_SAVED',\r\n  SET_CURRENT_VIEW_FROM_URI: 'SET_CURRENT_VIEW_FROM_URI',\r\n  DB_MESSAGE_SAVED: 'DB_MESSAGE_SAVED',\r\n  DB_MESSAGES_GET: 'DB_MESSAGES_GET',\r\n  DB_RETURNED_MESSAGE: 'DB_RETURNED_MESSAGE',\r\n  RESET_MESSAGE_PREVIEW: 'RESET_MESSAGE_PREVIEW',\r\n  SET_SELECTED_SCHEMA: 'SET_SELECTED_SCHEMA',\r\n  SET_PREVIEW_SCHEMA: 'SET_PREVIEW_SCHEMA',\r\n  OPEN_MODAL: 'OPEN_MODAL',\r\n  CLOSE_MODAL: 'CLOSE_MODAL',\r\n  SET_CURRENT_GAME_SETUP_TAB: 'SET_CURRENT_GAME_SETUP_TAB',\r\n  SET_GAME_SETUP_DATA: 'SET_GAME_SETUP_DATA',\r\n  ALL_WARGAME_NAMES_SAVED: 'ALL_WARGAME_NAMES_SAVED',\r\n  SET_CURRENT_WARGAME: 'SET_CURRENT_WARGAME',\r\n  ADD_NEW_FORCE: 'ADD_NEW_FORCE',\r\n  SET_SELECTED_FORCE: 'SET_SELECTED_FORCE',\r\n  ADD_NEW_CHANNEL: 'ADD_NEW_CHANNEL',\r\n  SET_SELECTED_CHANNEL: 'SET_SELECTED_CHANNEL',\r\n  SET_WARGAME_NAME: 'SET_WARGAME_NAME',\r\n  SET_FORCE_OVERVIEW: 'SET_FORCE_OVERVIEW',\r\n  GAME_TITLE_INVALID: 'GAME_TITLE_INVALID',\r\n  ADD_NEW_RECIPIENT: 'ADD_NEW_RECIPIENT',\r\n  SHOW_NOTIFICATION: 'SHOW_NOTIFICATION',\r\n  HIDE_NOTIFICATION: 'HIDE_NOTIFICATION',\r\n  UPDATE_RECIPIENT: 'UPDATE_RECIPIENT',\r\n  REMOVE_RECIPIENT: 'REMOVE_RECIPIENT',\r\n  SET_CURRENT_WARGAME_PLAYER: 'SET_CURRENT_WARGAME_PLAYER',\r\n  SET_FORCE: 'SET_FORCE',\r\n  SET_ROLE: 'SET_ROLE',\r\n  SET_FILTERED_CHANNELS: 'SET_FILTERED_CHANNELS',\r\n  SET_CHANNEL: 'SET_CHANNEL',\r\n  SET_MESSAGE_SCHEMA: 'SET_MESSAGE_SCHEMA',\r\n  SET_LATEST_MESSAGES: 'SET_LATEST_MESSAGES',\r\n});\r\n","import ActionConstant from '../ActionConstants.js';\r\n\r\nexport const modalAction = {\r\n  open: (openModal) => ({\r\n    type: ActionConstant.OPEN_MODAL,\r\n    payload: {\r\n      open: true,\r\n      modal: openModal,\r\n    },\r\n  }),\r\n\r\n  close: () => ({\r\n    type: ActionConstant.CLOSE_MODAL,\r\n    payload: {\r\n      open: false,\r\n      modal: '',\r\n    },\r\n  })\r\n};\r\n","import React, {Component}  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\n\r\nclass ModalWrapper extends Component {\r\n\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  handleBackgroundClick = (e) => {\r\n    if (e.target === e.currentTarget) this.props.dispatch(modalAction.close());\r\n  };\r\n\r\n  render() {\r\n    const setSize = this.props.editable ? \"modal setsize\": 'modal';\r\n\r\n    return (\r\n      <div className=\"modal-bg\" onClick={this.handleBackgroundClick}>\r\n        <div className={setSize}>\r\n          {this.props.children}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default connect()(ModalWrapper);","// export const serverPath = 'https://serge-dev.herokuapp.com/';\r\n// export const databasePath = 'https://serge-dev.herokuapp.com/db/';\r\nexport const serverPath = 'http://localhost:8080/';\r\nexport const databasePath = 'http://localhost:8080/db/';\r\nexport const MSG_STORE = \"messages\";\r\nexport const MSG_TYPE_STORE = \"message_types\";\r\n\r\nexport const headers = {\r\n  'Content-Type': 'application/json',\r\n  'Access-Control-Allow-Origin': '*',\r\n  'Access-Control-Allow-Methods': 'POST',\r\n  'Access-Control-Allow-Headers': 'Authorization, Lang'\r\n};\r\n\r\nexport const forceTemplate = {\r\n  overview: 'An overview written here..',\r\n  roles: ['General']\r\n};\r\n\r\nexport const channelTemplate = [];\r\n\r\n\r\nexport const dbDefaultSettings = {\r\n  _id: '_local/settings',\r\n  wargameTitle: 'wargame',\r\n  tabs: {\r\n    0: {\r\n      name: \"Overview - settings\",\r\n      data: {\r\n        gameDescription: '',\r\n        spatialRepresentation: '',\r\n        planningInterval: null,\r\n        replayInterval: null,\r\n        turnStrategy: '',\r\n      }\r\n    },\r\n    1: {\r\n      name: \"Forces\",\r\n      data: {\r\n        forces: {},\r\n        roles: ['General'],\r\n        selectedForce: '',\r\n      },\r\n    },\r\n    2: {\r\n      name: \"Channels\",\r\n      data: {\r\n        channels: {},\r\n        selectedChannel: '',\r\n      },\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// export const channelTemplate = [{\r\n//   force: 'white',\r\n//   role: 'General',\r\n//   template: {\r\n//     name: '',\r\n//     id: '',\r\n//   },\r\n//   // subscriptionId: uniqid.time(),\r\n// }];\r\n","import uniqid from \"uniqid\";\r\n\r\nimport PouchDB from \"pouchdb\";\r\nimport { databasePath,\r\n         MSG_TYPE_STORE } from \"./consts\";\r\n\r\nimport machineryFailure from '../Schemas/machinery_failure.json';\r\nimport weatherForecast from '../Schemas/weather_forecase.json';\r\n\r\nvar db = new PouchDB(databasePath+MSG_TYPE_STORE);\r\n\r\nvar populateDb = function () {\r\n  var machine = {\r\n    _id: new Date().toISOString(),\r\n    lastUpdated: new Date().toISOString(),\r\n    title: 'machinery failure',\r\n    details: machineryFailure,\r\n    completed: false\r\n  };\r\n  db.put(machine);\r\n\r\n  setTimeout(function () {\r\n    var weather = {\r\n      _id: new Date().toISOString(),\r\n      lastUpdated: new Date().toISOString(),\r\n      title: 'weather forecast',\r\n      details: weatherForecast,\r\n      completed: false\r\n    };\r\n    db.put(weather).then(() => {\r\n      console.log('DATA BASE COMPLETE');\r\n    });\r\n  },2000);\r\n};\r\n\r\ndb.allDocs().then(entries => {\r\n  if (entries.rows.length === 0) {\r\n    populateDb();\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\nexport const postNewMessage = (schema) => {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    (async() => {\r\n\r\n      const allMessages = await getAllMessagesFromDb();\r\n\r\n      const matchedName = allMessages.find((messageType) => messageType.title.toLowerCase() === schema.title.toLowerCase());\r\n\r\n      if (matchedName) {\r\n        reject(\"Message title already used\");\r\n        return;\r\n      }\r\n\r\n      let time = new Date().toISOString();\r\n\r\n      var schemaObj = {\r\n        _id: time,\r\n        lastUpdated: time,\r\n        title: schema.title,\r\n        details: schema,\r\n        completed: false\r\n      };\r\n\r\n      return db.put(schemaObj)\r\n        .then(function (result) {\r\n          resolve(result);\r\n        })\r\n        .catch(function (err) {\r\n          console.log(err);\r\n          reject(false);\r\n        });\r\n\r\n    })();\r\n  });\r\n};\r\n\r\nexport const duplicateMessageInDb = (id) => {\r\n\r\n  let time = new Date().toISOString();\r\n\r\n  return new Promise((resolve, reject) => {\r\n    db.get(id)\r\n      .then(function (doc) {\r\n\r\n        // var updatedMessage = doc.details;\r\n\r\n        doc.details.title = `${doc.details.title} Copy-${uniqid.time()}`;\r\n\r\n        return db.put({\r\n          _id: time,\r\n          lastUpdated: time,\r\n          title: doc.details.title,\r\n          details: doc.details,\r\n        });\r\n      })\r\n      .then(function () {\r\n        resolve(true);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        reject(false);\r\n      })\r\n  });\r\n};\r\n\r\nexport const updateMessageInDb = (schema, id) => {\r\n  return new Promise((resolve, reject) => {\r\n    (async() => {\r\n\r\n      const allMessages = await getAllMessagesFromDb();\r\n\r\n      const matchedName = allMessages.find((messageType) => messageType.title.toLowerCase() === schema.title.toLowerCase());\r\n\r\n      if (matchedName) {\r\n        reject(\"Message title already used\");\r\n        return;\r\n      }\r\n\r\n      db.get(id)\r\n        .then(function (doc) {\r\n          return db.put({\r\n            _id: doc._id,\r\n            lastUpdated: new Date().toISOString(),\r\n            _rev: doc._rev,\r\n            title: schema.title,\r\n            details: schema\r\n          });\r\n        })\r\n        .then(function (result) {\r\n          resolve(result);\r\n        })\r\n        .catch(function (err) {\r\n          console.log(err);\r\n          reject(false);\r\n        })\r\n\r\n    })();\r\n  });\r\n};\r\n\r\nexport const deleteMessageFromDb = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    db.get(id)\r\n      .then(function (doc) {\r\n        return db.remove(doc);\r\n      })\r\n      .then(function (result) {\r\n        resolve(result);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        reject(false);\r\n      })\r\n  });\r\n};\r\n\r\nexport const getAllMessagesFromDb = () => {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    return db.changes({\r\n      since: 1,\r\n      include_docs: true,\r\n      descending: true,\r\n    })\r\n      .then(function (changes) {\r\n\r\n        let results = changes.results.map((a) => a.doc);\r\n        results = results.filter((a) => !a.hasOwnProperty('_deleted') && a.hasOwnProperty('details'));\r\n\r\n        resolve(results);\r\n      })\r\n      .catch(function (err) {\r\n        // handle errors\r\n        reject(err);\r\n        console.log(err);\r\n      });\r\n  });\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\nimport * as wargamesApi from \"../../api/wargames_api\";\r\nimport * as messageTemplatesApi from \"../../api/messageTypes_api\";\r\n\r\nconst setCurrentWargame = (data) => ({\r\n  type: ActionConstant.SET_CURRENT_WARGAME_PLAYER,\r\n  payload: data\r\n});\r\n\r\nexport const setForce = (data) => ({\r\n  type: ActionConstant.SET_FORCE,\r\n  payload: data\r\n});\r\n\r\nexport const setRole = (data) => ({\r\n  type: ActionConstant.SET_ROLE,\r\n  payload: data\r\n});\r\n\r\nexport const setFilteredChannels = () => ({\r\n  type: ActionConstant.SET_FILTERED_CHANNELS,\r\n});\r\n\r\nexport const setChannel = (data) => ({\r\n  type: ActionConstant.SET_CHANNEL,\r\n  payload: data,\r\n});\r\n\r\nexport const setMessageSchema = (schema) => ({\r\n  type: ActionConstant.SET_MESSAGE_SCHEMA,\r\n  payload: schema,\r\n});\r\n\r\nexport const setWargameMessages = (messages) => ({\r\n  type: ActionConstant.SET_LATEST_MESSAGES,\r\n  payload: messages,\r\n});\r\n\r\nexport const getWargame = () => {\r\n  return async (dispatch) => {\r\n\r\n    await wargamesApi.populateWargame();\r\n\r\n    // will get active wargame during later stages\r\n    let wargame = await wargamesApi.getWargame();\r\n    dispatch(setCurrentWargame(wargame));\r\n  }\r\n};\r\n\r\nexport const saveMessage = (dbName, details, message) => {\r\n  return async (dispatch) => {\r\n\r\n    await wargamesApi.postNewMessage(dbName, details, message);\r\n\r\n    let wargame = await wargamesApi.getWargame();\r\n    let messages = await wargamesApi.getAllMessages(wargame.name);\r\n\r\n    dispatch(setWargameMessages(messages));\r\n  }\r\n};\r\n\r\nexport const getMessageTemplate = (id) => {\r\n  return async (dispatch) => {\r\n    let messages = await messageTemplatesApi.getAllMessagesFromDb();\r\n\r\n    var template = messages.find((message) => message._id === id);\r\n\r\n    dispatch(setMessageSchema(template.details));\r\n  }\r\n};\r\n\r\nexport const getAllMessages = () => {\r\n  return async (dispatch) => {\r\n\r\n    var wargame = await wargamesApi.getWargame();\r\n\r\n    var messages = await wargamesApi.getAllMessages(wargame.name);\r\n\r\n    dispatch(setWargameMessages(messages));\r\n  }\r\n};\r\n","import uniqid from \"uniqid\";\r\nimport _ from \"lodash\";\r\nimport {fetch} from \"whatwg-fetch\";\r\n\r\nimport PouchDB from \"pouchdb\";\r\nimport {  databasePath,\r\n          serverPath,\r\n          dbDefaultSettings,\r\n          MSG_STORE,\r\n          MSG_TYPE_STORE } from \"./consts\";\r\n\r\nimport {setWargameMessages} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\n\r\nvar wargameDbStore = [];\r\n\r\nexport const populateWargame = (dispatch) => {\r\n  return fetch(serverPath+'allDbs')\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((dbs) => {\r\n      let wargameNames = wargameDbStore.map((db) => db.name);\r\n      let toCreate = _.difference(dbs, wargameNames);\r\n      toCreate = _.pull(toCreate, MSG_STORE, MSG_TYPE_STORE, \"_replicator\", \"_users\");\r\n\r\n      toCreate.forEach((name) => {\r\n        var db = new PouchDB(databasePath+name);\r\n\r\n        db.changes({since: 'now', live: true})\r\n          .on('change', function () {\r\n            (async () => {\r\n              let messages = await getAllMessages(name);\r\n              dispatch(setWargameMessages(messages));\r\n            })();\r\n          });\r\n\r\n        wargameDbStore.unshift({name, db});\r\n      });\r\n\r\n      let promises = wargameDbStore.map((game) => {\r\n        return game.db.get(dbDefaultSettings._id)\r\n          .then(function (res) {\r\n            return {\r\n              name: game.db.name,\r\n              title: res.wargameTitle\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      });\r\n      return Promise.all(promises);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const clearWargames = () => {\r\n  fetch(serverPath+'clearAll')\r\n    .then(() => {\r\n      window.location.reload(true);\r\n    });\r\n};\r\n\r\nexport const createWargame = () => {\r\n  let uniqId = uniqid.time();\r\n\r\n  var name = `wargame-${uniqId}`;\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    var db = new PouchDB(databasePath+name);\r\n\r\n    wargameDbStore.unshift({name, db});\r\n\r\n    let settings = {...dbDefaultSettings, name: name};\r\n    settings.wargameTitle = `${settings.wargameTitle}-${uniqId}`;\r\n\r\n    db.put(settings)\r\n      .then(() => {\r\n        resolve(db.get(settings._id));\r\n      });\r\n  });\r\n};\r\n\r\nexport const editWargame = (dbPath) => {\r\n\r\n  let dbName = getNameFromPath(dbPath);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      var db = wargameDbStore.find((db) => db.name === dbName).db;\r\n      db.get(dbDefaultSettings._id)\r\n        .then((res) => {\r\n          resolve(res);\r\n        });\r\n    } catch (err) {\r\n      reject(err);\r\n      return;\r\n    }\r\n  });\r\n};\r\n\r\nexport const updateWargame = (dbName, data, title) => {\r\n\r\n  return getAllWargames()\r\n    .then(function (games) {\r\n      if (games.some((game) => game.title === title && getNameFromPath(game.name) !== dbName)) return 'invalid';\r\n      return updateLocalDoc(dbName, data, title);\r\n    })\r\n    .catch(function (err) {\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const duplicateWargame = (dbPath) => {\r\n\r\n  let dbName = getNameFromPath(dbPath);\r\n\r\n  let db = wargameDbStore.find((db) => db.name === dbName).db;\r\n  let uniqId = uniqid.time();\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    var newDb;\r\n    var newDbName = `wargame-${uniqId}`;\r\n\r\n    db.get(dbDefaultSettings._id)\r\n      .then((res) => {\r\n        newDb = new PouchDB(databasePath+newDbName);\r\n        return res;\r\n      })\r\n      .then((res) => {\r\n        return newDb.put({\r\n          _id: dbDefaultSettings._id,\r\n          name: newDbName,\r\n          wargameTitle: `${res.wargameTitle}-${uniqId}`,\r\n          tabs: res.tabs,\r\n        })\r\n          .then(() => {\r\n            return res;\r\n          })\r\n      })\r\n      .then(() => {\r\n        wargameDbStore.unshift({name: newDbName, db: newDb});\r\n        return getAllWargames();\r\n      })\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n        console.log(err);\r\n      })\r\n  });\r\n};\r\n\r\nexport const getWargame = () => {\r\n  return new Promise((resolve, reject) => {\r\n    wargameDbStore[0].db.get(dbDefaultSettings._id)\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      })\r\n  });\r\n};\r\n\r\nexport const postNewMessage = (dbName, details, message) => {\r\n\r\n  let db = wargameDbStore.find((db) => db.name === dbName).db;\r\n  let uniqId = uniqid.time();\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    db.put({\r\n      _id: uniqId,\r\n      details,\r\n      message,\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  });\r\n};\r\n\r\nexport const getAllMessages = (dbId) => {\r\n\r\n  let db = wargameDbStore.find((db) => db.name === dbId).db;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    return db.changes({\r\n      since: 1,\r\n      include_docs: true,\r\n      descending: true,\r\n    })\r\n      .then(function (changes) {\r\n\r\n        let results = changes.results.map((a) => a.doc);\r\n        resolve(results);\r\n      })\r\n      .catch(function (err) {\r\n        // handle errors\r\n        reject(err);\r\n        console.log(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport var getAllWargames = function () {\r\n\r\n  let promises = wargameDbStore.map((game) => {\r\n    return game.db.get(dbDefaultSettings._id)\r\n      .then(function (res) {\r\n        return {\r\n          name: game.db.name,\r\n          title: res.wargameTitle\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  });\r\n  return Promise.all(promises);\r\n};\r\n\r\nvar updateLocalDoc = function(dbName, tabs, title) {\r\n\r\n  console.log(dbName);\r\n\r\n  var db = wargameDbStore.find((db) => db.name === dbName).db;\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    db.get(dbDefaultSettings._id)\r\n      .then((res) => {\r\n        db.put({\r\n          _id: dbDefaultSettings._id,\r\n          _rev: res._rev,\r\n          name: dbName,\r\n          wargameTitle: title,\r\n          tabs: tabs,\r\n        })\r\n          .then(() => {\r\n            resolve(db.get(dbDefaultSettings._id));\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          })\r\n      });\r\n  });\r\n};\r\n\r\nvar getNameFromPath = function (dbPath) {\r\n  let path = new URL(dbPath).pathname;\r\n  let index = path.lastIndexOf('/');\r\n  return path.substring(index + 1);\r\n};\r\n","import ActionConstant from '../ActionConstants.js';\r\n\r\nexport const showNotification = (payload) => ({\r\n  type: ActionConstant.SHOW_NOTIFICATION,\r\n  payload: {\r\n    open: true,\r\n    message: payload,\r\n  },\r\n});\r\n\r\nexport const hideNotification = () => ({\r\n  type: ActionConstant.HIDE_NOTIFICATION,\r\n  payload: {\r\n    open: false,\r\n    message: '',\r\n  },\r\n});\r\n","import ActionConstant from '../ActionConstants';\r\nimport 'whatwg-fetch';\r\nimport _ from \"lodash\";\r\n\r\nimport * as wargamesApi from \"../../api/wargames_api\";\r\nimport { showNotification } from \"../Notification/Notification_ActionCreators\";\r\n\r\nexport const setCurrentTab = (tab) => ({\r\n  type: ActionConstant.SET_CURRENT_GAME_SETUP_TAB,\r\n  payload: tab\r\n});\r\n\r\nexport const setGameData = (data) => ({\r\n  type: ActionConstant.SET_GAME_SETUP_DATA,\r\n  payload: data,\r\n});\r\n\r\nexport const setWargameTitle = (data) => ({\r\n  type: ActionConstant.SET_WARGAME_NAME,\r\n  payload: data,\r\n});\r\n\r\nexport const gameTitleInvalid = (data) => ({\r\n  type: ActionConstant.GAME_TITLE_INVALID,\r\n  payload: data,\r\n});\r\n\r\nexport const addNewForce = (data) => ({\r\n  type: ActionConstant.ADD_NEW_FORCE,\r\n  payload: data,\r\n});\r\n\r\nexport const setSelectedForce = (payload) => ({\r\n  type: ActionConstant.SET_SELECTED_FORCE,\r\n  payload\r\n});\r\n\r\n\r\nexport const addNewChannel = (data) => ({\r\n  type: ActionConstant.ADD_NEW_CHANNEL,\r\n  payload: data,\r\n});\r\n\r\n\r\nexport const setSelectedChannel = (payload) => ({\r\n  type: ActionConstant.SET_SELECTED_CHANNEL,\r\n  payload\r\n});\r\n\r\n\r\nexport const setForceOverview = (payload) => ({\r\n  type: ActionConstant.SET_FORCE_OVERVIEW,\r\n  payload,\r\n});\r\n\r\n\r\nconst saveAllWargameNames = (names) => ({\r\n  type: ActionConstant.ALL_WARGAME_NAMES_SAVED,\r\n  payload: names\r\n});\r\n\r\n\r\nconst setCurrentWargame = (data) => ({\r\n  type: ActionConstant.SET_CURRENT_WARGAME,\r\n  payload: data\r\n});\r\n\r\n\r\nexport const addRecipientToChannel = (data) => ({\r\n  type: ActionConstant.ADD_NEW_RECIPIENT,\r\n  payload: data,\r\n});\r\n\r\nexport const updateRecipient = (id, data) => ({\r\n  type: ActionConstant.UPDATE_RECIPIENT,\r\n  payload: { id,data }\r\n});\r\n\r\nexport const removeRecipient = (id) => ({\r\n  type: ActionConstant.REMOVE_RECIPIENT,\r\n  payload: id\r\n});\r\n\r\n\r\nexport const populateWargameStore = () => {\r\n  return async (dispatch) => {\r\n\r\n    var wargameNames = await wargamesApi.populateWargame(dispatch);\r\n\r\n    dispatch(saveAllWargameNames(wargameNames));\r\n  }\r\n};\r\n\r\n\r\nexport const createNewWargameDB = () => {\r\n\r\n  return async (dispatch) => {\r\n\r\n    var wargame = await wargamesApi.createWargame();\r\n\r\n    let wargames = await wargamesApi.getAllWargames();\r\n\r\n    dispatch(saveAllWargameNames(wargames));\r\n\r\n    dispatch(setCurrentWargame(_.omit(wargame, ['_id', '_rev'])));\r\n  }\r\n};\r\n\r\n\r\nexport const clearWargames = () => {\r\n\r\n  return async (dispatch) => {\r\n\r\n    await wargamesApi.clearWargames();\r\n\r\n    let wargames = await wargamesApi.getAllWargames();\r\n    dispatch(saveAllWargameNames(wargames));\r\n\r\n  }\r\n};\r\n\r\n\r\nexport const editWargame = (name) => {\r\n  return async (dispatch) => {\r\n\r\n    let wargame = await wargamesApi.editWargame(name);\r\n\r\n    dispatch(setCurrentWargame(wargame));\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const updateWargame = (dbName, data, title) => {\r\n\r\n  return async (dispatch) => {\r\n\r\n    let localDoc = await wargamesApi.updateWargame(dbName, data, title);\r\n\r\n    let wargames = await wargamesApi.getAllWargames();\r\n\r\n    dispatch(saveAllWargameNames(wargames));\r\n\r\n    dispatch(setCurrentWargame(localDoc));\r\n\r\n    dispatch(showNotification(\"wargame saved.\"));\r\n\r\n  }\r\n};\r\n\r\n\r\nexport const duplicateWargame = (dbName) => {\r\n  return async (dispatch) => {\r\n\r\n    var games = await wargamesApi.duplicateWargame(dbName);\r\n\r\n    dispatch(saveAllWargameNames(games));\r\n  }\r\n};\r\n\r\n","import React, {Component} from 'react';\r\nimport ModalWrapper from './ModalWrapper';\r\nimport \"../../scss/App.scss\";\r\nimport { connect } from 'react-redux';\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport {addNewForce, setSelectedForce} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nclass AddForceModal extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      forceName: ''\r\n    };\r\n  }\r\n\r\n  hideModal = () => {\r\n\r\n    this.setState({\r\n      forceName: '',\r\n    });\r\n\r\n    this.props.dispatch(modalAction.close());\r\n  };\r\n\r\n\r\n  setNewForceName = (e) => {\r\n\r\n    this.setState({\r\n      forceName: e.target.value,\r\n      sameName: this.props.wargame.tabs[this.props.wargame.currentTab].data.forces[e.target.value]\r\n    });\r\n  };\r\n\r\n  addForce = () => {\r\n    this.props.dispatch(addNewForce(this.state.forceName));\r\n    this.props.dispatch(setSelectedForce(this.state.forceName));\r\n  };\r\n\r\n  render() {\r\n\r\n    if (!this.props.currentModal.open) return false;\r\n\r\n    var disable = this.state.forceName.length < 1 || this.state.sameName;\r\n\r\n    return (\r\n      <ModalWrapper>\r\n        <div className=\"display-text-wrapper\">\r\n          <h3>Create force</h3>\r\n          {this.state.sameName ? <p className=\"notification\">Already exists</p> : false}\r\n          <input autoFocus className=\"modal-input\" type=\"text\" onChange={this.setNewForceName} />\r\n          <div className=\"buttons\">\r\n            <button disabled={disable} name=\"add\" className=\"btn btn-action btn-action--primary\" onClick={this.addForce}>Add</button>\r\n            <button name=\"cancel\" className=\"btn btn-action btn-action--secondary\" onClick={this.hideModal}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </ModalWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame, currentModal }) => ({\r\n  wargame,\r\n  currentModal\r\n});\r\n\r\nexport default connect(mapStateToProps)(AddForceModal);\r\n","import uniqid from \"uniqid\";\r\n\r\nimport PouchDB from \"pouchdb\";\r\nimport {  databasePath,\r\n          MSG_STORE} from \"./consts\";\r\n\r\n\r\nvar db = new PouchDB(databasePath+MSG_STORE);\r\n\r\n\r\nexport const addMessage = (messageDetail, schema) => {\r\n  return new Promise((resolve, reject) => {\r\n    (async() => {\r\n\r\n      const allMessages = await getAllMessagesFromDb();\r\n      const matchedName = allMessages.find((el) => el.details.title === messageDetail.title && el._id !== messageDetail.id);\r\n\r\n      if (matchedName) {\r\n        reject(\"Message title already used\");\r\n        return;\r\n      }\r\n\r\n      let time = new Date().toISOString();\r\n\r\n      let message = {\r\n        _id: time,\r\n        lastUpdated: time,\r\n        details: messageDetail,\r\n        schema: schema,\r\n        completed: false\r\n      };\r\n\r\n      return db.put(message)\r\n        .then(function (result) {\r\n          resolve(result);\r\n        })\r\n        .catch(function (err) {\r\n          console.log(err);\r\n          reject(false);\r\n        })\r\n\r\n    })();\r\n  });\r\n};\r\n\r\nexport const duplicateMessageInDb = (id) => {\r\n\r\n  let time = new Date().toISOString();\r\n\r\n  return new Promise((resolve, reject) => {\r\n    db.get(id)\r\n      .then(function (doc) {\r\n\r\n        var updatedMessage = doc.details;\r\n\r\n        updatedMessage.title = `${updatedMessage.title} Copy-${uniqid.time()}`;\r\n\r\n        return db.put({\r\n          _id: time,\r\n          lastUpdated: time,\r\n          details: updatedMessage,\r\n          schema: doc.schema\r\n        });\r\n      })\r\n      .then(function () {\r\n        resolve(true);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        reject(false);\r\n      })\r\n  });\r\n};\r\n\r\nexport const getAllMessagesFromDb = () => {\r\n  return new Promise((resolve, reject) => {\r\n    return db.changes({\r\n      since: 0,\r\n      include_docs: true,\r\n      descending: true,\r\n    })\r\n      .then(function (changes) {\r\n\r\n        let results = changes.results.map((a) => a.doc);\r\n        results = results.filter((a) => !a.hasOwnProperty('_deleted') && a.hasOwnProperty('details'));\r\n\r\n        resolve(results);\r\n      })\r\n      .catch(function (err) {\r\n        // handle errors\r\n        reject(err);\r\n        console.log(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const updateMessageInDb = (id, message) => {\r\n  return new Promise((resolve, reject) => {\r\n    (async() => {\r\n\r\n      const allMessages = await getAllMessagesFromDb();\r\n      const matchedName = allMessages.find((el) => el.details.title === message.title && el._id !== id);\r\n\r\n      if (matchedName) {\r\n        reject(\"Message title already used\");\r\n        return;\r\n      }\r\n\r\n      db.get(id)\r\n        .then(function (doc) {\r\n          return db.put({\r\n            _id: id,\r\n            lastUpdated: new Date().toISOString(),\r\n            _rev: doc._rev,\r\n            details: message,\r\n            schema: doc.schema\r\n          });\r\n        })\r\n        .then(function (result) {\r\n          resolve(result);\r\n        })\r\n        .catch(function (err) {\r\n          console.log(err);\r\n          reject(false);\r\n        });\r\n\r\n    })();\r\n  });\r\n};\r\n\r\nexport const getMessage = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    db.get(id, {include_docs: true}, function(err, doc) {\r\n      if (err) reject('something went wrong');\r\n      resolve(doc);\r\n    });\r\n  });\r\n};\r\n\r\nexport const deleteMessageFromDb = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    db.get(id)\r\n      .then(function (doc) {\r\n        return db.remove(doc);\r\n      })\r\n      .then(function (result) {\r\n        resolve(result);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        reject(false);\r\n      })\r\n  });\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\n\r\nexport const setCurrentViewFromURI = (path) => ({\r\n  type: ActionConstant.SET_CURRENT_VIEW_FROM_URI,\r\n  payload: path\r\n});","import ActionConstant from '../ActionConstants';\r\nimport 'whatwg-fetch';\r\nimport check from 'check-types';\r\n\r\nimport * as messagesApi from \"../../api/messages_api\";\r\n\r\nimport { showNotification } from \"../Notification/Notification_ActionCreators\";\r\nimport {setCurrentViewFromURI} from \"../setCurrentViewFromURI/setCurrentViewURI_ActionCreators\";\r\n\r\nconst DBMessageSaveStatus = (status) => ({\r\n  type: ActionConstant.DB_MESSAGE_STATUS,\r\n  payload: status\r\n});\r\n\r\nconst DBSaveMessageArray = (messages) => ({\r\n  type: ActionConstant.DB_MESSAGE_SAVED,\r\n  payload: messages\r\n});\r\n\r\nconst DBSaveMessagePreview = (message) => ({\r\n  type: ActionConstant.DB_RETURNED_MESSAGE,\r\n  payload: message\r\n});\r\n\r\nconst loadingDBMessageCreate = (isLoading) => ({\r\n  type: ActionConstant.DB_MESSAGE_CREATION_LOADING,\r\n  isLoading\r\n});\r\n\r\nconst loadingDBMessageGet = (isLoading) => ({\r\n  type: ActionConstant.DB_MESSAGES_GET,\r\n  isLoading\r\n});\r\n\r\nexport const resetMessagePreview = () => ({\r\n  type: ActionConstant.RESET_MESSAGE_PREVIEW,\r\n});\r\n\r\n\r\nexport const createMessage = (message, schema) => {\r\n\r\n  if (!check.object(message)) throw Error(`createMessageType() requires object with message, from & to NOT. ${message}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    try {\r\n      var result = await messagesApi.addMessage(message, schema);\r\n\r\n      if (result.err) {\r\n        dispatch(showNotification(result.err));\r\n      }\r\n\r\n      if (result.ok) {\r\n        dispatch(DBMessageSaveStatus(result));\r\n        let messages = await messagesApi.getAllMessagesFromDb();\r\n        dispatch(DBSaveMessageArray(messages));\r\n        dispatch(loadingDBMessageCreate(false));\r\n        dispatch(setCurrentViewFromURI(\"/client/umpireMenu/library\"));\r\n      }\r\n    } catch(e) {\r\n      dispatch(loadingDBMessageCreate(false));\r\n      alert(e);\r\n    }\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const duplicateMessage = (messageId) => {\r\n\r\n  if (!check.string(messageId)) throw Error(`duplicateMessage() requires a string Not. ${messageId}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    var result = await messagesApi.duplicateMessageInDb(messageId);\r\n\r\n    if (result) {\r\n      dispatch(DBMessageSaveStatus(result));\r\n      let messages = await messagesApi.getAllMessagesFromDb();\r\n      dispatch(DBSaveMessageArray(messages));\r\n    }\r\n    dispatch(loadingDBMessageCreate(false));\r\n  }\r\n};\r\n\r\n\r\nexport const updateMessage = (message, id) => {\r\n\r\n  if (!check.object(message)) throw Error(`updateMessage() requires object with message, from & to NOT. ${message}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    try {\r\n      const result = await messagesApi.updateMessageInDb(id, message);\r\n\r\n      if (result.err) {\r\n        dispatch(showNotification(result.err));\r\n      }\r\n\r\n      if (result.ok) {\r\n        dispatch(DBMessageSaveStatus(result));\r\n\r\n        let responses = await Promise.all([messagesApi.getAllMessagesFromDb(), messagesApi.getMessage(result.id)]);\r\n        let [messages, message] = [...responses];\r\n\r\n        dispatch(DBSaveMessagePreview(message));\r\n        dispatch(DBSaveMessageArray(messages));\r\n        dispatch(loadingDBMessageCreate(false));\r\n        dispatch(setCurrentViewFromURI(\"/client/umpireMenu/library\"));\r\n\r\n      }\r\n    } catch (e) {\r\n      // CREATE ERROR WARNING MESSAGE\r\n      dispatch(loadingDBMessageCreate(false));\r\n      alert(e);\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport const deleteMessage = (messageId) => {\r\n\r\n  if (!check.string(messageId)) throw Error(`duplicateMessage() requires a string Not. ${messageId}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    var result = await messagesApi.deleteMessageFromDb(messageId);\r\n\r\n    if (result) {\r\n      let messages = await messagesApi.getAllMessagesFromDb();\r\n      dispatch(DBSaveMessageArray(messages));\r\n      dispatch(resetMessagePreview());\r\n    } else {\r\n      // error action\r\n    }\r\n\r\n    dispatch(loadingDBMessageCreate(false));\r\n  }\r\n};\r\n\r\n\r\nexport const getSingleMessage = (id) => {\r\n\r\n  if (!check.string(id)) throw Error(`duplicateMessage() requires a string id..`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageGet(true));\r\n\r\n    let result = await messagesApi.getMessage(id);\r\n\r\n    dispatch(DBSaveMessagePreview(result));\r\n    dispatch(loadingDBMessageGet(false));\r\n  }\r\n};\r\n\r\nexport const getAllMessages = () => {\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageGet(true));\r\n\r\n    let result = await messagesApi.getAllMessagesFromDb();\r\n\r\n    dispatch(DBSaveMessageArray(result));\r\n    dispatch(loadingDBMessageGet(false));\r\n  }\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\nimport 'whatwg-fetch';\r\nimport check from 'check-types';\r\n\r\nimport * as messageTypesApi from \"../../api/messageTypes_api\";\r\n\r\nimport {setCurrentViewFromURI} from \"../setCurrentViewFromURI/setCurrentViewURI_ActionCreators\";\r\nimport {showNotification} from \"../Notification/Notification_ActionCreators\";\r\n\r\nconst DBMessageSaveStatus = (status) => ({\r\n  type: ActionConstant.DB_MESSAGE_STATUS,\r\n  payload: status\r\n});\r\n\r\nconst DBSaveMessageArray = (messages) => ({\r\n  type: ActionConstant.DB_MESSAGE_TYPES_SAVED,\r\n  payload: messages\r\n});\r\n\r\nconst loadingDBMessageCreate = (isLoading) => ({\r\n  type: ActionConstant.DB_MESSAGE_CREATION_LOADING,\r\n  isLoading\r\n});\r\n\r\nconst loadingDBMessageGet = (isLoading) => ({\r\n  type: ActionConstant.DB_MESSAGE_TYPES_GET,\r\n  isLoading\r\n});\r\n\r\n\r\nexport const createMessageType = (schema) => {\r\n\r\n  if (!check.object(schema)) throw Error(`createMessageType() requires schema object & NOT. ${schema}`);\r\n\r\n  return async (dispatch) => {\r\n\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    try {\r\n\r\n      var result = await messageTypesApi.postNewMessage(schema);\r\n\r\n      if (result.err) {\r\n        dispatch(showNotification(result.err));\r\n        dispatch(loadingDBMessageCreate(false));\r\n      }\r\n\r\n      if (result.ok) {\r\n        dispatch(DBMessageSaveStatus(result));\r\n        let messages = await messageTypesApi.getAllMessagesFromDb();\r\n        dispatch(DBSaveMessageArray(messages));\r\n\r\n        dispatch(loadingDBMessageCreate(false));\r\n        dispatch(setCurrentViewFromURI(\"/client/umpireMenu/templates\"));\r\n      }\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport const duplicateMessageType = (id) => {\r\n\r\n  if (!check.string(id)) throw Error(`duplicateTemplate() requires a string Not. ${id}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    var result = await messageTypesApi.duplicateMessageInDb(id);\r\n\r\n    if (result) {\r\n      dispatch(DBMessageSaveStatus(true));\r\n      let messages = await messageTypesApi.getAllMessagesFromDb();\r\n      dispatch(DBSaveMessageArray(messages));\r\n    }\r\n    dispatch(loadingDBMessageCreate(false));\r\n  }\r\n};\r\n\r\nexport const updateMessageType = (schema, id) => {\r\n\r\n  if (!check.object(schema)) throw Error(`updateMessageType() requires schema & not ${schema}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    try {\r\n      const result = await messageTypesApi.updateMessageInDb(schema, id);\r\n\r\n      if (result.err) {\r\n        dispatch(showNotification(result.err));\r\n        dispatch(loadingDBMessageCreate(false));\r\n      }\r\n\r\n      if (result.ok) {\r\n        dispatch(DBMessageSaveStatus(result.ok));\r\n\r\n        let allMessages = await messageTypesApi.getAllMessagesFromDb();\r\n\r\n        dispatch(DBSaveMessageArray(allMessages));\r\n        dispatch(loadingDBMessageCreate(false));\r\n        dispatch(setCurrentViewFromURI(\"/client/umpireMenu/templates\"));\r\n\r\n      }\r\n    } catch (e) {\r\n      // CREATE ERROR WARNING MESSAGE\r\n      dispatch(loadingDBMessageCreate(false));\r\n      alert(e);\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport const deleteMessageType = (messageId) => {\r\n\r\n  if (!check.string(messageId)) throw Error(`deleteMessage() requires a string of id not. ${messageId}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    var result = await messageTypesApi.deleteMessageFromDb(messageId);\r\n\r\n    if (result) {\r\n      let messages = await messageTypesApi.getAllMessagesFromDb();\r\n      dispatch(DBSaveMessageArray(messages));\r\n    } else {\r\n      // error action\r\n    }\r\n\r\n    dispatch(loadingDBMessageCreate(false));\r\n  }\r\n};\r\n\r\n\r\nexport const getAllMessageTypes = () => {\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageGet(true));\r\n\r\n    let result = await messageTypesApi.getAllMessagesFromDb();\r\n\r\n    dispatch(DBSaveMessageArray(result));\r\n    dispatch(loadingDBMessageGet(false));\r\n  }\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\n\r\nexport const setSelectedSchema = (schemaId) => ({\r\n  type: ActionConstant.SET_SELECTED_SCHEMA,\r\n  payload: schemaId\r\n});\r\n\r\n\r\nexport const setPreviewSchema = (schema) => ({\r\n  type: ActionConstant.SET_PREVIEW_SCHEMA,\r\n  payload: schema\r\n});","import React, {Component} from 'react';\r\nimport ModalWrapper from './ModalWrapper';\r\nimport \"../../scss/App.scss\";\r\nimport { connect } from 'react-redux';\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport { deleteMessage } from \"../../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\nimport { deleteMessageType } from \"../../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\nimport {setPreviewSchema, setSelectedSchema} from \"../../ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators\";\r\n\r\nclass DeleteModal extends Component {\r\n\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  hideModal = () => {\r\n    this.props.dispatch(modalAction.close());\r\n  };\r\n\r\n  deleteMessage = () => {\r\n    if (this.props.currentViewURI === \"/client/umpireMenu/templates\") {\r\n      this.props.dispatch(deleteMessageType(this.props.umpireMenu.selectedSchemaID));\r\n      this.props.dispatch(setPreviewSchema(\"\"));\r\n      this.props.dispatch(setSelectedSchema(\"\"));\r\n    } else {\r\n      this.props.dispatch(deleteMessage(this.props.messages.messagePreviewId));\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    if (!this.props.currentModal.open) return false; // needed ?\r\n\r\n    return (\r\n      <ModalWrapper>\r\n        <div className=\"display-text-wrapper\">\r\n          <h3>Delete</h3>\r\n          <p>This will permanently remove the message.<br/>Are you sure?</p>\r\n          <div className=\"buttons\">\r\n            <button name=\"delete\" className=\"btn btn-action btn-action--primary\" onClick={this.deleteMessage}>Delete</button>\r\n            <button name=\"cancel\" className=\"btn btn-action btn-action--secondary\" onClick={this.hideModal}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </ModalWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ currentModal, messages, umpireMenu, currentViewURI }) => ({\r\n  currentModal,\r\n  messages,\r\n  umpireMenu,\r\n  currentViewURI\r\n});\r\n\r\nexport default connect(mapStateToProps)(DeleteModal);\r\n","import React, {Component} from 'react';\r\nimport ModalWrapper from './ModalWrapper';\r\nimport \"../../scss/App.scss\";\r\nimport { connect } from 'react-redux';\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport {\r\n  addNewChannel,\r\n  setSelectedChannel\r\n} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nclass AddChannelModal extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      channelName: ''\r\n    };\r\n  }\r\n\r\n  hideModal = () => {\r\n\r\n    this.setState({\r\n      channelName: '',\r\n    });\r\n\r\n    this.props.dispatch(modalAction.close());\r\n  };\r\n\r\n\r\n  setChannelName = (e) => {\r\n\r\n    this.setState({\r\n      channelName: e.target.value,\r\n      sameName: this.props.wargame.tabs[this.props.wargame.currentTab].data.channels[e.target.value]\r\n    });\r\n  };\r\n\r\n  addChannel = () => {\r\n    this.props.dispatch(addNewChannel(this.state.channelName));\r\n    this.props.dispatch(setSelectedChannel(this.state.channelName));\r\n  };\r\n\r\n  render() {\r\n\r\n    if (!this.props.currentModal.open) return false;\r\n\r\n    var disable = this.state.channelName.length < 1 || this.state.sameName;\r\n\r\n    return (\r\n      <ModalWrapper>\r\n        <div className=\"display-text-wrapper\">\r\n          <h3>Create channel</h3>\r\n          {this.state.sameName ? <p className=\"notification\">Already exists</p> : false}\r\n          <input autoFocus className=\"modal-input\" type=\"text\" onChange={this.setChannelName} />\r\n          <div className=\"buttons\">\r\n            <button disabled={disable} name=\"add\" className=\"btn btn-action btn-action--primary\" onClick={this.addChannel}>Add</button>\r\n            <button name=\"cancel\" className=\"btn btn-action btn-action--secondary\" onClick={this.hideModal}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </ModalWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame, currentModal }) => ({\r\n  wargame,\r\n  currentModal\r\n});\r\n\r\nexport default connect(mapStateToProps)(AddChannelModal);\r\n","import React, {Component} from 'react';\r\nimport \"../../scss/App.scss\";\r\nimport { connect } from 'react-redux';\r\nimport AddForceModal from \"./AddForceModal\";\r\nimport DeleteModal from './DeleteModal';\r\nimport AddChannelModal from \"./AddChannelModal\";\r\n\r\nclass ModalSwitch extends Component {\r\n\r\n  render() {\r\n\r\n    var modal;\r\n\r\n    switch (this.props.currentModal.modal) {\r\n\r\n      case \"addForce\":\r\n        modal = <AddForceModal />;\r\n        break;\r\n\r\n      case \"delete\":\r\n        modal = <DeleteModal />;\r\n        break;\r\n\r\n      case \"addChannel\":\r\n        modal = <AddChannelModal />;\r\n        break;\r\n\r\n      default:\r\n        modal = false;\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {modal}\r\n      </>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = ({ currentModal }) => ({\r\n  currentModal,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ModalSwitch);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\n\r\nimport { hideNotification } from \"../ActionsAndReducers/Notification/Notification_ActionCreators\";\r\n\r\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nclass Notification extends Component {\r\n\r\n  onClickHandler = (e) => {\r\n\r\n    this.props.dispatch(hideNotification());\r\n\r\n  };\r\n\r\n  render() {\r\n\r\n\r\n    if (!this.props.notification.open) return false;\r\n\r\n    return (\r\n        <div id=\"notification\">\r\n          {this.props.notification.message}<FontAwesomeIcon icon={faTimes} onClick={this.onClickHandler} />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ notification }) => ({\r\n  notification,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Notification);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport { setCurrentViewFromURI } from \"../ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_ActionCreators\"\r\n\r\nimport '../scss/App.scss';\r\n\r\nclass Link extends Component {\r\n\r\n  onClickHandler = (e) => {\r\n\r\n    if (this.props.onClickMethod) this.props.onClickMethod();\r\n\r\n    const aNewTab = e.metaKey || e.ctrlKey;\r\n    const anExternalLink = this.props.href.startsWith('http');\r\n\r\n    if (!aNewTab && !anExternalLink) {\r\n      e.preventDefault();\r\n      this.props.dispatch(setCurrentViewFromURI(this.props.href));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <a href={this.props.href} onClick={this.onClickHandler} id={this.props.id ? this.props.id : null} className={this.props.class ? this.props.class : null}>\r\n        {this.props.children}\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default connect()(Link);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Link from \"../Components/Link\";\r\n\r\nimport '../scss/App.scss';\r\nimport {populateWargameStore} from \"../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nclass UmpireMenu extends Component {\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(populateWargameStore());\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"umpire\" className=\"flex-content-wrapper\">\r\n        <div className=\"flex-content flex-content--fill\">\r\n          <Link href=\"/client/umpireMenu\" class=\"link link--secondary link--large\">Umpire Menu</Link>\r\n          <Link href=\"/client/playerUi\" class=\"link link--secondary link--large\">Player UI</Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = () => ({});\r\n\r\nexport default connect(mapStateToProps)(UmpireMenu);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\nimport _ from \"lodash\";\r\n\r\nimport {\r\n  editWargame,\r\n  duplicateWargame,\r\n} from \"../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nimport {setCurrentViewFromURI} from \"../ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_ActionCreators\";\r\n\r\nimport {faClone, faPencilAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nclass WargameSearchList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageList: this.props.listData,\r\n      searchQuery: this.props.listData,\r\n      searchInput: \"\",\r\n    };\r\n  }\r\n\r\n\r\n  componentWillUpdate(nextProps, nextState, nextContext) {\r\n\r\n    let sameMessagesQuantity = _.difference(nextProps.listData, this.state.messageList).length;\r\n\r\n    if (\r\n      nextProps.listData.length !== this.state.messageList.length ||\r\n      (sameMessagesQuantity !== 0 && this.state.searchInput.length === 0)\r\n    ) {\r\n      this.setState({\r\n        messageList: nextProps.listData\r\n      });\r\n    }\r\n\r\n    if (\r\n      this.state.searchInput.length > 0 &&\r\n      sameMessagesQuantity !== 0\r\n    ) {\r\n      this.filterMessages();\r\n    }\r\n  }\r\n\r\n  setSelectedWargame(name) {\r\n    this.props.dispatch(editWargame(name));\r\n    this.props.dispatch(setCurrentViewFromURI('/client/gameSetup'));\r\n  }\r\n\r\n  duplicateWargame(name) {\r\n    this.props.dispatch(duplicateWargame(name));\r\n  }\r\n\r\n  filterMessages = (input) => {\r\n\r\n    let value = input ? input.target.value : this.state.searchInput;\r\n\r\n    let searchQuery = this.props.listData.filter(function(db) {\r\n      return db.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n    });\r\n\r\n    this.setState({\r\n      searchQuery,\r\n      searchInput: input ? value : this.state.searchInput\r\n    });\r\n  };\r\n\r\n  displayControls = (activeTitle) => {\r\n    this.setState({\r\n      activeTitle,\r\n    });\r\n  };\r\n\r\n  hideControls = () => {\r\n    this.setState({\r\n      activeTitle: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    var that = this;\r\n\r\n    var list = this.state.searchInput ? this.state.searchQuery : this.state.messageList;\r\n\r\n    return (\r\n      <div className=\"searchlist\">\r\n        <input type=\"text\" className=\"searchlist-input\" key=\"search-templates\" placeholder=\"Search games\" onChange={ this.filterMessages } value={this.state.searchInput} />\r\n        <div className=\"searchlist-list\">\r\n          { list.map(function(db) {\r\n            // let active\r\n            return (\r\n              <span className=\"searchlist-title\" key={db.title} onMouseOver={that.displayControls.bind(that, db.title)} onMouseLeave={that.hideControls}>\r\n                {db.title}\r\n                {that.state.activeTitle === db.title ?\r\n                  <>\r\n                    <FontAwesomeIcon icon={faPencilAlt} onClick={that.setSelectedWargame.bind(that, db.name)} />\r\n                    <FontAwesomeIcon icon={faClone} onClick={that.duplicateWargame.bind(that, db.name)} />\r\n                  </>\r\n                  : null\r\n                }\r\n              </span>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// empty mapStateToProps is here for react-redux to wire up the dispatch function to props so firing actions is possible.\r\nconst mapStateToProps = () => ({});\r\n\r\n\r\nexport default connect(mapStateToProps)(WargameSearchList);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Link from \"../Components/Link\";\r\n\r\nimport '../scss/App.scss';\r\n// import SearchList from \"../Components/SearchList\";\r\n\r\nimport {\r\n  createNewWargameDB,\r\n  clearWargames,\r\n} from \"../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nimport WargameSearchList from \"../Components/WargameSearchList\";\r\n\r\nclass GameDesignerInterface extends Component {\r\n\r\n  createWargame = () => {\r\n    this.props.dispatch(createNewWargameDB());\r\n  };\r\n\r\n  clearWargames = () => {\r\n    this.props.dispatch(clearWargames());\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"umpire\" className=\"flex-content-wrapper\">\r\n        <div className=\"flex-content flex-content--big\">\r\n          <Link href=\"/client/umpireMenu/templates\" class=\"link link--secondary link--large\">Message Templates</Link>\r\n          <Link href=\"/client/umpireMenu/library\" class=\"link link--secondary link--large\">Message Library</Link>\r\n        </div>\r\n        <div className=\"flex-content flex-content--big\">\r\n          <span>Games</span>\r\n          <Link\r\n            href=\"/client/gameSetup\"\r\n            class=\"link link--noIcon\"\r\n            onClickMethod={this.createWargame}\r\n          >Create</Link>\r\n          <Link\r\n            href=\"/client/umpireMenu\"\r\n            class=\"link link--noIcon link--secondary\"\r\n            onClickMethod={this.clearWargames}\r\n          >Clear wargames</Link>\r\n          <WargameSearchList key=\"searchlist\"\r\n                             listData={this.props.wargame.wargameList}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// empty mapStateToProps is here for react-redux to wire up the dispatch function to props so firing actions is possible.\r\nconst mapStateToProps = ({wargame}) => ({\r\n  wargame\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(GameDesignerInterface);\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createMessage,\r\n} from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport JSONEditor from '@json-editor/json-editor';\r\n// necessary import for date\r\nimport flatpickr from \"flatpickr\";\r\n\r\nimport '../scss/App.scss';\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSave} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nclass JsonCreator extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.editor = null;\r\n    this.editorPreviewRef = React.createRef();\r\n\r\n    this.state = {\r\n      selectedSchema: ''\r\n    };\r\n  }\r\n\r\n\r\n  componentWillUpdate(nextProps, nextState, nextContext) {\r\n\r\n    if (this.editor && nextProps.umpireMenu.selectedSchemaID !== this.props.umpireMenu.selectedSchemaID) {\r\n      this.editor.destroy();\r\n      this.editor = null;\r\n    }\r\n\r\n    if (\r\n      nextProps.umpireMenu.selectedSchemaID.length > 0 &&\r\n      nextProps.messageTypes &&\r\n      nextProps.messageTypes.messages.length > 0\r\n    ) {\r\n\r\n      if (this.editor) return;\r\n\r\n      this.editor = new JSONEditor(this.editorPreviewRef.current, {\r\n        schema: nextProps.messageTypes.messages.find((mes) => mes._id === nextProps.umpireMenu.selectedSchemaID).details,\r\n        theme: 'bootstrap4'\r\n      });\r\n    }\r\n\r\n    if (\r\n      nextProps.messages.messagePreviewId.length > 0 &&\r\n      nextProps.messageTypes.messages.length > 0 &&\r\n      !nextProps.disabled\r\n    ) {\r\n\r\n      const data = nextProps.messages.messages.find(function(mes) {\r\n        return mes._id.toLowerCase().indexOf(nextProps.messages.messagePreviewId.toLowerCase()) > -1;\r\n      });\r\n      this.editor.setValue(data.details);\r\n    }\r\n\r\n    if (this.props.disabled && this.editor) {\r\n      this.editor.disable();\r\n    }\r\n  }\r\n\r\n\r\n  saveMessage = () => {\r\n    let schema = this.props.messageTypes.messages.find((mes) => mes._id === this.props.umpireMenu.selectedSchemaID).details;\r\n\r\n    this.props.dispatch(createMessage(this.editor.getValue(), {...schema, _id: this.props.umpireMenu.selectedSchemaID}));\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"button-wrap\">\r\n          {!this.props.disabled ? <span onClick={this.saveMessage} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span> : null }\r\n        </div>\r\n          <div id=\"preview-editor\" ref={this.editorPreviewRef}></div>\r\n        <div className=\"button-wrap\">\r\n          {!this.props.disabled ? <span onClick={this.saveMessage} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span> : null }\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, selectedSchema, umpireMenu }) => ({\r\n  messages,\r\n  messageTypes,\r\n  selectedSchema,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(JsonCreator);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\nimport check from \"check-types\";\r\nimport moment from \"moment\";\r\n\r\nclass MessagePreview extends Component {\r\n\r\n  createObjItem(pair) {\r\n    const that = this;\r\n    return (\r\n      <>\r\n        {/*<h3>{pair[0]}</h3>*/}\r\n        <span key={`objItem--${pair[0]}-${pair[1]}`} className=\"group-section\">{ that.deconstructObj(pair[1]) }</span>\r\n      </>\r\n    )\r\n  }\r\n\r\n  createBoolItem(pair) {\r\n    return <span key={`boolItem--${pair[0]}-${pair[1]}`}>{pair[1] ? pair[0] : false}</span>\r\n  }\r\n\r\n  createTimeItem(pair) {\r\n\r\n    return (\r\n      <>\r\n        <h3>{pair[0]}</h3>\r\n        <span key={`dateTime-${pair[1]}`}>{moment(pair[1]).format('Do MMMM YYYY, HH:mm')}</span>\r\n      </>\r\n    )\r\n  }\r\n\r\n  createStrItem(pair, withoutName) {\r\n    return <span key={`strItem-${pair[0]}-${pair[1]}`}><b>{pair[0]}: </b>{pair[1]}</span>\r\n  }\r\n\r\n  deconstructArr(pair) {\r\n    const that = this;\r\n    return (\r\n      <>\r\n        <h3>{pair[0]}</h3>\r\n        {pair[1].map((item) => {\r\n          // CHECK NAME PROP ON EVERY OBJ\r\n          return (\r\n              <span key={`section-${item.name}`}>{ that.deconstructObj(item) }</span>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\n  deconstructObj(obj) {\r\n\r\n    const that = this;\r\n    const keyPropPairs = Object.entries(obj);\r\n\r\n    return keyPropPairs.map((pair, i) => {\r\n\r\n      if (check.object(pair[1])) return that.createObjItem(pair);\r\n      if (check.array.of.object(pair[1])) return that.deconstructArr(pair);\r\n      if (check.boolean(pair[1])) return that.createBoolItem(pair);\r\n\r\n      if (moment(pair[1], moment.ISO_8601, true).isValid()) return that.createTimeItem(pair);\r\n\r\n      return that.createStrItem(pair);\r\n\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    if (!this.props.detail) return false;\r\n\r\n    const that = this;\r\n    const keyPropPairs = Object.entries(this.props.detail);\r\n\r\n\r\n    return keyPropPairs.map((pair, i) => {\r\n\r\n      if (i===0) return (\r\n        <>\r\n          <h2 key={`title-${pair[1]}`}>{pair[1]}</h2>\r\n          { this.props.from ? <span key={'from'}>From: {this.props.from}</span> : false }\r\n        </>\r\n      );\r\n\r\n      if (check.object(pair[1])) return that.createObjItem(pair);\r\n      if (check.array.of.object(pair[1])) return that.deconstructArr(pair);\r\n      if (check.boolean(pair[1])) return that.createBoolItem(pair);\r\n      if (moment(pair[1], moment.ISO_8601, true).isValid()) return that.createTimeItem(pair);\r\n\r\n      return (\r\n        <>\r\n          <h3>{pair[0]}</h3>\r\n          <span key={`${pair[0]}-${pair[1]}`}>{pair[1]}</span>\r\n        </>\r\n      )\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport default connect()(MessagePreview);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\n\r\nimport moment from \"moment\";\r\nimport classNames from \"classnames\";\r\nimport {PropTypes} from \"prop-types\";\r\n\r\nclass SearchList extends Component {\r\n\r\n  setSelected = (item) => {\r\n    this.props.setSelected(item);\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    var that = this;\r\n\r\n    return (\r\n      <div className=\"searchlist\">\r\n        <input type=\"text\" className=\"searchlist-input\" key=\"search-templates\" placeholder={this.props.placeholder} onChange={ this.props.filter } value={this.props.searchQuery} />\r\n        <div className=\"searchlist-list\">\r\n          { this.props.listData.map(function(item) {\r\n\r\n            // onClick handlers should not contain instantiating () to pass a specific value, .bind can be used here this is a simpler\r\n            // ES5 way to pass properties to click handlers from arrays, another option is to build a sub-component but I don't like\r\n            // how the data moves back and forth, it breaks Reacts initial idea of 1 way data flow.\r\n\r\n            let active = item._id === that.props.selected ? 'active' : null;\r\n\r\n            let title = item.details.title;\r\n            let date = moment(item.lastUpdated).format('DD/MM/YY');\r\n            return <span className={classNames({\"searchlist-title\": true, active})} href=\"#\" onClick={that.setSelected.bind(that, item)} key={item._id}>{title} - {date}</span>\r\n          })\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// empty mapStateToProps is here for react-redux to wire up the dispatch function to props so firing actions is possible.\r\nconst mapStateToProps = ({ currentViewURI, umpireMenu }) => ({\r\n  currentViewURI,\r\n  umpireMenu\r\n});\r\n\r\nSearchList.propTypes = {\r\n  listData: PropTypes.array.isRequired,\r\n  filter: PropTypes.func.isRequired,\r\n  selected: PropTypes.string.isRequired,\r\n  setSelected: PropTypes.func.isRequired,\r\n  searchQuery: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nexport default connect(mapStateToProps)(SearchList);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Link from \"../Components/Link\";\r\n\r\nimport {\r\n  getAllMessageTypes,\r\n  duplicateMessageType,\r\n} from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n\r\nimport {\r\n  getAllMessages,\r\n  duplicateMessage, getSingleMessage\r\n} from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport { modalAction } from \"../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\n\r\n\r\nimport JsonCreator from \"../Components/JsonCreator\";\r\nimport MessagePreview from \"../Components/MessagePreview\";\r\nimport '../scss/App.scss';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPencilAlt, faClone, faTrash, faArrowLeft,faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport SearchList from \"../Components/SearchList\";\r\nimport {setSelectedSchema} from \"../ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators\";\r\n\r\nclass UmpireMenu extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let creatorType = this.props.currentViewURI.split('/')[3];\r\n\r\n    this.state = {\r\n      searchQuery: '',\r\n      creatorType: creatorType,\r\n      messageList: creatorType === 'templates' ? this.props.messageTypes.messages : this.props.messages.messages,\r\n    };\r\n\r\n    this.buildMessageBoard();\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(setSelectedSchema(\"\"));\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.state.searchQuery.length === 0) {\r\n      // only on page load\r\n      this.setState({\r\n        messageList: this.state.creatorType === 'templates' ? nextProps.messageTypes.messages : nextProps.messages.messages,\r\n      });\r\n    }\r\n\r\n    if (nextProps.messages.messages.length !== this.props.messages.messages.length) setTimeout(this.filterMessages, 1); // setTimeout to wait one tick to allow messageList to update\r\n  }\r\n\r\n\r\n  buildMessageBoard() {\r\n\r\n    switch (this.state.creatorType) {\r\n\r\n      case 'templates':\r\n        // get template data action\r\n        this.props.dispatch(getAllMessageTypes());\r\n        break;\r\n\r\n      case 'library':\r\n        // get library data action\r\n        this.props.dispatch(getAllMessages());\r\n        break;\r\n\r\n      default:\r\n        // throw developer an error\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  setSelectedSchemaId = (item) => {\r\n\r\n    switch (this.state.creatorType) {\r\n      case 'templates':\r\n        this.props.dispatch(setSelectedSchema(item._id));\r\n        break;\r\n\r\n      case 'library':\r\n        this.props.dispatch(setSelectedSchema(item.schema._id));\r\n        this.props.dispatch(getSingleMessage(item._id));\r\n        break;\r\n\r\n      default:\r\n        console.log('error');\r\n        break;\r\n    }\r\n  };\r\n\r\n\r\n  // event listener functions from the DOM will lose scope of this to the React Class unless stated as an arrow function\r\n  // or this is bound to them within the constructor like.. this.filterMessages = this.filterMessages.bind(this);\r\n  // arrow functions are es6 syntax and preferable if babel compiler can compile them. - They have the scope of where they're\r\n  // defined unlike a normal function that has it's own scope.\r\n  filterMessages = (input) => {\r\n\r\n    let value = input ? input.target.value : this.state.searchQuery;\r\n\r\n    let newState;\r\n\r\n    switch (this.state.creatorType) {\r\n      case 'templates':\r\n        newState = this.props.messageTypes.messages.filter(function(mes) {\r\n          return mes.details.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n        });\r\n        break;\r\n\r\n      case 'library':\r\n        newState = this.props.messages.messages.filter(function(mes) {\r\n          return mes.details.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n        });\r\n        break;\r\n\r\n      default:\r\n        newState = [];\r\n        break;\r\n    }\r\n\r\n    this.setState({\r\n      messageList: newState,\r\n      searchQuery: value\r\n    });\r\n  };\r\n\r\n\r\n  createSearchListSection() {\r\n\r\n    switch (this.state.creatorType) {\r\n\r\n      case 'templates':\r\n\r\n        return [\r\n            <Link href=\"/client/messageCreator/create/template\" key=\"templates\" class=\"link\"><FontAwesomeIcon icon={faPlus} />Create new template</Link>,\r\n            <SearchList key=\"searchlist\"\r\n                        listData={this.state.messageList}\r\n                        searchQuery={this.state.searchQuery}\r\n                        filter={this.filterMessages}\r\n                        selected={this.props.umpireMenu.selectedSchemaID}\r\n                        setSelected={this.setSelectedSchemaId}\r\n                        placeholder={'Select template'}\r\n            />\r\n        ];\r\n\r\n      case 'library':\r\n\r\n        return [\r\n            <Link href=\"/client/messageCreator/create/message\" key=\"messages\" class=\"link\"><FontAwesomeIcon icon={faPlus} />Create new Message</Link>,\r\n            <SearchList key=\"searchlist\"\r\n                        listData={this.state.messageList}\r\n                        searchQuery={this.state.searchQuery}\r\n                        filter={this.filterMessages}\r\n                        selected={this.props.messages.messagePreviewId}\r\n                        setSelected={this.setSelectedSchemaId}\r\n                        placeholder={'Select template'}\r\n            />\r\n        ];\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  createMessagesActions() {\r\n    return this.props.messages.messagePreviewId.length > 0 ?\r\n      <>\r\n        <Link class=\"link link--secondary\" href={this.state.creatorType === 'templates' ? \"/messageCreator/edit/template\" : \"/messageCreator/edit/message\"}><FontAwesomeIcon icon={faPencilAlt} />Edit</Link>\r\n        <span className=\"link link--secondary\" onClick={this.duplicateMessage}><FontAwesomeIcon icon={faClone} />Duplicate</span>\r\n        <span className=\"link link--secondary\" onClick={this.deleteMessage}><FontAwesomeIcon icon={faTrash} />Delete</span>\r\n      </>\r\n      :\r\n      null;\r\n  }\r\n\r\n\r\n  createTemplatesActions() {\r\n    return this.props.umpireMenu.selectedSchemaID.length > 0 ?\r\n      <>\r\n        <Link class=\"link link--secondary\" href={this.state.creatorType === 'templates' ? \"/messageCreator/edit/template\" : \"/messageCreator/edit/message\"}><FontAwesomeIcon icon={faPencilAlt} />Edit</Link>\r\n        <span className=\"link link--secondary\" onClick={this.duplicateTemplate}><FontAwesomeIcon icon={faClone} />Duplicate</span>\r\n        <span className=\"link link--secondary\" onClick={this.deleteTemplate}><FontAwesomeIcon icon={faTrash} />Delete</span>\r\n      </>\r\n      :\r\n      null;\r\n  };\r\n\r\n\r\n  duplicateTemplate = () => {\r\n    this.props.dispatch(duplicateMessageType(this.props.umpireMenu.selectedSchemaID))\r\n  };\r\n\r\n\r\n  deleteTemplate = () => {\r\n    this.props.dispatch(modalAction.open(\"delete\"));\r\n  };\r\n\r\n\r\n  duplicateMessage = () => {\r\n    this.props.dispatch(duplicateMessage(this.props.messages.messagePreviewId));\r\n  };\r\n\r\n\r\n  deleteMessage = () => {\r\n    this.props.dispatch(modalAction.open(\"delete\"));\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message {this.state.creatorType}</h1>\r\n        <div className=\"flex-content-wrapper\">\r\n          <div id=\"selection\" className=\"flex-content\">\r\n            { this.createSearchListSection() }\r\n          </div>\r\n          <div id=\"preview\" className=\"flex-content flex-content--big\">\r\n            <p className=\"heading--sml\">Preview</p>\r\n            { this.state.creatorType === 'templates' ?\r\n              <JsonCreator id=\"preview\"\r\n                           disabled={true}\r\n                           previewForm={true}\r\n              />\r\n            :\r\n              <div className=\"message-preview\">\r\n                <MessagePreview detail={this.props.messages.messagePreview.details} />\r\n              </div>\r\n            }\r\n          </div>\r\n          <div id=\"function\" className=\"flex-content flex-content--sml\">\r\n            <p className=\"heading--sml\">Actions</p>\r\n\r\n            {this.state.creatorType === 'templates' ?\r\n              this.createTemplatesActions()\r\n            :\r\n              this.createMessagesActions()\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messageTypes, messages, currentViewURI, umpireMenu }) => ({\r\n  messageTypes,\r\n  messages,\r\n  currentViewURI,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(UmpireMenu);\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  updateMessage,\r\n} from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport JSONEditor from '@json-editor/json-editor';\r\nimport '../scss/App.scss';\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSave} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nclass JsonCreator extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.editor = null;\r\n    this.editorPreviewRef = React.createRef();\r\n\r\n    this.state = {\r\n      selectedSchema: ''\r\n    };\r\n  }\r\n\r\n\r\n  componentWillUpdate(nextProps, nextState, nextContext) {\r\n\r\n    if (this.editor && nextProps.umpireMenu.selectedSchemaID !== this.props.umpireMenu.selectedSchemaID) {\r\n      this.editor.destroy();\r\n      this.editor = null;\r\n    }\r\n\r\n    // check logic\r\n    if (\r\n      nextProps.messages.messagePreviewId.length > 0 ||\r\n      nextProps.umpireMenu.selectedSchemaID.length > 0\r\n      // nextProps.messages.messagePreviewId.length > 0 &&\r\n      // nextProps.umpireMenu.selectedSchemaID.length > 0\r\n    ) {\r\n\r\n      if (this.editor) return;\r\n\r\n      this.editor = new JSONEditor(this.editorPreviewRef.current, {\r\n        schema: nextProps.messages.messagePreview.schema,\r\n        theme: 'bootstrap4'\r\n      });\r\n    }\r\n\r\n    if (nextProps.messages.messagePreview.details) {\r\n      this.editor.setValue(nextProps.messages.messagePreview.details);\r\n    }\r\n\r\n    if (this.props.disabled && this.editor) {\r\n      this.editor.disable();\r\n    }\r\n  }\r\n\r\n\r\n  saveMessage = () => {\r\n    this.props.dispatch(updateMessage(this.editor.getValue(), this.props.messages.messagePreviewId));\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"button-wrap\">\r\n          {!this.props.disabled ? <span onClick={this.saveMessage} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span> : null }\r\n        </div>\r\n          <div id=\"preview-editor\" ref={this.editorPreviewRef}></div>\r\n        <div className=\"button-wrap\">\r\n          {!this.props.disabled ? <span onClick={this.saveMessage} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span> : null }\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, selectedSchema, umpireMenu }) => ({\r\n  messages,\r\n  messageTypes,\r\n  selectedSchema,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(JsonCreator);\r\n","import React, { Component } from 'react';\r\nimport '../scss/App.scss';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport JsonEditor from \"../Components/JsonEditor\";\r\n\r\nimport { getAllMessageTypes } from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n// import { resetMessagePreview } from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport Link from \"../Components/Link\";\r\n// import SearchList from \"../Components/SearchList\";\r\n// import {setCurrentViewFromURI} from \"../ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_ActionCreators\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faArrowLeft} from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass EditMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageToEdit: this.props.messages.messagePreviewId,\r\n      messageList: this.props.messages.messages, // set to state for filter, without filter don't set props to state to avoid bugs\r\n      searchInput: '',\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(getAllMessageTypes());\r\n  }\r\n\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.props.messages.messages.length !== nextProps.messages.messages.length) {\r\n      this.setState({\r\n        messageToEdit: nextProps.messages.messagePreviewId,\r\n        messageList:  nextProps.messages.messages\r\n      });\r\n    }\r\n  }\r\n\r\n  filterMessages = (input) => {\r\n\r\n    let value = input.target.value;\r\n\r\n    let newState = this.props.messages.messages.filter(function(mes) {\r\n      return mes.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n    });\r\n\r\n    this.setState({\r\n      messageList: newState,\r\n      searchInput: value.toLowerCase()\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message library</h1>\r\n        <div className=\"flex-content-wrapper\">\r\n          <div id=\"preview\" className=\"flex-content flex-content--solo-item\">\r\n            <JsonEditor id=\"preview\"\r\n                        disabled={ false }\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes }) => ({\r\n  messages,\r\n  messageTypes\r\n});\r\n\r\nexport default connect(mapStateToProps)(EditMessage);\r\n","import React, { Component } from 'react';\r\nimport '../scss/App.scss';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport JsonCreator from \"../Components/JsonCreator\";\r\n\r\nimport {getAllMessageTypes} from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\nimport { resetMessagePreview } from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport Link from \"../Components/Link\";\r\nimport SearchList from \"../Components/SearchList\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {setSelectedSchema} from \"../ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators\";\r\n\r\nclass EditMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageList: this.props.messageTypes.messages, // set to state for filter, without filter don't set props to state to avoid bugs\r\n      searchInput: '',\r\n    };\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(resetMessagePreview());\r\n    this.props.dispatch(getAllMessageTypes());\r\n  };\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.props.messageTypes.messages.length !== nextProps.messageTypes.messages.length) {\r\n      this.setState({\r\n        messageList: nextProps.messageTypes.messages\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  filterMessages = (input) => {\r\n\r\n    let value = input.target.value;\r\n\r\n    let newState = this.props.messageTypes.messages.filter(function(mes) {\r\n      return mes.details.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n    });\r\n\r\n    this.setState({\r\n      messageList: newState,\r\n      searchQuery: value\r\n    });\r\n  };\r\n\r\n  setSelectedSchemaId = (item) => {\r\n    this.props.dispatch(setSelectedSchema(item._id));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message library</h1>\r\n         <div className=\"flex-content-wrapper\">\r\n          <div id=\"selection\" className=\"flex-content\">\r\n            <SearchList key=\"search-templates\"\r\n                        listData={this.state.messageList}\r\n                        searchQuery={this.state.searchQuery}\r\n                        filter={this.filterMessages}\r\n                        selected={this.props.umpireMenu.selectedSchemaID}\r\n                        setSelected={this.setSelectedSchemaId}\r\n                        placeholder={'Select template'}\r\n            />\r\n          </div>\r\n          <div id=\"preview\" className=\"flex-content flex-content--big\">\r\n            <JsonCreator id=\"preview\" disabled={false} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, umpireMenu, currentViewURI }) => ({\r\n  messages,\r\n  messageTypes,\r\n  umpireMenu,\r\n  currentViewURI\r\n});\r\n\r\nexport default connect(mapStateToProps)(EditMessage);\r\n","import JSONEditor from '@json-editor/json-editor'\r\n// -------- Editor class ---------------------------------------------------\r\n\r\n// create a JSON Editor, elementId is the id in which to render the editor\r\nfunction Editor(elementId) {\r\n    this.jsonEditor = null;\r\n    this.renderZone = typeof elementId === \"string\" ? document.getElementById(elementId) : elementId.current;\r\n}\r\n\r\n// Destroy editor, and remove it from view\r\nEditor.prototype.destroy = function() {\r\n    if(this.jsonEditor) {\r\n        this.jsonEditor.destroy();\r\n        this.jsonEditor = null;\r\n    }\r\n}\r\n\r\n// Recreate a new editor based on the given schema and start value\r\n// If schema is undefined, the editor is not recreated, but only destroyed\r\nEditor.prototype.updateSchema = function(schema) {\r\n    this.destroy();\r\n    this.jsonEditor = new JSONEditor(this.renderZone, { schema: schema });\r\n}\r\n\r\n// Validate JSON\r\nEditor.prototype.validate = function() {\r\n    return this.jsonEditor.validate();\r\n}\r\n\r\n// Get generated JSON\r\nEditor.prototype.getJSON = function() {\r\n    return this.jsonEditor.getValue();\r\n}\r\n\r\n// --------------- PreviewEditor subclass ------------------------------------\r\n\r\n// create a JSON Editor that doesn't allow specifying additional properties,\r\n// but only those specified in the schema can be set.\r\n// elementId is the id in which to render the editor,\r\nexport function PreviewEditor(elementId) {\r\n    Editor.call(this, elementId);\r\n}\r\n\r\n// Inherit Editor methods\r\nPreviewEditor.prototype = Object.create(Editor.prototype);\r\n\r\n// After `PreviewEditor.prototype = Object.create(Editor.prototype)` instruction,\r\n// PreviewEditor.prototype is a copy of Editor.prototype,\r\n// so the `constructor` property of PreviewEditor.prototype is Editor,\r\n// but a PreviewEditor object is created with the PreviewEditor constructor,\r\n// so we override the `constructor` property of PreviewEditor.prototype to PreviewEditor\r\nObject.defineProperty(PreviewEditor.prototype, 'constructor', {\r\n    value: PreviewEditor,\r\n    enumerable: false, // so that it does not appear in 'for in' loop\r\n    writable: true\r\n});\r\n\r\nPreviewEditor.prototype.updateSchema = function(schema) {\r\n    this.destroy();\r\n    this.jsonEditor = new JSONEditor(this.renderZone, {\r\n        schema: schema,\r\n        no_additional_properties: true\r\n    });\r\n}\r\n\r\n\r\n// --------------- SchemaEditor subclass -------------------------------------\r\n\r\n// create a JSON Editor for a JSON Schema, it adds a save button\r\n// to save the Schema to a file, and also\r\n// makes the 'Properties' buttons distinguishable to avoid confusion between\r\n// schema properties and object properties.\r\n// elementId is the id in which to render the editor,\r\nexport function SchemaEditor(elementId) {\r\n    Editor.call(this, elementId);\r\n\r\n    // Check whether the node is a properties button for an object,\r\n    // and not for the schema of an object named properties\r\n    var isObjectPropertiesButton = function(node) {\r\n        // Does the path end in '.properties'?\r\n        if(node.matches('div[data-schemapath$=\".properties\"] > h3 > div > button.json-editor-btntype-properties')) {\r\n            var containingDiv = node.parentElement.parentElement.parentElement;\r\n            var span = containingDiv.querySelector('h3 > span');\r\n\r\n            // Is it an object properties or a property named properties?\r\n            if(span && span.innerText === 'properties') {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    this.observer = new MutationObserver(function(mutationsList, observer) {\r\n        for(var mutation of mutationsList) {\r\n            mutation.addedNodes.forEach(function(node) {\r\n                if(node.nodeType === 1) {\r\n                    if(isObjectPropertiesButton(node)) {\r\n                        node.querySelector('span').innerText = 'Add/Remove';\r\n                    }\r\n                    else if(node.matches('button.json-editor-btntype-properties')) {\r\n                        // For other properties buttons, remove the 'Properties' label,\r\n                        // and use a cog as icon\r\n                        var icon = node.querySelector('i');\r\n                        icon.classList.remove('fa-pen');\r\n                        icon.classList.add('fa-cog');\r\n\r\n                        var span = node.querySelector('span');\r\n                        span.innerText = '';\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    this.observer.observe(this.renderZone, { childList: true, subtree: true });\r\n}\r\n\r\n// Inherit Editor methods\r\nSchemaEditor.prototype = Object.create(Editor.prototype);\r\n\r\n// After `SchemaEditor.prototype = Object.create(Editor.prototype)` instruction,\r\n// SchemaEditor.prototype is a copy of Editor.prototype,\r\n// so the `constructor` property of SchemaEditor.prototype is Editor,\r\n// but a SchemaEditor object is created with the SchemaEditor constructor,\r\n// so we override the `constructor` property of SchemaEditor.prototype to SchemaEditor\r\nObject.defineProperty(SchemaEditor.prototype, 'constructor', {\r\n    value: SchemaEditor,\r\n    enumerable: false, // so that it does not appear in 'for in' loop\r\n    writable: true\r\n});\r\n\r\n// Override the updateSchema function\r\nSchemaEditor.prototype.updateSchema = function(schema) {\r\n    this.destroy();\r\n\r\n    // Add extra validation logic for integer Schemas that use the `range` format.\r\n    // For integer Schemas that use the `range` format we require that minimum and maximum properties are set, too.\r\n    var range_integer_validator = function(schema, value, path) {\r\n        var errors = [];\r\n        if(value !== null && value.type === 'integer' && value.format === 'range') {\r\n            if(typeof value.minimum === 'undefined' || typeof value.maximum === 'undefined') {\r\n                errors.push({\r\n                    path: path,\r\n                    property: 'format',\r\n                    message: 'The range format requires that you specify both minimum and maximum properties, too.'\r\n                });\r\n            }\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    // Check that if minimum and maximum are specified, minimum <= maximum\r\n    var min_max_consistence_validator = function(schema, value, path) {\r\n        var errors = [];\r\n        if(value !== null && (value.type === 'integer' || value.type === 'number')) {\r\n            if(typeof value.minimum !== 'undefined' && typeof value.minimum !== 'undefined' && value.minimum > value.maximum) {\r\n                errors.push({\r\n                    path: path,\r\n                    property: 'maximum',\r\n                    message: 'The maximum value must be greater than or equal than the minimum value.'\r\n                });\r\n            }\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    // Recreate the JSON-Editor\r\n    this.jsonEditor = new JSONEditor(this.renderZone, {\r\n        schema: schema,\r\n        custom_validators: [ range_integer_validator, min_max_consistence_validator ]\r\n    });\r\n\r\n\r\n    // Add a save button\r\n    var filename = 'schema.json';\r\n    var saveButtonLabel = 'Save';\r\n\r\n    this.jsonEditor.on('ready', function() {\r\n        var button = this.root.getButton(saveButtonLabel, 'save', saveButtonLabel);\r\n        var button_holder = this.root.theme.getHeaderButtonHolder();\r\n        button_holder.appendChild(button);\r\n        this.root.header.parentNode.insertBefore(button_holder, this.root.header.nextSibling);\r\n\r\n        var jsonEditor = this;\r\n        button.addEventListener('click', function(e) {\r\n            e.preventDefault();\r\n            var contents = jsonEditor.getValue();\r\n            var blob = new Blob([JSON.stringify(contents, null, 2)], {\r\n                type: \"application/json;charset=utf-8\"\r\n            });\r\n\r\n            if(window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n                window.navigator.msSaveOrOpenBlob(blob, filename);\r\n            }\r\n            else {\r\n                var a = document.createElement('a');\r\n                a.download = filename;\r\n                a.href = URL.createObjectURL(blob);\r\n                a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n\r\n                a.dispatchEvent(new MouseEvent('click', {\r\n                    'view': window,\r\n                    'bubbles': true,\r\n                    'cancelable': false\r\n                }));\r\n            }\r\n        }, false);\r\n    });\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Card, CardHeader, CardBody, CardFooter } from 'reactstrap';\r\nimport { SchemaEditor } from './json-schema-editor/editor';\r\nimport PropTypes from 'prop-types';\r\nimport JSONEditor from '@json-editor/json-editor';\r\n\r\nclass JsonSchemaEditor extends Component {\r\n\r\n  constructor(props, content) {\r\n    super(props, content);\r\n\r\n    this.schemaEditor = null;\r\n    this.editorBox = React.createRef();\r\n    this.onChange = this.onChange.bind(this);\r\n    this.updateEditor = this.updateEditor.bind(this);\r\n    this.saved = \"\";\r\n    this.value = this.props.defaultValue;\r\n  }\r\n\r\n  onChange(newValue, e) {\r\n    const errors = this.schemaEditor.validate();\r\n    console.log(errors);\r\n    if(errors.length) {\r\n      alert('Invalid schema');\r\n    }\r\n    else {\r\n      if(this.props.onChange) {\r\n        this.value = this.schemaEditor.jsonEditor.getValue();\r\n        this.props.onChange(this.schemaEditor.getJSON());\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.schemaEditor = new SchemaEditor(this.editorBox);\r\n    this.updateEditor(this.props.schema, this.props.options);\r\n  }\r\n\r\n  componentWillReceiveProps({schema, options}) {\r\n    this.updateEditor(schema, options);\r\n  }\r\n\r\n  updateEditor(schema, options) {\r\n    try {\r\n      const newJson = JSON.stringify(schema);\r\n      if(newJson !== this.save || options.counter !== this.props.options.counter) {\r\n\r\n        JSONEditor.defaults.options.object_layout = options.layout;\r\n        JSONEditor.defaults.options = {\r\n          ...JSONEditor.defaults.options,\r\n          ...options.booleanOptions\r\n        };\r\n\r\n        this.save = newJson;\r\n        this.schemaEditor.updateSchema(schema);\r\n        this.schemaEditor.jsonEditor.setValue(this.value);\r\n        this.schemaEditor.jsonEditor.on('change', this.onChange);\r\n      }\r\n    }\r\n    catch(err) {\r\n      alert('Invalid json schema');\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          Schema Editor\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div id=\"schema-editor\" ref={this.editorBox} />\r\n        </CardBody>\r\n        <CardFooter>\r\n        </CardFooter>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nJsonSchemaEditor.propTypes = {\r\n  schema: PropTypes.object.isRequired,\r\n  onChange: PropTypes.func\r\n};\r\n\r\nexport default JsonSchemaEditor;\r\n","import React, { Component } from 'react';\r\nimport { Card, CardHeader, CardBody, CardFooter } from 'reactstrap';\r\nimport { PreviewEditor } from './json-schema-editor/editor';\r\n\r\nclass EditorPreview extends Component {\r\n\r\n  constructor(props, content) {\r\n    super(props, content);\r\n\r\n    this.previewBox = React.createRef();\r\n    this.editorPreview = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.editorPreview = new PreviewEditor(this.previewBox);\r\n  }\r\n\r\n  componentWillReceiveProps({ schema }) {\r\n    this.editorPreview.destroy();\r\n    if (schema !== null) this.editorPreview.updateSchema(schema);\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          Editor Preview\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div id='editor-preview' ref={this.previewBox}/>\r\n        </CardBody>\r\n        <CardFooter>\r\n          The Editor Preview will be updated as you make changes in the Schema Editor\r\n        </CardFooter>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditorPreview;\r\n","import React, { Component } from 'react';\r\nimport jsonMetaSchema from './data.json';\r\nimport JSONEditor from '@json-editor/json-editor';\r\nimport Editor from './jsonEditor';\r\nimport Preview from './editorPreview';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\nimport { setPreviewSchema } from \"../../ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass SchemaEditor extends Component {\r\n\r\n  constructor(props, content) {\r\n    super(props, content);\r\n\r\n    JSONEditor.defaults.options.iconlib = \"fontawesome5\";\r\n    JSONEditor.defaults.options.theme   = 'bootstrap4';\r\n    this.updateMetaSchema = this.updateMetaSchema.bind(this);\r\n    this.updatePreviewSchema = this.updatePreviewSchema.bind(this);\r\n    this.updateOptions = this.updateOptions.bind(this);\r\n\r\n    this.schemaEditor = null;\r\n    this.editorPreview = null;\r\n\r\n    this.defaultValue = {\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"title\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"Date\": {\r\n          \"type\": \"string\",\r\n          \"format\": \"datetime-local\",\r\n        },\r\n        \"Status\": {\r\n          \"type\": \"string\",\r\n          \"enum\": [\r\n            \"Minor\",\r\n            \"Major\",\r\n            \"Critical\"\r\n          ]\r\n        },\r\n        \"Description\": {\r\n          \"type\": \"string\",\r\n          \"format\": \"textarea\",\r\n        }\r\n      },\r\n      \"title\": \"Machinery Failure\",\r\n      \"format\": \"grid\"\r\n    };\r\n\r\n\r\n    if (this.props.schemaId) {\r\n      this.defaultValue = this.props.messageTypes.messages.find((mes) => mes._id === this.props.schemaId).details;\r\n    }\r\n\r\n\r\n    this.state = {\r\n      metaSchema: jsonMetaSchema,\r\n      previewSchema: null,\r\n      options: {\r\n        layout: JSONEditor.defaults.options.object_layout,\r\n        booleanOptions: {}\r\n      }\r\n    }\r\n  }\r\n\r\n  updatePreviewSchema(schema) {\r\n    console.log(\"preview update\");\r\n    this.setState({previewSchema: schema});\r\n\r\n    this.props.dispatch(setPreviewSchema(schema));\r\n  }\r\n\r\n  updateOptions(options) {\r\n    console.log(\"options update\");\r\n    this.setState({options: options});\r\n  }\r\n\r\n  updateMetaSchema(schema) {\r\n    console.log(\"editor update\");\r\n    this.setState({metaschema: schema});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"flex-content flex-content--left50\">\r\n          <Editor\r\n            schema={this.state.metaSchema}\r\n            onChange={this.updatePreviewSchema}\r\n            options={this.state.options}\r\n            defaultValue={this.defaultValue}\r\n          />\r\n        </div>\r\n        <div className=\"flex-content flex-content--right50\">\r\n          <Preview schema={this.state.previewSchema}/>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ umpireMenu, }) => ({\r\n  umpireMenu,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SchemaEditor);\r\n","import React, { Component } from 'react';\r\nimport '../scss/App.scss';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getAllMessageTypes,\r\n  updateMessageType } from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n\r\nimport { resetMessagePreview } from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport Link from \"../Components/Link\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport SchemaEditor from \"../Components/jsonSchemaEditor/index\";\r\n\r\nclass EditMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageList: this.props.messageTypes.messages, // set to state for filter, without filter don't set props to state to avoid bugs\r\n      searchInput: '',\r\n    };\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(resetMessagePreview());\r\n    this.props.dispatch(getAllMessageTypes());\r\n  };\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.props.messageTypes.messages.length !== nextProps.messageTypes.messages.length) {\r\n      this.setState({\r\n        messageList: nextProps.messageTypes.messages\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  filterMessages = (input) => {\r\n\r\n    let value = input.target.value;\r\n\r\n    let newState = this.props.messageTypes.messages.filter(function(mes) {\r\n      return mes.details.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n    });\r\n\r\n    this.setState({\r\n      messageList: newState,\r\n      searchInput: value.toLowerCase()\r\n    });\r\n  };\r\n\r\n  updateSchema = () => {\r\n    this.props.dispatch(updateMessageType(this.props.umpireMenu.previewSchema, this.props.umpireMenu.selectedSchemaID));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message template</h1>\r\n        <div className=\"button-wrap\">\r\n          <span onClick={this.updateSchema} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span>\r\n        </div>\r\n        <div className=\"flex-content-wrapper\">\r\n          <SchemaEditor\r\n            schemaId={this.props.umpireMenu.selectedSchemaID}\r\n            messageTypes={this.props.messageTypes}\r\n          />\r\n        </div>\r\n        <div className=\"button-wrap\">\r\n          <span onClick={this.updateSchema} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, currentViewURI, umpireMenu }) => ({\r\n  messages,\r\n  messageTypes,\r\n  currentViewURI,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(EditMessage);\r\n","import React, { Component } from 'react';\r\nimport '../scss/App.scss';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getAllMessageTypes,\r\n  createMessageType\r\n} from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n\r\nimport { resetMessagePreview } from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport Link from \"../Components/Link\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport SchemaEditor from \"../Components/jsonSchemaEditor/index\";\r\n\r\nclass EditMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageList: this.props.messageTypes.messages, // set to state for filter, without filter don't set props to state to avoid bugs\r\n      searchInput: '',\r\n    };\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(resetMessagePreview());\r\n    this.props.dispatch(getAllMessageTypes());\r\n  };\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.props.messageTypes.messages.length !== nextProps.messageTypes.messages.length) {\r\n      this.setState({\r\n        messageList: nextProps.messageTypes.messages\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  saveSchema = () => {\r\n    this.props.dispatch(createMessageType(this.props.umpireMenu.previewSchema));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message template</h1>\r\n        <div className=\"button-wrap\">\r\n          <span onClick={this.saveSchema} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span>\r\n        </div>\r\n        <div className=\"flex-content-wrapper\">\r\n          <SchemaEditor />\r\n        </div>\r\n        <div className=\"button-wrap\">\r\n          <span onClick={this.saveSchema} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, currentViewURI, umpireMenu }) => ({\r\n  messages,\r\n  messageTypes,\r\n  currentViewURI,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(EditMessage);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport '../../scss/App.scss';\r\n\r\nclass TextInput extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      type: this.props.options.numInput ? \"number\" : \"text\",\r\n    };\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.props.updateStore(e.target.value);\r\n  };\r\n\r\n  render() {\r\n\r\n    let invalid = !this.props.validInput ? 'invalid-input' : '';\r\n\r\n    return (\r\n      <>\r\n        <input className={invalid} id={this.props.id ? this.props.id : null} type={this.state.type} onChange={this.onChange} value={this.props.data ? this.props.data : \"\"} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nTextInput.propTypes = {\r\n  updateStore: PropTypes.func.isRequired,\r\n  options: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nexport default TextInput;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport '../../scss/App.scss';\r\n\r\nclass DropdownInput extends Component {\r\n\r\n  onChange = (e) => {\r\n    this.props.updateStore(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <select disabled={this.props.disabled} value={this.props.data ? this.props.data : \"placeholder\"} onChange={this.onChange}>\r\n        <option value=\"placeholder\">{this.props.placeholder}</option>\r\n        { this.props.selectOptions.map((opt, i) => {\r\n          return (<option key={`${opt}${i}`} value={opt}>{opt}</option>)\r\n        })}\r\n      </select>\r\n    );\r\n  }\r\n}\r\n\r\nDropdownInput.propTypes = {\r\n  updateStore: PropTypes.func.isRequired,\r\n  selectOptions: PropTypes.array.isRequired,\r\n  // options: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nexport default DropdownInput;\r\n","import React, { Component } from 'react';\r\n\r\nclass Row extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"flex-content flex-content--row\">\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Row;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport '../../scss/App.scss';\r\n\r\nclass TextArea extends Component {\r\n\r\n  onChange = (e) => {\r\n    this.props.updateStore(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <textarea value={this.props.data} onChange={this.onChange} style={{resize: \"none\"}}></textarea>\r\n    );\r\n  }\r\n}\r\n\r\nTextArea.propTypes = {\r\n  updateStore: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default TextArea;\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport TextInput from \"../../Components/Inputs/TextInput\";\r\nimport DropdownInput from \"../../Components/Inputs/DropdownInput\";\r\nimport Row from \"../../Components/Layout/Row\";\r\n\r\nimport { setGameData } from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\nimport TextArea from \"../../Components/Inputs/TextArea\";\r\n\r\nclass SettingsTab extends Component {\r\n\r\n  updateDescription = (value) => {\r\n    this.props.dispatch(setGameData({gameDescription: value}));\r\n  };\r\n\r\n  updateSpatialRepresentation = (value) => {\r\n    this.props.dispatch(setGameData({spatialRepresentation: value}));\r\n  };\r\n\r\n  updatePlanningInterval = (value) => {\r\n    this.props.dispatch(setGameData({planningInterval: value}));\r\n  };\r\n\r\n  updateReplayInterval = (value) => {\r\n    this.props.dispatch(setGameData({replayInterval: value}));\r\n  };\r\n\r\n  updateTurnStrategy = (value) => {\r\n    this.props.dispatch(setGameData({turnStrategy: value}));\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"flex-content-wrapper\">\r\n\r\n        <div className=\"flex-content flex-content--left50\">\r\n          <p className=\"heading--sml\">Game description &amp; objectives</p>\r\n          <TextArea\r\n            updateStore={this.updateDescription}\r\n            data={this.props.wargame.tabs[this.props.wargame.currentTab].data.gameDescription}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex-content flex-content--right50\">\r\n\r\n          <Row>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml\">Spatial Representation</p>\r\n            </div>\r\n            <div className=\"flex-content flex-content--fill\">\r\n              <DropdownInput\r\n                updateStore={this.updateSpatialRepresentation}\r\n                selectOptions={[\"opt1\", \"opt2\", \"opt3\"]}\r\n                placeholder=\"Select spatial representation\"\r\n                data={this.props.wargame.tabs[this.props.wargame.currentTab].data.spatialRepresentation}\r\n              />\r\n            </div>\r\n          </Row>\r\n\r\n          <Row>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml\">Planning Interval</p>\r\n            </div>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <TextInput\r\n                updateStore={this.updatePlanningInterval}\r\n                options={{ numInput: true }}\r\n                data={this.props.wargame.tabs[this.props.wargame.currentTab].data.planningInterval}\r\n                validInput={true}\r\n              />\r\n            </div>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml heading--mleft\">min.</p>\r\n            </div>\r\n          </Row>\r\n\r\n          <Row>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml\">Replay interval</p>\r\n            </div>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <TextInput\r\n                updateStore={this.updateReplayInterval}\r\n                options={{ numInput: true }}\r\n                data={this.props.wargame.tabs[this.props.wargame.currentTab].data.replayInterval}\r\n                validInput={true}\r\n              />\r\n            </div>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml heading--mleft\">min.</p>\r\n            </div>\r\n          </Row>\r\n\r\n          <Row>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml\">Turn Strategy</p>\r\n            </div>\r\n            <div className=\"flex-content flex-content--fill\">\r\n              <DropdownInput\r\n                updateStore={this.updateTurnStrategy}\r\n                selectOptions={[\"opt1\", \"opt2\", \"opt3\"]}\r\n                placeholder=\"Not implemented yet\"\r\n                data={this.props.wargame.tabs[this.props.wargame.currentTab].data.turnStrategy}\r\n                // disabled={true}\r\n              />\r\n            </div>\r\n          </Row>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame }) => ({\r\n  wargame,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SettingsTab);\r\n","import React, { Component } from 'react';\r\nimport classNames from \"classnames\";\r\nimport '../scss/App.scss';\r\nimport {PropTypes} from \"prop-types\";\r\n\r\nclass TabsSearchList extends Component {\r\n\r\n  setSelected = (item) => {\r\n    this.props.setSelected(item);\r\n  };\r\n\r\n  createList() {\r\n    var data = this.props.listData;\r\n\r\n    var list = [];\r\n    for (var prop in data) {\r\n      let active = prop === this.props.selected ? 'active' : '';\r\n      list.unshift(<span href=\"#\" onClick={this.setSelected.bind(this, prop)} key={prop} className={classNames({\"list-title\": true, active})}>{prop}</span>);\r\n    }\r\n    return list;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"list\">\r\n        {this.props.filter ?\r\n          <input type=\"text\" className=\"list-input\" key=\"search-templates\" placeholder={this.props.placeholder} onChange={ this.props.filter } value={this.props.searchQuery} />\r\n          : false\r\n        }\r\n        <div className=\"list-list\">\r\n          { this.createList() }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTabsSearchList.propTypes = {\r\n  listData: PropTypes.object.isRequired,\r\n  filter: PropTypes.func,\r\n  selected: PropTypes.string.isRequired,\r\n  setSelected: PropTypes.func.isRequired,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nexport default TabsSearchList;\r\n","import React, { Component } from 'react';\r\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nclass RemovableGroupItem extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <span className=\"group-item\" key={this.props.children}>\r\n        {this.props.children}\r\n        <FontAwesomeIcon icon={faTimes} />\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RemovableGroupItem;\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport TabsSearchList from \"../../Components/TabsSearchList\";\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport {\r\n  setSelectedForce,\r\n  setForceOverview\r\n} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\nimport '../../scss/App.scss';\r\nimport TextArea from \"../../Components/Inputs/TextArea\";\r\nimport RemovableGroupItem from \"../../Components/Layout/RemovableGroupItem\";\r\n\r\nclass ForcesTab extends Component {\r\n\r\n  openModal = () => {\r\n    this.props.dispatch(modalAction.open(\"addForce\"));\r\n  };\r\n\r\n  setSelected = (force) => {\r\n    this.props.dispatch(setSelectedForce(force));\r\n  };\r\n\r\n  updateOverview = (overview) => {\r\n    this.props.dispatch(setForceOverview(overview));\r\n  };\r\n\r\n  createForceEditor() {\r\n\r\n    let curTab = this.props.wargame.currentTab;\r\n    let selectedForce = this.props.wargame.tabs[curTab].data.selectedForce;\r\n\r\n    return (\r\n      <div className=\"flex-content--fill forcesTab\">\r\n\r\n        <h3>{selectedForce}</h3>\r\n\r\n        <span className=\"link link--secondary link--noIcon link--disabled\">Change icon</span>\r\n\r\n        <p className=\"heading--sml\">Overview &amp; Objectives</p>\r\n        <TextArea\r\n          updateStore={this.updateOverview}\r\n          data={this.props.wargame.tabs[curTab].data.forces[selectedForce].overview}\r\n        />\r\n\r\n        <p className=\"heading--sml\">Roles</p>\r\n        <span className=\"link link--secondary link--noIcon link--disabled\">Add a new role</span>\r\n\r\n        <div className=\"flex-content\">\r\n          {this.props.wargame.tabs[curTab].data.forces[selectedForce].roles.map((role) => {\r\n            return (<RemovableGroupItem key={role}>{role}</RemovableGroupItem>)\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n\r\n    let curTab = this.props.wargame.currentTab;\r\n    let selectedForce = this.props.wargame.tabs[curTab].data.selectedForce;\r\n\r\n    return (\r\n      <div className=\"flex-content-wrapper\">\r\n        <div className=\"flex-content\">\r\n          <span className=\"link link--noIcon\" onClick={this.openModal}>Add a new force</span>\r\n          <TabsSearchList listData={this.props.wargame.tabs[curTab].data.forces}\r\n                          setSelected={this.setSelected}\r\n                          selected={selectedForce}\r\n          />\r\n        </div>\r\n\r\n        {selectedForce ?\r\n          this.createForceEditor()\r\n        : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// temp use allMessages\r\nconst mapStateToProps = ({ messages, wargame }) => ({\r\n  messages,\r\n  wargame,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ForcesTab);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../../scss/App.scss';\r\nimport Select from \"react-select\";\r\n\r\nclass EditSubscriptionRow extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      subscriptionId: this.props.data.subscriptionId,\r\n      editSubscriptionForce: {value: this.props.data.force, label: this.props.data.force},\r\n      editSubscriptionRole: {value: this.props.data.role, label: this.props.data.role},\r\n      editSubscriptionTemplates: this.props.data.templates,\r\n    };\r\n  }\r\n\r\n  updateSubscriptionForce = (option) => {\r\n    this.setState({\r\n      editSubscriptionForce: option,\r\n    });\r\n  };\r\n\r\n  updateSubscriptionRole = (option) => {\r\n    this.setState({\r\n      editSubscriptionRole: option,\r\n    });\r\n  };\r\n\r\n  updateSubscriptionTemplates = (option) => {\r\n    this.setState({\r\n      editSubscriptionTemplates: option,\r\n    });\r\n  };\r\n\r\n  updateChannel = () => {\r\n    let subscriptionData = {\r\n      force: this.state.editSubscriptionForce.label,\r\n      role: this.state.editSubscriptionRole.label,\r\n      templates: this.state.editSubscriptionTemplates,\r\n    };\r\n    this.props.updateRecipient(this.state.subscriptionId, subscriptionData);\r\n    this.props.cancelEdit();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <tr>\r\n        <td>\r\n          <Select\r\n            value={this.state.editSubscriptionForce}\r\n            options={this.props.forceOptions}\r\n            onChange={this.updateSubscriptionForce}\r\n          />\r\n        </td>\r\n        <td>\r\n          <Select\r\n            value={this.state.editSubscriptionRole}\r\n            options={this.props.roleOptions}\r\n            onChange={this.updateSubscriptionRole}\r\n          />\r\n        </td>\r\n        <td>\r\n          <Select\r\n            value={this.state.editSubscriptionTemplates}\r\n            options={this.props.templateOptions}\r\n            onChange={this.updateSubscriptionTemplates}\r\n            isMulti\r\n          />\r\n        </td>\r\n        <td>\r\n          <button\r\n            className=\"btn btn-action btn-action--secondary\"\r\n            onClick={this.updateChannel}\r\n            // disabled={!this.state.selectedTemplates.length > 0}\r\n          >\r\n            Save</button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default connect()(EditSubscriptionRow);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  addRecipientToChannel,\r\n  updateRecipient,\r\n  removeRecipient,\r\n} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators.js\";\r\n\r\nimport EditSubscriptionRow from \"./EditSubscriptionRow\";\r\nimport Select from \"react-select\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTrash,\r\n  faPencilAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass ChannelsTable extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var tabs = Object.values(this.props.wargame.tabs);\r\n    let forces = tabs.find((d) => d.name === \"Forces\").data.forces;\r\n\r\n    let forceOptions = [];\r\n    for (let prop in forces) {\r\n      forceOptions.push({\r\n        value: prop,\r\n        label: prop,\r\n      });\r\n    }\r\n\r\n    let templateOptions = this.props.messageTypes.messages.map((messageType) => {\r\n      return {\r\n        value: messageType._id,\r\n        label: messageType.title,\r\n      }\r\n    });\r\n\r\n    this.state = {\r\n      selectedForce: {value: null, label: null},\r\n      forceOptions: forceOptions,\r\n      selectedRole:  {value: null, label: null},\r\n      roleOptions: [],\r\n      selectedTemplates:  [],\r\n      templateOptions: templateOptions,\r\n      subscriptionToEdit: null,\r\n      editSubscriptionForce: '',\r\n      editSubscriptionRole: '',\r\n      editSubscriptionTemplates: [],\r\n    }\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState, nextContext) {\r\n\r\n    if (nextState.selectedForce.value === null) return;\r\n\r\n    if (this.state.selectedForce.value !== nextState.selectedForce.value) {\r\n\r\n      var tabs = Object.values(this.props.wargame.tabs);\r\n\r\n      let roleOptions = [];\r\n      var roles = tabs.find((d) => d.name === \"Forces\").data.forces[nextState.selectedForce.value].roles;\r\n\r\n      roles.forEach((role) => {\r\n\r\n        roleOptions.push({\r\n          value: role,\r\n          label: role,\r\n        });\r\n      });\r\n\r\n      this.setState({\r\n        roleOptions,\r\n      });\r\n    }\r\n  }\r\n\r\n  createRow(data, i) {\r\n    var row = [];\r\n    for (var prop in data) {\r\n      if (prop === \"subscriptionId\") continue;\r\n\r\n      var value = '';\r\n      if (typeof data[prop] !== \"string\") {\r\n\r\n        for (var j=0 ; j<data[prop].length ; j++) {\r\n          let item = data[prop][j];\r\n          value += item.label;\r\n          if (j !== data[prop].length-1) value+=', ';\r\n        }\r\n      } else {\r\n        value = data[prop];\r\n      }\r\n      row.push(<td key={`${value}${i}`}>{value}</td>)\r\n    }\r\n    row.push(\r\n      <td key={`edit-delete${i}`}>\r\n        <FontAwesomeIcon icon={faTrash} onClick={this.removeSubscription.bind(this, data.subscriptionId)} />\r\n        <FontAwesomeIcon icon={faPencilAlt} onClick={this.editSubscription.bind(this, data.subscriptionId)} />\r\n      </td>\r\n    );\r\n    return (<tr key={`row-${i}`}>{row}</tr>);\r\n  }\r\n\r\n  removeSubscription(subscriptionId) {\r\n    this.props.dispatch(removeRecipient(subscriptionId))\r\n  };\r\n\r\n  editSubscription(subscriptionId) {\r\n    this.setState({\r\n      subscriptionToEdit: subscriptionId,\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      subscriptionToEdit: \"\",\r\n    });\r\n  };\r\n\r\n  updateRecipient = (id, data) => {\r\n    this.props.dispatch(updateRecipient(id, data));\r\n  };\r\n\r\n  setSelectedForce = (option) => {\r\n    this.setState({\r\n      selectedForce: option,\r\n    });\r\n  };\r\n\r\n  setSelectedRole = (option) => {\r\n    this.setState({\r\n      selectedRole: option,\r\n    });\r\n  };\r\n\r\n  setSelectedTemplate = (option) => {\r\n    this.setState({\r\n      selectedTemplates: option,\r\n    });\r\n  };\r\n\r\n  addToChannel = () => {\r\n\r\n    let channelData = {\r\n      force: this.state.selectedForce.value,\r\n      role: this.state.selectedRole.value,\r\n      templates: this.state.selectedTemplates,\r\n    };\r\n    this.props.dispatch(addRecipientToChannel(channelData));\r\n\r\n    this.setState({\r\n      selectedForce: {value: null, label: null},\r\n      selectedRole: {value: null, label: null},\r\n      selectedTemplates: [],\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"flex-content\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Force</th>\r\n              <th>Roles</th>\r\n              <th>Templates</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.data.map((data, i) => {\r\n              return data.subscriptionId === this.state.subscriptionToEdit ? <EditSubscriptionRow\r\n                                                                                  key={data.subscriptionId}\r\n                                                                                  data={data}\r\n                                                                                  forceOptions={this.state.forceOptions}\r\n                                                                                  roleOptions={this.state.roleOptions}\r\n                                                                                  templateOptions={this.state.templateOptions}\r\n                                                                                  cancelEdit={this.cancelEdit}\r\n                                                                                  updateRecipient={this.updateRecipient}\r\n                                                                            /> : this.createRow(data, i);\r\n            })}\r\n            <tr>\r\n              <td>\r\n                <Select\r\n                  value={this.state.selectedForce}\r\n                  options={this.state.forceOptions}\r\n                  onChange={this.setSelectedForce}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Select\r\n                  value={this.state.selectedRole}\r\n                  options={this.state.roleOptions}\r\n                  onChange={this.setSelectedRole}\r\n                  isDisabled={!this.state.selectedForce.value}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Select\r\n                  value={this.state.selectedTemplates}\r\n                  options={this.state.templateOptions}\r\n                  onChange={this.setSelectedTemplate}\r\n                  isDisabled={!this.state.selectedRole.value}\r\n                  isMulti\r\n                />\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-action btn-action--secondary\"\r\n                  onClick={this.addToChannel}\r\n                  disabled={!this.state.selectedTemplates.length > 0}>\r\n                  Save</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame, messageTypes }) => ({\r\n  wargame,\r\n  messageTypes,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ChannelsTable);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport {\r\n  setSelectedChannel,\r\n  setForceOverview\r\n} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nimport '../../scss/App.scss';\r\n\r\nimport TabsSearchList from \"../../Components/TabsSearchList\";\r\nimport ChannelsTable from \"../../Components/Layout/ChannelsTable\";\r\n\r\nclass ForcesTab extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      channelList: this.props.wargame.tabs[this.props.wargame.currentTab].data.channels,\r\n      searchQuery: '',\r\n    }\r\n  };\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    const curPropsState = Object.keys(this.props.wargame.tabs[this.props.wargame.currentTab].data.channels);\r\n    const nextPropsState = Object.keys(nextProps.wargame.tabs[nextProps.wargame.currentTab].data.channels);\r\n\r\n    if (curPropsState.length !== nextPropsState.length) {\r\n      this.setState({\r\n        channelList: nextProps.wargame.tabs[nextProps.wargame.currentTab].data.channels\r\n      });\r\n    }\r\n  }\r\n\r\n  openModal = () => {\r\n    this.props.dispatch(modalAction.open(\"addChannel\"));\r\n  };\r\n\r\n  setSelected = (force) => {\r\n    this.props.dispatch(setSelectedChannel(force));\r\n  };\r\n\r\n  updateOverview = (overview) => {\r\n    this.props.dispatch(setForceOverview(overview));\r\n  };\r\n\r\n  filterChannels = (input) => {\r\n\r\n    let value = input.target.value;\r\n\r\n    let list = this.props.wargame.tabs[this.props.wargame.currentTab].data.channels;\r\n\r\n    let newState = {};\r\n    for (let prop in list) {\r\n      if (prop.toLowerCase().indexOf(value.toLowerCase()) > -1) newState[prop] = list[prop];\r\n    }\r\n\r\n    this.setState({\r\n      channelList: newState,\r\n      searchQuery: value\r\n    });\r\n  };\r\n\r\n  createChannelEditor() {\r\n\r\n    let curTab = this.props.wargame.currentTab;\r\n    let selectedChannel = this.props.wargame.tabs[curTab].data.selectedChannel;\r\n\r\n    return (\r\n      <div className=\"flex-content--fill channelsTab\">\r\n        <h3>{selectedChannel}</h3>\r\n\r\n        <p className=\"heading--sml\">Participants and messages</p>\r\n\r\n        <ChannelsTable data={this.props.wargame.tabs[curTab].data.channels[selectedChannel]} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n\r\n    const curTab = this.props.wargame.currentTab;\r\n    const selectedChannel = this.props.wargame.tabs[curTab].data.selectedChannel;\r\n\r\n    return (\r\n      <div className=\"flex-content-wrapper\">\r\n        <div className=\"flex-content\">\r\n          <span className=\"link link--noIcon\" onClick={this.openModal}>Add channel</span>\r\n          <TabsSearchList listData={this.state.channelList}\r\n                          filter={this.filterChannels}\r\n                          searchQuery={this.state.searchQuery}\r\n                          setSelected={this.setSelected}\r\n                          selected={selectedChannel}\r\n                          placeholder={\"Search channels\"}\r\n          />\r\n        </div>\r\n\r\n        {selectedChannel ?\r\n          this.createChannelEditor()\r\n        : null}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// temp use allMessages\r\nconst mapStateToProps = ({ messages, wargame }) => ({\r\n  messages,\r\n  wargame,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ForcesTab);\r\n","import React, { Component } from 'react';\r\n\r\nimport '../scss/App.scss';\r\n\r\nclass ValidationNotification extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"invalid-notification\"><p>{this.props.children}</p></div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default ValidationNotification;\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SettingsTab from \"./TabViews/SettingsTab\";\r\nimport ForcesTab from \"./TabViews/ForcesTab\";\r\nimport ChannelsTab from \"./TabViews/ChannelsTab\";\r\nimport ValidationNotification from \"../Components/ValidationNotification\";\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n});\r\n\r\n\r\nclass TabbedView extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    console.log(this.props.tabs);\r\n\r\n    this.state = {\r\n      value: 0,\r\n      tabs: Object.values(this.props.tabs).map((item) => item.name),\r\n      invalidFields: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setCurrentTab(0);\r\n  }\r\n\r\n\r\n  handleChange = (event, value) => {\r\n    this.setState({ value });\r\n    this.props.setCurrentTab(value);\r\n  };\r\n\r\n  render() {\r\n\r\n    const { value } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className={classes.root}>\r\n          <AppBar position=\"static\" color=\"default\">\r\n            <Tabs\r\n              value={value}\r\n              onChange={this.handleChange}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              centered\r\n            >\r\n              { this.state.tabs.map((tabName, i) => <Tab key={tabName + i} label={tabName} />) }\r\n            </Tabs>\r\n          </AppBar>\r\n          {value === 0 && <TabContainer><SettingsTab /></TabContainer>}\r\n          {/*{value === 1 && <TabContainer>PlatformTypes.jsx</TabContainer>}*/}\r\n          {value === 1 && <TabContainer><ForcesTab /></TabContainer>}\r\n          {/*{value === 3 && <TabContainer>BackHistory.jsx</TabContainer>}*/}\r\n          {/*{value === 4 && <TabContainer>Positions.jsx</TabContainer>}*/}\r\n          {value === 2 && <TabContainer><ChannelsTab /></TabContainer>}\r\n          {/*{value === 6 && <TabContainer>PlayControl.jsx</TabContainer>}*/}\r\n        </div>\r\n        <ValidationNotification validation={ this.props.wargame.validation } />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame }) => ({\r\n  wargame\r\n});\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(TabbedView));\r\n","import React, { Component } from 'react';\r\n\r\nclass ProgressBar extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"progress\">\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProgressBar;\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {\r\n  setCurrentTab,\r\n  setWargameTitle,\r\n  updateWargame,\r\n} from \"../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nimport TabbedView from \"./TabbedView\";\r\nimport ProgressBar from \"../Components/ProgressBar/ProgressBar\";\r\n\r\nimport Link from \"../Components/Link\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport classNames from \"classnames\";\r\nimport TextInput from \"../Components/Inputs/TextInput\";\r\nimport {getAllMessageTypes} from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n\r\nclass GameSetup extends Component {\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(getAllMessageTypes());\r\n  }\r\n\r\n  setCurrentTab = (tab) => {\r\n    this.props.dispatch(setCurrentTab(tab));\r\n  };\r\n\r\n  createIndicators() {\r\n    const that = this;\r\n\r\n    return Object.entries(this.props.wargame.tabs).map(function (entry) {\r\n\r\n      let active = that.props.wargame.currentTab === parseInt(entry[0]);\r\n      let completed = entry[1].complete;\r\n      return (<div key={entry[0]} className={classNames(\"progress-indicator\", {\"progress-indicator--active\": active, \"progress-indicator--complete\": completed})}></div>);\r\n    });\r\n  }\r\n\r\n  updateWargameTitle = (name) => {\r\n    this.props.dispatch(setWargameTitle(name));\r\n  };\r\n\r\n\r\n  saveWargame = () => {\r\n    if (this.checkAllValid()) {\r\n      this.props.dispatch(updateWargame(this.props.wargame.currentWargame, this.props.wargame.tabs, this.props.wargame.wargameTitle));\r\n    }\r\n  };\r\n\r\n  checkAllValid = () => {\r\n    return Object.values(this.props.wargame.validation).reduce((entry) => entry === true);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"view-wrapper view-wrapper-gamesetup\">\r\n          <div id=\"sidebar\">\r\n            <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n          </div>\r\n          <div className=\"flex-content-wrapper flex-content-wrapper--distribute\" id=\"game-setup-head\">\r\n            <TextInput\r\n              id=\"title-editable\"\r\n              updateStore={this.updateWargameTitle}\r\n              options={{numInput: false}}\r\n              data={this.props.wargame.wargameTitle}\r\n              validInput={this.props.wargame.validation.validWargameName}\r\n            />\r\n            <span className={classNames({\"link\": true, \"link--noIcon\": true, \"link--disabled\": !this.checkAllValid()})} onClick={this.saveWargame}>save</span>\r\n            <ProgressBar>\r\n              {this.createIndicators()}\r\n            </ProgressBar>\r\n          </div>\r\n          <TabbedView\r\n            tabs={this.props.wargame.tabs}\r\n            setCurrentTab={this.setCurrentTab}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n// temp use allMessages\r\nconst mapStateToProps = ({ wargame }) => ({\r\n  wargame\r\n});\r\n\r\nexport default connect(mapStateToProps)(GameSetup);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\nimport check from \"check-types\";\r\nimport moment from \"moment\";\r\n\r\nclass MessagePreview extends Component {\r\n\r\n  createObjItem(pair) {\r\n    const that = this;\r\n    return (\r\n      <>\r\n        {/*<h3>{pair[0]}</h3>*/}\r\n        <span key={`objItem--${pair[0]}-${pair[1]}`} className=\"group-section\">{ that.deconstructObj(pair[1]) }</span>\r\n      </>\r\n    )\r\n  }\r\n\r\n  createBoolItem(pair) {\r\n    return <span key={`boolItem--${pair[0]}-${pair[1]}`}>{pair[1] ? pair[0] : false}</span>\r\n  }\r\n\r\n  createTimeItem(pair) {\r\n\r\n    return (\r\n      <>\r\n        <span><b>{pair[0]}</b></span>\r\n        <span key={`dateTime-${pair[1]}`}>{moment(pair[1]).format('Do MMMM YYYY, HH:mm')}</span>\r\n      </>\r\n    )\r\n  }\r\n\r\n  createStrItem(pair, withoutName) {\r\n    return <span key={`strItem-${pair[0]}-${pair[1]}`}><b>{pair[0]}: </b>{pair[1]}</span>\r\n  }\r\n\r\n  deconstructArr(pair) {\r\n    const that = this;\r\n    return (\r\n      <>\r\n        <h3>{pair[0]}</h3>\r\n        {pair[1].map((item) => {\r\n          // CHECK NAME PROP ON EVERY OBJ\r\n          return (\r\n              <span key={`section-${item.name}`}>{ that.deconstructObj(item) }</span>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\n  deconstructObj(obj) {\r\n\r\n    const that = this;\r\n    const keyPropPairs = Object.entries(obj);\r\n\r\n    return keyPropPairs.map((pair, i) => {\r\n\r\n      if (check.object(pair[1])) return that.createObjItem(pair);\r\n      if (check.array.of.object(pair[1])) return that.deconstructArr(pair);\r\n      if (check.boolean(pair[1])) return that.createBoolItem(pair);\r\n\r\n      if (moment(pair[1], moment.ISO_8601, true).isValid()) return that.createTimeItem(pair);\r\n\r\n      return that.createStrItem(pair);\r\n\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    if (!this.props.detail) return false;\r\n\r\n    const that = this;\r\n    const keyPropPairs = Object.entries(this.props.detail);\r\n\r\n\r\n    return keyPropPairs.map((pair, i) => {\r\n\r\n      if (i===0) return (\r\n        <>\r\n          { this.props.from ? <h3 key={'from'}>From: {this.props.from}</h3> : false }\r\n        </>\r\n      );\r\n\r\n      if (check.object(pair[1])) return that.createObjItem(pair);\r\n      if (check.array.of.object(pair[1])) return that.deconstructArr(pair);\r\n      if (check.boolean(pair[1])) return that.createBoolItem(pair);\r\n      if (moment(pair[1], moment.ISO_8601, true).isValid()) return that.createTimeItem(pair);\r\n\r\n      return (\r\n        <>\r\n          <span><b>{pair[0]}</b></span>\r\n          <span key={`${pair[0]}-${pair[1]}`}>{pair[1]}</span>\r\n        </>\r\n      )\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport default connect()(MessagePreview);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Collapsible from \"react-collapsible\";\r\nimport MessagePreview from \"../Components/MessagePreviewPlayerUi\";\r\n\r\nimport '../scss/App.scss';\r\n\r\nclass MessagesList extends Component {\r\n\r\n  render() {\r\n    let messages = this.props.messages.filter((item) => item.details.channel === this.props.curChannel);\r\n\r\n    return (\r\n      <>\r\n        {messages.map((item, i) => {\r\n          return (\r\n            <Collapsible\r\n              trigger={item.message.title}\r\n              transitionTime={200}\r\n              easing={'ease-in-out'}\r\n              open={i===0}\r\n            >\r\n              <div className=\"message-preview-player\"><MessagePreview key={i} detail={item.message} from={item.details.from.force} /></div>\r\n            </Collapsible>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = () => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps)(MessagesList);\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport JSONEditor from '@json-editor/json-editor';\r\nimport '../scss/App.scss';\r\n\r\nimport {\r\n  saveMessage,\r\n  getAllMessages,\r\n} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\nclass JsonCreator extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.editor = null;\r\n    this.editorPreviewRef = React.createRef();\r\n\r\n    this.state = {\r\n      selectedSchema: ''\r\n    };\r\n  }\r\n\r\n  sendMessage = () => {\r\n\r\n    let messageDetails = {\r\n      channel: this.props.playerUi.selectedChannel,\r\n      from: {\r\n        force: this.props.playerUi.selectedForce,\r\n        role: this.props.selectedRole,\r\n      },\r\n    };\r\n\r\n    this.props.dispatch(saveMessage(this.props.playerUi.currentWargame, messageDetails, this.editor.getValue()));\r\n    this.props.dispatch(getAllMessages());\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n    if (this.editor) {\r\n      this.editor.destroy();\r\n      this.editor = null;\r\n    }\r\n\r\n    if (nextProps.schema && nextProps.schema.type) {\r\n        if (this.editor) return;\r\n\r\n        this.editor = new JSONEditor(this.editorPreviewRef.current, {\r\n          schema: nextProps.schema,\r\n          theme: 'bootstrap4'\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"preview-editor\" ref={this.editorPreviewRef}></div>\r\n        <button name=\"send\" className=\"btn btn-action btn-action--primary\" onClick={this.sendMessage}>Send</button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ playerUi }) => ({\r\n  playerUi\r\n});\r\n\r\nexport default connect(mapStateToProps)(JsonCreator);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Select from \"react-select\";\r\nimport '../scss/App.scss';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n  getMessageTemplate,\r\n} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\nimport MessageCreator from \"../Components/MessageCreator.jsx\";\r\n\r\nclass NewMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      template: {value: '', label: ''},\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n    if (this.props.curChannel !== nextProps.curChannel) {\r\n      this.setState({\r\n        template: {value: '', label: ''},\r\n      });\r\n    }\r\n  }\r\n\r\n  setTemplate = (val) => {\r\n    this.props.dispatch(getMessageTemplate(val.value));\r\n    this.setState({\r\n      template: val,\r\n    })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"\">\r\n        <Select\r\n          value={this.state.template}\r\n          options={this.props.templates}\r\n          onChange={this.setTemplate}\r\n        />\r\n        <MessageCreator schema={this.props.schema} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNewMessage.propTypes = {\r\n  templates: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = () => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps)(NewMessage);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {\r\n  getAllMessages,\r\n  setChannel,\r\n  setMessageSchema,\r\n} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\nimport MessagesList from \"./MessagesList\";\r\nimport NewMessage from \"../Components/NewMessage\";\r\n\r\nimport '../scss/App.scss';\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n});\r\n\r\nclass MessageFeeds extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: 0,\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(getAllMessages());\r\n  }\r\n\r\n  handleChange = (event, value) => {\r\n\r\n    let channel = Object.keys(this.props.playerUi.channels)[value];\r\n\r\n    this.props.dispatch(setChannel(channel));\r\n    this.props.dispatch(setMessageSchema({}));\r\n\r\n    this.setState({ value });\r\n  };\r\n\r\n  createTabs = () => {\r\n\r\n    let channels = this.props.playerUi.channels;\r\n    let tabs = [];\r\n\r\n    for (let prop in channels) {\r\n      tabs.push(<Tab key={prop} label={prop} />)\r\n    }\r\n\r\n    return tabs;\r\n  };\r\n\r\n  createMessageList = (tab) => {\r\n\r\n    let curChannel= this.props.playerUi.selectedChannel;\r\n\r\n    return (\r\n      <TabContainer>\r\n        <MessagesList\r\n          curChannel={curChannel}\r\n          messages={this.props.playerUi.messages}\r\n        />\r\n\r\n        <NewMessage\r\n          curChannel={curChannel}\r\n          schema={this.props.playerUi.messageSchema}\r\n          templates={this.props.playerUi.channels[curChannel].templates}\r\n        />\r\n      </TabContainer>\r\n    )\r\n  };\r\n\r\n  render() {\r\n\r\n    const { value } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className={classes.root}>\r\n          <AppBar position=\"static\" color=\"default\">\r\n            <Tabs\r\n              value={value}\r\n              onChange={this.handleChange}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              centered\r\n            >\r\n              {this.createTabs()}\r\n            </Tabs>\r\n          </AppBar>\r\n          {this.createMessageList(value)}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ playerUi }) => ({\r\n  playerUi,\r\n});\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(MessageFeeds));\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport '../scss/App.scss';\r\nimport {\r\n  getWargame,\r\n  setForce,\r\n  setRole,\r\n  setFilteredChannels,\r\n  getAllMessages,\r\n} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\nimport MessageFeeds from \"./MessageFeeds\";\r\nimport DropdownInput from \"../Components/Inputs/DropdownInput\";\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass PlayerUi extends Component {\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(getWargame());\r\n    this.props.dispatch(getAllMessages());\r\n  }\r\n\r\n  updateSelectedForce = (force) => {\r\n    this.props.dispatch(setForce(force));\r\n  };\r\n\r\n  updateSelectedRole = (role) => {\r\n    this.props.dispatch(setRole(role));\r\n    this.props.dispatch(setFilteredChannels());\r\n  };\r\n\r\n  goBack = () => {\r\n    this.props.dispatch(setForce(\"\"));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"flex-content-wrapper\">\r\n\r\n        <div className=\"flex-content flex-content--fill\">\r\n          {!this.props.playerUi.selectedForce ?\r\n            <div className=\"flex-content--center\">\r\n              <h1>Set force</h1>\r\n              <DropdownInput updateStore={this.updateSelectedForce} selectOptions={Object.keys(this.props.playerUi.allForces)}/>\r\n            </div>\r\n            : false\r\n          }\r\n\r\n          {this.props.playerUi.selectedForce && !this.props.playerUi.selectedRole ?\r\n            <div className=\"flex-content--center\">\r\n              <h1>Set role</h1>\r\n              <FontAwesomeIcon icon={faArrowLeft} size=\"2x\" style={{cursor: 'pointer'}} onClick={this.goBack} />\r\n              <DropdownInput updateStore={this.updateSelectedRole} selectOptions={this.props.playerUi.allForces[this.props.playerUi.selectedForce].roles}/>\r\n            </div>\r\n            : false\r\n          }\r\n\r\n          {this.props.playerUi.selectedForce && this.props.playerUi.selectedRole ?\r\n\r\n            <div className=\"message-feeds\">\r\n              <MessageFeeds />\r\n            </div>\r\n            : false\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ playerUi }) => ({\r\n  playerUi,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PlayerUi);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport UniversalRouter from \"universal-router\";\r\n\r\nimport ChooseInterface from \"../Views/ChooseInterface\";\r\nimport GameDesignerInterface from '../Views/GameDesignerInterface';\r\nimport UmpireMenu from '../Views/UmpireMenu';\r\nimport EditMessage from '../Views/EditMessage';\r\nimport CreateMessage from '../Views/CreateMessage';\r\nimport EditTemplate from '../Views/EditTemplate';\r\nimport CreateTemplate from '../Views/CreateTemplate';\r\nimport GameSetup from \"../Views/GameSetup\";\r\nimport PlayerUi from \"../Views/PlayerUi\";\r\n\r\nimport '../scss/App.scss';\r\n\r\nclass Router extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.routes = [\r\n      { path: '/client/', action: () => <ChooseInterface /> },\r\n      { path: '/client/umpireMenu', action: () => <GameDesignerInterface/> },\r\n      { path: '/client/umpireMenu/:creatorType', action: () => <UmpireMenu /> },\r\n      { path: '/client/messageCreator', children: [\r\n          { path: '/create/template', action: () => <CreateTemplate /> },\r\n          { path: '/edit/template', action: () => <EditTemplate /> },\r\n          { path: '/create/message', action: () => <CreateMessage /> },\r\n          { path: '/edit/message', action: () => <EditMessage /> },\r\n        ]\r\n      },\r\n      { path: '/client/gameSetup', action: () => <GameSetup /> },\r\n      { path: '/client/playerUi', action: () => <PlayerUi /> },\r\n    ];\r\n\r\n    // let currentPath = new URL(window.location.href).pathname;\r\n\r\n    this.state = {\r\n      currentView: <ChooseInterface />\r\n    };\r\n\r\n    this.router = new UniversalRouter(this.routes);\r\n\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n    this.router.resolve({ pathname: nextProps.currentViewURI }).then(result => {\r\n      this.setState({\r\n        currentView: result,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        { this.state.currentView }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ currentViewURI }) => ({\r\n  currentViewURI\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(Router);\r\n","export default function deepCopy(objectpassed) {\r\n\r\n  // arrays return \"object\" in js so any object or array will be looped to copy deeply.\r\n  // strings, numbers and booleans are deep copied naturally, while any objects within arrays or objects\r\n  // or objects within arrays are only copied shallowly.\r\n  if (objectpassed === null || typeof objectpassed !== 'object') {\r\n    return objectpassed;\r\n  }\r\n\r\n  var temporaryStorage = objectpassed.constructor();\r\n\r\n  for (var key in objectpassed) {\r\n    temporaryStorage[key] = deepCopy((objectpassed[key]));\r\n  }\r\n  return temporaryStorage;\r\n}","import ActionConstant from '../ActionConstants';\r\nimport copyState from \"../copyStateHelper.js\";\r\n\r\nvar initialState = {\r\n  isLoading: false,\r\n  messages: [],\r\n};\r\n\r\nexport const messageTypesReducer = (state = initialState, action) => {\r\n\r\n  var newState = copyState(state);\r\n\r\n  switch (action.type) {\r\n    case ActionConstant.DB_MESSAGE_TYPES_GET:\r\n      newState.isLoading = action.isLoading;\r\n      return newState;\r\n\r\n    case ActionConstant.DB_MESSAGE_TYPES_SAVED:\r\n      newState.messages = action.payload;\r\n      return newState;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};","import ActionConstant from '../ActionConstants';\r\nimport copyState from \"../copyStateHelper.js\";\r\n\r\nvar initialState = {\r\n  isLoading: false,\r\n  messages: [],\r\n  messagePreviewId: '',\r\n  messagePreview: {}\r\n};\r\n\r\nexport const messagesReducer = (state = initialState, action) => {\r\n\r\n  // redux works on the principle of keeping your data immutable.\r\n  // directly editing the state will cause an error, it leaves immutability up to you,\r\n  // the simplest solution with smallest footprint I've found so far is to use this deepCopy helper I found online.\r\n  var newState = copyState(state);\r\n\r\n  switch (action.type) {\r\n    case ActionConstant.DB_MESSAGES_GET:\r\n      newState.isLoading = action.isLoading;\r\n      return newState;\r\n\r\n    case ActionConstant.DB_MESSAGE_SAVED:\r\n      newState.messages = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.DB_RETURNED_MESSAGE:\r\n      newState.messagePreviewId = action.payload._id;\r\n      newState.messagePreview = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.RESET_MESSAGE_PREVIEW:\r\n      newState.messagePreviewId = '';\r\n      newState.messagePreview = {};\r\n      return newState;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};","import ActionConstant from '../ActionConstants';\r\nimport deepCopy from \"../copyStateHelper.js\";\r\n\r\nconst initialState = {\r\n  selectedSchemaID: '',\r\n  previewSchema: {}\r\n};\r\n\r\nexport const umpireMenuReducer = (state = initialState, action) => {\r\n\r\n  let newState = deepCopy(state);\r\n\r\n  switch (action.type) {\r\n    case ActionConstant.SET_SELECTED_SCHEMA:\r\n      newState.selectedSchemaID = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.SET_PREVIEW_SCHEMA:\r\n      newState.previewSchema = action.payload;\r\n      return newState;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};","import ActionConstant from '../ActionConstants';\r\nimport copyState from \"../copyStateHelper.js\";\r\nimport _ from \"lodash\";\r\nimport uniqId from \"uniqid\";\r\n\r\nimport {\r\n  forceTemplate,\r\n  channelTemplate,\r\n} from \"../../api/consts\";\r\n\r\nvar initialState = {\r\n  isLoading: false,\r\n  wargameList: [],\r\n  currentWargame: '',\r\n  wargameTitle: '',\r\n  validation: {\r\n    validWargameName: true,\r\n  },\r\n  tabs: {\r\n    0: {\r\n      name: \"Overview - settings\",\r\n      data: {\r\n        gameDescription: '',\r\n        spatialRepresentation: '',\r\n        planningInterval: null,\r\n        replayInterval: null,\r\n        turnStrategy: '',\r\n      },\r\n      complete: false,\r\n    },\r\n    // 1: {\r\n    //   name: \"Platform Types\",\r\n    //   complete: false,\r\n    // },\r\n    1: {\r\n      name: \"Forces\",\r\n      data: {\r\n        // forces: {'white': forceTemplate},\r\n        forces: {},\r\n        selectedForce: '',\r\n        roles: [],\r\n      },\r\n      complete: false,\r\n    },\r\n    // 3: {\r\n    //   name: \"Back history\",\r\n    //   complete: false,\r\n    // },\r\n    // 4: {\r\n    //   name: \"Positions\",\r\n    //   complete: false,\r\n    // },\r\n    2: {\r\n      name: \"Channels\",\r\n      data: {\r\n        // channels: {'white weather': channelTemplate},\r\n        channels: {},\r\n        selectedChannel: '',\r\n      },\r\n      complete: false,\r\n    },\r\n    // 6: {\r\n    //   name: \"Play control\",\r\n    //   complete: false,\r\n    // },\r\n  },\r\n  currentTab: 0\r\n};\r\n\r\nexport const wargamesReducer = (state = initialState, action) => {\r\n\r\n  let newState = copyState(state);\r\n\r\n  let tab = newState.currentTab;\r\n\r\n  let curChannel;\r\n  let recipientIndex;\r\n\r\n  switch (action.type) {\r\n\r\n    case ActionConstant.ALL_WARGAME_NAMES_SAVED:\r\n      newState.wargameList = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.SET_CURRENT_WARGAME:\r\n      newState.currentWargame = action.payload.name;\r\n      newState.wargameTitle = action.payload.wargameTitle;\r\n      newState.tabs = action.payload.tabs;\r\n      return newState;\r\n\r\n    case ActionConstant.SET_WARGAME_NAME:\r\n\r\n      let listWithoutThis = [];\r\n\r\n      newState.wargameList.forEach((game) => {\r\n        if (game.name !== newState.currentWargame) listWithoutThis.push(game);\r\n      });\r\n\r\n      let uniqueName = listWithoutThis.every((wargame) => wargame.title !== action.payload );\r\n\r\n      newState.validation.validWargameName = uniqueName;\r\n      newState.wargameTitle = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.SET_CURRENT_GAME_SETUP_TAB:\r\n      newState.currentTab = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_GAME_SETUP_DATA:\r\n      newState.tabs[tab].data = {...newState.tabs[tab].data, ...action.payload};\r\n      break;\r\n\r\n    case ActionConstant.ADD_NEW_FORCE:\r\n      newState.tabs[tab].data.forces[action.payload] = forceTemplate;\r\n      break;\r\n\r\n    case ActionConstant.SET_SELECTED_FORCE:\r\n      newState.tabs[tab].data.selectedForce = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.ADD_NEW_CHANNEL:\r\n      newState.tabs[tab].data.channels[action.payload] = channelTemplate;\r\n      break;\r\n\r\n    case ActionConstant.SET_SELECTED_CHANNEL:\r\n      newState.tabs[tab].data.selectedChannel = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_FORCE_OVERVIEW:\r\n      let selected = newState.tabs[tab].data.selectedForce;\r\n      newState.tabs[tab].data.forces[selected].overview = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.ADD_NEW_RECIPIENT:\r\n      curChannel = newState.tabs[tab].data.selectedChannel;\r\n      let newParticipant = {...action.payload, subscriptionId: uniqId.time()};\r\n      newState.tabs[tab].data.channels[curChannel].push(newParticipant);\r\n      break;\r\n\r\n    case ActionConstant.UPDATE_RECIPIENT:\r\n      curChannel = newState.tabs[tab].data.selectedChannel;\r\n      recipientIndex = newState.tabs[tab].data.channels[curChannel].findIndex((recipient) => recipient.subscriptionId === action.payload.id);\r\n      newState.tabs[tab].data.channels[curChannel].splice(recipientIndex, 1, {...action.payload.data, subscriptionId: action.payload.id});\r\n      break;\r\n\r\n    case ActionConstant.REMOVE_RECIPIENT:\r\n      curChannel = newState.tabs[tab].data.selectedChannel;\r\n      recipientIndex = newState.tabs[tab].data.channels[curChannel].findIndex((recipient) => recipient.subscriptionId === action.payload);\r\n      newState.tabs[tab].data.channels[curChannel].splice(recipientIndex, 1);\r\n      break;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n\r\n  let flatten = (n) => {\r\n    if (_.isEmpty(n)) return null; // force show empty array\r\n    return (_.isArray(n) || _.isObject(n)) ? _.flatMapDeep(n, flatten) : n;\r\n  };\r\n\r\n  let inputResults = _.flatMapDeep(newState.tabs[tab].data, flatten);\r\n\r\n  newState.tabs[tab].complete = inputResults.every((item) => item !== null && item.length > 0);\r\n\r\n  return newState;\r\n};\r\n","import ActionConstant from '../ActionConstants.js';\r\nimport copyState from \"../copyStateHelper.js\";\r\n\r\nconst initialState = {\r\n  open: false,\r\n  message: '',\r\n};\r\n\r\nexport const notificationReducer = (state = initialState, action) => {\r\n\r\n    let newState = copyState(state);\r\n\r\n    switch (action.type) {\r\n      case ActionConstant.SHOW_NOTIFICATION:\r\n        newState = action.payload;\r\n        return newState;\r\n\r\n      case ActionConstant.HIDE_NOTIFICATION:\r\n        newState = action.payload;\r\n        return newState;\r\n\r\n      default:\r\n        return newState;\r\n    }\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\nimport copyState from \"../../Helpers/copyStateHelper\";\r\nimport _ from \"lodash\";\r\n\r\nconst initialState = {\r\n  selectedForce: '',\r\n  selectedRole: '',\r\n  selectedChannel: '',\r\n  currentWargame: '',\r\n  wargameTitle: '',\r\n  channels: {},\r\n  allChannels: {},\r\n  forces: {},\r\n  allForces: {},\r\n  messageSchema: {},\r\n  messages: [],\r\n};\r\n\r\nexport const playerUiReducer = (state = initialState, action) => {\r\n\r\n  let newState = copyState(state);\r\n\r\n  switch (action.type) {\r\n\r\n    case ActionConstant.SET_CURRENT_WARGAME_PLAYER:\r\n\r\n      newState.currentWargame = action.payload.name;\r\n      newState.wargameTitle = action.payload.wargameTitle;\r\n\r\n      let channelsTab = Object.values(action.payload.tabs).find((obj) => obj.name === \"Channels\");\r\n      newState.allChannels = channelsTab.data.channels;\r\n\r\n      let forcesTab = Object.values(action.payload.tabs).find((obj) => obj.name === \"Forces\");\r\n      newState.allForces = forcesTab.data.forces;\r\n      break;\r\n\r\n    case ActionConstant.SET_FORCE:\r\n      newState.selectedForce = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_ROLE:\r\n      newState.selectedRole = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_FILTERED_CHANNELS:\r\n\r\n      let channels = {};\r\n      for (let channel in newState.allChannels) {\r\n\r\n        let channelParticipants = newState.allChannels[channel].filter((recipient) => recipient.force === newState.selectedForce && recipient.role === newState.selectedRole);\r\n        let channelActive = newState.allChannels[channel].some((recipient) => recipient.force === newState.selectedForce && recipient.role === newState.selectedRole);\r\n\r\n        // only allow unique participants in gameSetup but check here also\r\n        channelParticipants = _.uniqWith(channelParticipants, _.isEqual);\r\n\r\n        if (channelActive) {\r\n          channels[channel] = {\r\n            templates: _.flatMap(channelParticipants, (participant) => participant.templates),\r\n            messages: []\r\n          };\r\n        }\r\n      }\r\n      newState.selectedChannel = Object.keys(channels)[0];\r\n      newState.channels = channels;\r\n      break;\r\n\r\n    case ActionConstant.SET_CHANNEL:\r\n      newState.selectedChannel = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_MESSAGE_SCHEMA:\r\n      newState.messageSchema = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_LATEST_MESSAGES:\r\n      newState.messages = action.payload;\r\n      break;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n\r\n  return newState;\r\n};\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport { messageTypesReducer } from \"../ActionsAndReducers/dbMessageTypes/messageTypes_Reducer\";\r\nimport { messagesReducer } from \"../ActionsAndReducers/dbMessages/messages_Reducer\";\r\nimport { currentModal } from \"../ActionsAndReducers/Modal/Modal_Reducer\";\r\nimport { currentViewURIReducer } from \"../ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_Reducer\";\r\nimport { umpireMenuReducer } from \"../ActionsAndReducers/UmpireMenu/umpireMenu_Reducer\";\r\nimport { wargamesReducer } from \"../ActionsAndReducers/dbWargames/wargames_Reducer\";\r\nimport { notificationReducer } from \"../ActionsAndReducers/Notification/Notification_Reducer\";\r\nimport { playerUiReducer } from \"../ActionsAndReducers/playerUi/playerUi_Reducer\";\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\nconst middlewares = [thunk];\r\n\r\nif (process.env.NODE_ENV === `development`) {\r\n  const { logger } = require(`redux-logger`);\r\n  middlewares.push(logger);\r\n}\r\n\r\nexport default createStore(combineReducers({\r\n  messageTypes: messageTypesReducer,\r\n  messages: messagesReducer,\r\n  umpireMenu: umpireMenuReducer,\r\n  currentViewURI: currentViewURIReducer,\r\n  currentModal,\r\n  notification: notificationReducer,\r\n  wargame: wargamesReducer,\r\n  playerUi: playerUiReducer,\r\n}), applyMiddleware(...middlewares));\r\n","import ActionConstant from '../ActionConstants';\r\n\r\nexport const currentViewURIReducer = (state = '/', action) => {\r\n\r\n  let newState = state;\r\n\r\n  switch (action.type) {\r\n    case ActionConstant.SET_CURRENT_VIEW_FROM_URI:\r\n      window.history.pushState({}, '', action.payload);\r\n      newState = action.payload;\r\n      return newState;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};","import ActionConstant from '../ActionConstants.js';\r\nimport copyState from \"../copyStateHelper.js\";\r\n\r\nexport const currentModal = (state = {}, action) => {\r\n\r\n    let newState = copyState(state);\r\n\r\n    switch (action.type) {\r\n      case ActionConstant.OPEN_MODAL:\r\n          newState = action.payload;\r\n          return newState;\r\n        case ActionConstant.CLOSE_MODAL:\r\n          newState = action.payload;\r\n          return newState;\r\n        default:\r\n          newState = {};\r\n          return newState;\r\n    }\r\n};\r\n","export default function deepCopy(objectpassed) {\r\n\r\n  // arrays return \"object\" in js so any object or array will be looped to copy deeply.\r\n  // strings, numbers and booleans are deep copied naturally, while any objects within arrays or objects\r\n  // or objects within arrays are only copied shallowly.\r\n  if (objectpassed === null || typeof objectpassed !== 'object') {\r\n    return objectpassed;\r\n  }\r\n\r\n  var temporaryStorage = objectpassed.constructor();\r\n\r\n  for (var key in objectpassed) {\r\n    temporaryStorage[key] = deepCopy((objectpassed[key]));\r\n  }\r\n  return temporaryStorage;\r\n}","import React, { Component } from 'react';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport ModalSwitch from \"./Components/Modals/ModalSwitch\";\r\nimport Notification from \"./Components/Notification\";\r\n\r\nimport Router from \"./Components/Router\";\r\n\r\nimport './scss/App.scss';\r\nimport Store from './Store/Store';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    document.title = \"Serge\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Provider store={Store}>\r\n          <Router />\r\n          <ModalSwitch />\r\n          <Notification />\r\n        </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}