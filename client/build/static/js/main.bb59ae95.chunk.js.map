{"version":3,"sources":["ActionsAndReducers/ActionConstants.js","ActionsAndReducers/Modal/Modal_ActionCreators.js","Components/Modals/ModalWrapper.jsx","api/consts.js","api/messageTypes_api.js","ActionsAndReducers/playerUi/playerUi_ActionCreators.js","api/wargames_api.js","ActionsAndReducers/Notification/Notification_ActionCreators.js","ActionsAndReducers/dbWargames/wargames_ActionCreators.js","Components/Modals/AddForceModal.jsx","api/messages_api.js","ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_ActionCreators.js","ActionsAndReducers/dbMessages/messages_ActionCreators.js","ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators.js","ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators.js","Components/Modals/DeleteModal.jsx","Components/Modals/AddChannelModal.jsx","Components/Modals/ModalSwitch.jsx","Components/Notification.jsx","Components/Link.jsx","Views/ChooseInterface.jsx","Components/WargameSearchList.jsx","Views/GameDesignerInterface.jsx","Components/JsonCreator.jsx","Components/MessagePreview.jsx","Components/SearchList.jsx","Views/UmpireMenu.jsx","Components/JsonEditor.jsx","Views/EditMessage.jsx","Views/CreateMessage.jsx","Components/jsonSchemaEditor/json-schema-editor/editor.js","Components/jsonSchemaEditor/jsonEditor.js","Components/jsonSchemaEditor/editorPreview.js","Components/jsonSchemaEditor/index.js","Views/EditTemplate.jsx","Views/CreateTemplate.jsx","Components/Inputs/TextInput.jsx","Components/Inputs/DropdownInput.jsx","Components/Layout/Row.jsx","Components/Inputs/TextArea.jsx","Views/TabViews/SettingsTab.jsx","Components/TabsSearchList.jsx","Components/Layout/RemovableGroupItem.jsx","Views/TabViews/ForcesTab.jsx","Components/Layout/EditSubscriptionRow.jsx","Components/Layout/ChannelsTable.jsx","Views/TabViews/ChannelsTab.jsx","Components/ValidationNotification.jsx","Views/TabbedView.jsx","Components/ProgressBar/ProgressBar.jsx","Views/GameSetup.jsx","Components/MessagePreviewPlayerUi.jsx","Views/MessagesList.jsx","Components/MessageCreator.jsx","Components/NewMessage.jsx","Views/MessageFeeds.jsx","Views/PlayerUi.jsx","Components/Router.jsx","ActionsAndReducers/copyStateHelper.js","ActionsAndReducers/dbMessageTypes/messageTypes_Reducer.js","ActionsAndReducers/dbMessages/messages_Reducer.js","ActionsAndReducers/UmpireMenu/umpireMenu_Reducer.js","ActionsAndReducers/dbWargames/wargames_Reducer.js","ActionsAndReducers/Notification/Notification_Reducer.js","ActionsAndReducers/playerUi/playerUi_Reducer.js","ActionsAndReducers/loadingDb_Reducer.js","Store/Store.jsx","ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_Reducer.js","ActionsAndReducers/Modal/Modal_Reducer.js","Helpers/copyStateHelper.js","App.jsx","index.jsx"],"names":["Object","freeze","ASYNC_SUCCESS","ASYNC_ERROR","ASYNC_LOADING","NORMAL_ACTION","DB_MESSAGE_STATUS","DB_MESSAGE_CREATION_LOADING","DB_MESSAGE_GET_LOADING","DB_SAVE_MESSAGES","DB_MESSAGE_TYPES_GET","DB_MESSAGE_TYPES_SAVED","SET_CURRENT_VIEW_FROM_URI","DB_MESSAGE_SAVED","DB_MESSAGES_GET","DB_RETURNED_MESSAGE","RESET_MESSAGE_PREVIEW","SET_SELECTED_SCHEMA","SET_PREVIEW_SCHEMA","OPEN_MODAL","CLOSE_MODAL","SET_CURRENT_GAME_SETUP_TAB","SET_GAME_SETUP_DATA","ALL_WARGAME_NAMES_SAVED","SET_CURRENT_WARGAME","ADD_NEW_FORCE","SET_SELECTED_FORCE","ADD_NEW_CHANNEL","SET_SELECTED_CHANNEL","SET_WARGAME_NAME","SET_FORCE_OVERVIEW","GAME_TITLE_INVALID","ADD_NEW_RECIPIENT","SHOW_NOTIFICATION","HIDE_NOTIFICATION","UPDATE_RECIPIENT","REMOVE_RECIPIENT","SET_CURRENT_WARGAME_PLAYER","SET_FORCE","SET_ROLE","SET_FILTERED_CHANNELS","SET_CHANNEL","SET_MESSAGE_SCHEMA","SET_LATEST_MESSAGES","POPULATE_MESSAGE_TYPES_DB","POPULATE_WARGAMES_DB","modalAction","open","openModal","type","ActionConstant","payload","modal","close","ModalWrapper","handleBackgroundClick","e","target","currentTarget","_this","props","dispatch","setSize","this","editable","react_default","a","createElement","className","onClick","children","Component","connect","serverPath","databasePath","forceTemplate","overview","roles","channelTemplate","dbDefaultSettings","_id","wargameTitle","tabs","0","name","data","gameDescription","spatialRepresentation","planningInterval","replayInterval","turnStrategy","1","forces","selectedForce","2","channels","selectedChannel","db","PouchDB","postNewMessage","schema","Promise","resolve","reject","asyncToGenerator","regenerator_default","mark","_callee","allMessages","time","schemaObj","wrap","_context","prev","next","getAllMessagesFromDb","sent","find","messageType","title","toLowerCase","abrupt","Date","toISOString","lastUpdated","details","completed","put","then","result","catch","err","console","log","stop","duplicateMessageInDb","id","get","doc","concat","uniqid","updateMessageInDb","_callee2","_context2","_rev","deleteMessageFromDb","remove","changes","since","include_docs","descending","results","map","filter","hasOwnProperty","setForce","setRole","setFilteredChannels","setChannel","setMessageSchema","setWargameMessages","messages","getWargame","gamePath","_ref","wargame","wargamesApi","_x","apply","arguments","saveMessage","dbName","message","_ref2","_x2","getMessageTemplate","_ref3","_callee3","template","_context3","messageTemplatesApi","_x3","getAllWargameMessages","_ref4","_callee4","_context4","_x4","wargameDbStore","populateWargame","fetch","response","json","dbs","wargameNames","toCreate","_","difference","pull","forEach","setMaxListeners","changesListener","live","timeout","heartbeat","on","getAllMessages","unshift","promises","game","res","all","createWargame","uniqId","settings","objectSpread","editWargame","dbPath","getNameFromPath","updateWargame","getAllWargames","games","some","updateLocalDoc","duplicateWargame","newDb","newDbName","allDocs","rows","path","URL","pathname","index","lastIndexOf","substring","showNotification","hideNotification","setCurrentTab","tab","setGameData","setWargameTitle","addNewForce","setSelectedForce","addNewChannel","setSelectedChannel","setForceOverview","saveAllWargameNames","names","setCurrentWargame","addRecipientToChannel","updateRecipient","populatingDb","isLoading","createNewWargameDB","wargames","omit","clearWargames","window","location","reload","_ref5","_callee5","localDoc","_context5","_x5","AddForceModal","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hideModal","setState","forceName","setNewForceName","value","sameName","currentTab","addForce","state","currentModal","disable","length","Modals_ModalWrapper","autoFocus","onChange","disabled","addMessage","messageDetail","el","updatedMessage","getMessage","setCurrentViewFromURI","DBMessageSaveStatus","status","DBSaveMessageArray","DBSaveMessagePreview","loadingDBMessageCreate","loadingDBMessageGet","resetMessagePreview","createMessage","check","object","Error","messagesApi","ok","t0","alert","duplicateMessage","messageId","string","updateMessage","responses","_message","toConsumableArray","deleteMessage","getSingleMessage","_ref6","createMessageType","messageTypesApi","duplicateMessageType","updateMessageType","deleteMessageType","getAllMessageTypes","_callee6","_context6","_x6","setSelectedSchema","schemaId","setPreviewSchema","DeleteModal","currentViewURI","umpireMenu","selectedSchemaID","messagePreviewId","AddChannelModal","channelName","setChannelName","addChannel","ModalSwitch","Modals_AddForceModal","Modals_DeleteModal","Modals_AddChannelModal","Fragment","Notification","onClickHandler","notification","react_fontawesome_index_es","icon","faTimes","Link","aNewTab","metaKey","ctrlKey","anExternalLink","href","startsWith","preventDefault","class","UmpireMenu","entries","machine","machineryFailure","setTimeout","weather","weatherForecast","activeGames","wargameList","keys","dbLoading","every","k","Components_Link","classNames","link--disabled","WargameSearchList","filterMessages","input","searchInput","searchQuery","listData","indexOf","displayControls","activeTitle","hideControls","messageList","nextProps","nextState","nextContext","sameMessagesQuantity","that","list","key","placeholder","onMouseOver","bind","onMouseLeave","faPencilAlt","setSelectedWargame","faClone","GameDesignerInterface","Components_WargameSearchList","JsonCreator","messageTypes","mes","editor","getValue","editorPreviewRef","React","createRef","selectedSchema","destroy","JSONEditor","current","theme","setValue","faSave","ref","MessagePreview","pair","deconstructObj","moment","format","withoutName","item","obj","i","createObjItem","array","of","deconstructArr","boolean","createBoolItem","ISO_8601","isValid","createTimeItem","createStrItem","detail","from","SearchList","setSelected","active","selected","date","searchlist-title","setSelectedSchemaId","creatorType","newState","duplicateTemplate","deleteTemplate","split","buildMessageBoard","_ref7","faPlus","Components_SearchList","faTrash","faArrowLeft","size","createSearchListSection","Components_JsonCreator","previewForm","Components_MessagePreview","messagePreview","createTemplatesActions","createMessagesActions","EditMessage","messageToEdit","JsonEditor","Editor","elementId","jsonEditor","renderZone","document","getElementById","PreviewEditor","SchemaEditor","isObjectPropertiesButton","node","matches","span","parentElement","querySelector","innerText","observer","MutationObserver","mutationsList","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","addedNodes","nodeType","classList","add","return","observe","childList","subtree","prototype","updateSchema","validate","getJSON","create","defineProperty","enumerable","writable","no_additional_properties","custom_validators","errors","minimum","maximum","push","property","button","root","getButton","button_holder","getHeaderButtonHolder","appendChild","header","parentNode","insertBefore","nextSibling","addEventListener","contents","blob","Blob","JSON","stringify","navigator","msSaveOrOpenBlob","download","createObjectURL","dataset","downloadurl","join","dispatchEvent","MouseEvent","view","bubbles","cancelable","JsonSchemaEditor","content","schemaEditor","editorBox","assertThisInitialized","updateEditor","saved","defaultValue","newValue","options","newJson","save","counter","defaults","object_layout","layout","booleanOptions","Card","CardHeader","CardBody","CardFooter","EditorPreview","previewBox","editorPreview","iconlib","updateMetaSchema","updatePreviewSchema","updateOptions","properties","Status","enum","Description","metaSchema","jsonMetaSchema","previewSchema","metaschema","jsonSchemaEditor","saveSchema","TextInput","updateStore","numInput","invalid","validInput","DropdownInput","selectOptions","option","Row","TextArea","style","resize","SettingsTab","updateDescription","updateSpatialRepresentation","updatePlanningInterval","updateReplayInterval","updateTurnStrategy","Inputs_TextArea","Layout_Row","Inputs_DropdownInput","Inputs_TextInput","TabsSearchList","prop","list-title","createList","RemovableGroupItem","ForcesTab","force","updateOverview","curTab","role","Layout_RemovableGroupItem","Components_TabsSearchList","createForceEditor","EditSubscriptionRow","updateSubscriptionForce","editSubscriptionForce","updateSubscriptionRole","editSubscriptionRole","updateSubscriptionTemplates","editSubscriptionTemplates","updateChannel","subscriptionData","label","templates","subscriptionId","cancelEdit","react_select_esm","forceOptions","roleOptions","templateOptions","isMulti","ChannelsTable","subscriptionToEdit","setSelectedRole","selectedRole","setSelectedTemplate","selectedTemplates","addToChannel","channelData","values","d","row","j","removeSubscription","editSubscription","_this2","Layout_EditSubscriptionRow","createRow","isDisabled","filterChannels","channelList","curPropsState","nextPropsState","Layout_ChannelsTable","createChannelEditor","ValidationNotification","TabContainer","Typography","component","padding","TabbedView","handleChange","event","invalidFields","classes","AppBar","position","color","Tabs","indicatorColor","textColor","centered","tabName","Tab","TabViews_SettingsTab","TabViews_ForcesTab","ChannelsTab","Components_ValidationNotification","validation","withStyles","flexGrow","backgroundColor","palette","background","paper","ProgressBar","GameSetup","updateWargameTitle","saveWargame","checkAllValid","currentWargame","reduce","entry","parseInt","complete","progress-indicator--active","progress-indicator--complete","validWargameName","link","link--noIcon","Components_ProgressBar_ProgressBar","createIndicators","Views_TabbedView","MessagesList","channel","curChannel","Collapsible_default","trigger","transitionTime","easing","MessagePreviewPlayerUi","sendMessage","messageDetails","playerUi","NewMessage","setTemplate","val","MessageCreator","MessageFeeds","createTabs","createMessageList","MessageFeeds_TabContainer","Views_MessagesList","Components_NewMessage","messageSchema","PlayerUi","updateSelectedWargame","wargamePath","updateSelectedForce","updateSelectedRole","goBack","allForces","cursor","Views_MessageFeeds","Router","routes","action","ChooseInterface","Views_GameDesignerInterface","Views_UmpireMenu","CreateTemplate","EditTemplate","CreateMessage","Views_EditMessage","Views_GameSetup","Views_PlayerUi","currentView","router","UniversalRouter","deepCopy","objectpassed","temporaryStorage","constructor","initialState","loadingDb","allChannels","loadingMessageTypes","loadingWargames","middlewares","thunk","createStore","combineReducers","copyState","history","pushState","recipientIndex","listWithoutThis","uniqueName","newParticipant","findIndex","recipient","splice","inputResults","flatMapDeep","flatten","n","isEmpty","isArray","isObject","channelsTab","forcesTab","channelParticipants","channelActive","uniqWith","isEqual","flatMap","participant","applyMiddleware","App","es","store","Store","Components_Router","Modals_ModalSwitch","Components_Notification","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.bb59ae95.chunk.js","sourcesContent":["export default Object.freeze({\r\n  ASYNC_SUCCESS: 'ASYNC_SUCCESS',\r\n  ASYNC_ERROR: 'ASYNC_ERROR',\r\n  ASYNC_LOADING: 'ASYNC_LOADING',\r\n  NORMAL_ACTION: 'NORMAL_ACTION',\r\n  DB_MESSAGE_STATUS: 'DB_MESSAGE_STATUS',\r\n  DB_MESSAGE_CREATION_LOADING:  'DB_MESSAGE_CREATION_LOADING',\r\n  DB_MESSAGE_GET_LOADING: 'DB_MESSAGE_GET_LOADING',\r\n  DB_SAVE_MESSAGES: 'DB_SAVE_MESSAGES',\r\n  DB_MESSAGE_TYPES_GET: 'DB_MESSAGE_TYPES_GET',\r\n  DB_MESSAGE_TYPES_SAVED: 'DB_MESSAGE_TYPES_SAVED',\r\n  SET_CURRENT_VIEW_FROM_URI: 'SET_CURRENT_VIEW_FROM_URI',\r\n  DB_MESSAGE_SAVED: 'DB_MESSAGE_SAVED',\r\n  DB_MESSAGES_GET: 'DB_MESSAGES_GET',\r\n  DB_RETURNED_MESSAGE: 'DB_RETURNED_MESSAGE',\r\n  RESET_MESSAGE_PREVIEW: 'RESET_MESSAGE_PREVIEW',\r\n  SET_SELECTED_SCHEMA: 'SET_SELECTED_SCHEMA',\r\n  SET_PREVIEW_SCHEMA: 'SET_PREVIEW_SCHEMA',\r\n  OPEN_MODAL: 'OPEN_MODAL',\r\n  CLOSE_MODAL: 'CLOSE_MODAL',\r\n  SET_CURRENT_GAME_SETUP_TAB: 'SET_CURRENT_GAME_SETUP_TAB',\r\n  SET_GAME_SETUP_DATA: 'SET_GAME_SETUP_DATA',\r\n  ALL_WARGAME_NAMES_SAVED: 'ALL_WARGAME_NAMES_SAVED',\r\n  SET_CURRENT_WARGAME: 'SET_CURRENT_WARGAME',\r\n  ADD_NEW_FORCE: 'ADD_NEW_FORCE',\r\n  SET_SELECTED_FORCE: 'SET_SELECTED_FORCE',\r\n  ADD_NEW_CHANNEL: 'ADD_NEW_CHANNEL',\r\n  SET_SELECTED_CHANNEL: 'SET_SELECTED_CHANNEL',\r\n  SET_WARGAME_NAME: 'SET_WARGAME_NAME',\r\n  SET_FORCE_OVERVIEW: 'SET_FORCE_OVERVIEW',\r\n  GAME_TITLE_INVALID: 'GAME_TITLE_INVALID',\r\n  ADD_NEW_RECIPIENT: 'ADD_NEW_RECIPIENT',\r\n  SHOW_NOTIFICATION: 'SHOW_NOTIFICATION',\r\n  HIDE_NOTIFICATION: 'HIDE_NOTIFICATION',\r\n  UPDATE_RECIPIENT: 'UPDATE_RECIPIENT',\r\n  REMOVE_RECIPIENT: 'REMOVE_RECIPIENT',\r\n  SET_CURRENT_WARGAME_PLAYER: 'SET_CURRENT_WARGAME_PLAYER',\r\n  SET_FORCE: 'SET_FORCE',\r\n  SET_ROLE: 'SET_ROLE',\r\n  SET_FILTERED_CHANNELS: 'SET_FILTERED_CHANNELS',\r\n  SET_CHANNEL: 'SET_CHANNEL',\r\n  SET_MESSAGE_SCHEMA: 'SET_MESSAGE_SCHEMA',\r\n  SET_LATEST_MESSAGES: 'SET_LATEST_MESSAGES',\r\n  POPULATE_MESSAGE_TYPES_DB: 'POPULATE_MESSAGE_TYPES_DB',\r\n  POPULATE_WARGAMES_DB: 'POPULATE_WARGAMES_DB',\r\n});\r\n","import ActionConstant from '../ActionConstants.js';\r\n\r\nexport const modalAction = {\r\n  open: (openModal) => ({\r\n    type: ActionConstant.OPEN_MODAL,\r\n    payload: {\r\n      open: true,\r\n      modal: openModal,\r\n    },\r\n  }),\r\n\r\n  close: () => ({\r\n    type: ActionConstant.CLOSE_MODAL,\r\n    payload: {\r\n      open: false,\r\n      modal: '',\r\n    },\r\n  })\r\n};\r\n","import React, {Component}  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\n\r\nclass ModalWrapper extends Component {\r\n\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  handleBackgroundClick = (e) => {\r\n    if (e.target === e.currentTarget) this.props.dispatch(modalAction.close());\r\n  };\r\n\r\n  render() {\r\n    const setSize = this.props.editable ? \"modal setsize\": 'modal';\r\n\r\n    return (\r\n      <div className=\"modal-bg\" onClick={this.handleBackgroundClick}>\r\n        <div className={setSize}>\r\n          {this.props.children}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default connect()(ModalWrapper);","export const serverPath = 'https://serge-dev.herokuapp.com/';\r\nexport const databasePath = 'https://serge-dev.herokuapp.com/db/';\r\n// export const serverPath = 'http://localhost:8080/';\r\n// export const databasePath = 'http://localhost:8080/db/';\r\n\r\nexport const MSG_STORE = \"messages\";\r\nexport const MSG_TYPE_STORE = \"message_types\";\r\n\r\nexport const headers = {\r\n  'Content-Type': 'application/json',\r\n  'Access-Control-Allow-Origin': '*',\r\n  'Access-Control-Allow-Methods': 'POST',\r\n  'Access-Control-Allow-Headers': 'Authorization, Lang'\r\n};\r\n\r\nexport const forceTemplate = {\r\n  overview: 'An overview written here..',\r\n  roles: ['General']\r\n};\r\n\r\nexport const channelTemplate = [];\r\n\r\n\r\nexport const dbDefaultSettings = {\r\n  _id: '_local/settings',\r\n  wargameTitle: 'wargame',\r\n  tabs: {\r\n    0: {\r\n      name: \"Overview - settings\",\r\n      data: {\r\n        gameDescription: '',\r\n        spatialRepresentation: '',\r\n        planningInterval: null,\r\n        replayInterval: null,\r\n        turnStrategy: '',\r\n      }\r\n    },\r\n    1: {\r\n      name: \"Forces\",\r\n      data: {\r\n        forces: {},\r\n        roles: ['General'],\r\n        selectedForce: '',\r\n      },\r\n    },\r\n    2: {\r\n      name: \"Channels\",\r\n      data: {\r\n        channels: {},\r\n        selectedChannel: '',\r\n      },\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// export const channelTemplate = [{\r\n//   force: 'white',\r\n//   role: 'General',\r\n//   template: {\r\n//     name: '',\r\n//     id: '',\r\n//   },\r\n//   // subscriptionId: uniqid.time(),\r\n// }];\r\n","import uniqid from \"uniqid\";\r\n\r\nimport PouchDB from \"pouchdb\";\r\nimport { databasePath,\r\n         MSG_TYPE_STORE } from \"./consts\";\r\n\r\nimport machineryFailure from '../Schemas/machinery_failure.json';\r\nimport weatherForecast from '../Schemas/weather_forecase.json';\r\n\r\nvar db = new PouchDB(databasePath+MSG_TYPE_STORE);\r\n\r\n\r\nexport const populateDb = () => {\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    db.allDocs().then(entries => {\r\n      if (entries.rows.length === 0) {\r\n        var machine = {\r\n          _id: new Date().toISOString(),\r\n          lastUpdated: new Date().toISOString(),\r\n          title: 'machinery failure',\r\n          details: machineryFailure,\r\n          completed: false\r\n        };\r\n        db.put(machine);\r\n\r\n        setTimeout(function () {\r\n          var weather = {\r\n            _id: new Date().toISOString(),\r\n            lastUpdated: new Date().toISOString(),\r\n            title: 'weather forecast',\r\n            details: weatherForecast,\r\n            completed: false\r\n          };\r\n          db.put(weather).then(() => {\r\n            resolve(true);\r\n          });\r\n        }, 2000);\r\n      } else {\r\n        resolve(true);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n\r\n\r\n\r\nexport const postNewMessage = (schema) => {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    (async() => {\r\n\r\n      const allMessages = await getAllMessagesFromDb();\r\n\r\n      const matchedName = allMessages.find((messageType) => messageType.title.toLowerCase() === schema.title.toLowerCase());\r\n\r\n      if (matchedName) {\r\n        reject(\"Message title already used\");\r\n        return;\r\n      }\r\n\r\n      let time = new Date().toISOString();\r\n\r\n      var schemaObj = {\r\n        _id: time,\r\n        lastUpdated: time,\r\n        title: schema.title,\r\n        details: schema,\r\n        completed: false\r\n      };\r\n\r\n      return db.put(schemaObj)\r\n        .then(function (result) {\r\n          resolve(result);\r\n        })\r\n        .catch(function (err) {\r\n          console.log(err);\r\n          reject(false);\r\n        });\r\n\r\n    })();\r\n  });\r\n};\r\n\r\nexport const duplicateMessageInDb = (id) => {\r\n\r\n  let time = new Date().toISOString();\r\n\r\n  return new Promise((resolve, reject) => {\r\n    db.get(id)\r\n      .then(function (doc) {\r\n\r\n        // var updatedMessage = doc.details;\r\n\r\n        doc.details.title = `${doc.details.title} Copy-${uniqid.time()}`;\r\n\r\n        return db.put({\r\n          _id: time,\r\n          lastUpdated: time,\r\n          title: doc.details.title,\r\n          details: doc.details,\r\n        });\r\n      })\r\n      .then(function () {\r\n        resolve(true);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        reject(false);\r\n      })\r\n  });\r\n};\r\n\r\nexport const updateMessageInDb = (schema, id) => {\r\n  return new Promise((resolve, reject) => {\r\n    (async() => {\r\n\r\n      const allMessages = await getAllMessagesFromDb();\r\n\r\n      const matchedName = allMessages.find((messageType) => messageType.title.toLowerCase() === schema.title.toLowerCase());\r\n\r\n      if (matchedName) {\r\n        reject(\"Message title already used\");\r\n        return;\r\n      }\r\n\r\n      db.get(id)\r\n        .then(function (doc) {\r\n          return db.put({\r\n            _id: doc._id,\r\n            lastUpdated: new Date().toISOString(),\r\n            _rev: doc._rev,\r\n            title: schema.title,\r\n            details: schema\r\n          });\r\n        })\r\n        .then(function (result) {\r\n          resolve(result);\r\n        })\r\n        .catch(function (err) {\r\n          console.log(err);\r\n          reject(false);\r\n        })\r\n\r\n    })();\r\n  });\r\n};\r\n\r\nexport const deleteMessageFromDb = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    db.get(id)\r\n      .then(function (doc) {\r\n        return db.remove(doc);\r\n      })\r\n      .then(function (result) {\r\n        resolve(result);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        reject(false);\r\n      })\r\n  });\r\n};\r\n\r\nexport const getAllMessagesFromDb = () => {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    return db.changes({\r\n      since: 1,\r\n      include_docs: true,\r\n      descending: true,\r\n    })\r\n      .then(function (changes) {\r\n\r\n        let results = changes.results.map((a) => a.doc);\r\n        results = results.filter((a) => !a.hasOwnProperty('_deleted') && a.hasOwnProperty('details'));\r\n\r\n        resolve(results);\r\n      })\r\n      .catch(function (err) {\r\n        // handle errors\r\n        reject(err);\r\n        console.log(err);\r\n      });\r\n  });\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\nimport * as wargamesApi from \"../../api/wargames_api\";\r\nimport * as messageTemplatesApi from \"../../api/messageTypes_api\";\r\n\r\nconst setCurrentWargame = (data) => ({\r\n  type: ActionConstant.SET_CURRENT_WARGAME_PLAYER,\r\n  payload: data\r\n});\r\n\r\nexport const setForce = (data) => ({\r\n  type: ActionConstant.SET_FORCE,\r\n  payload: data\r\n});\r\n\r\nexport const setRole = (data) => ({\r\n  type: ActionConstant.SET_ROLE,\r\n  payload: data\r\n});\r\n\r\nexport const setFilteredChannels = () => ({\r\n  type: ActionConstant.SET_FILTERED_CHANNELS,\r\n});\r\n\r\nexport const setChannel = (data) => ({\r\n  type: ActionConstant.SET_CHANNEL,\r\n  payload: data,\r\n});\r\n\r\nexport const setMessageSchema = (schema) => ({\r\n  type: ActionConstant.SET_MESSAGE_SCHEMA,\r\n  payload: schema,\r\n});\r\n\r\nexport const setWargameMessages = (messages) => ({\r\n  type: ActionConstant.SET_LATEST_MESSAGES,\r\n  payload: messages,\r\n});\r\n\r\nexport const getWargame = (gamePath) => {\r\n  return async (dispatch) => {\r\n\r\n    // await wargamesApi.populateWargame();\r\n\r\n    // will get active wargame during later stages\r\n    let wargame = await wargamesApi.getWargame(gamePath);\r\n\r\n    console.log(wargame);\r\n\r\n    dispatch(setCurrentWargame(wargame));\r\n  }\r\n};\r\n\r\nexport const saveMessage = (dbName, details, message) => {\r\n  return async (dispatch) => {\r\n\r\n    await wargamesApi.postNewMessage(dbName, details, message);\r\n\r\n    console.log(dbName);\r\n    let messages = await wargamesApi.getAllMessages(dbName);\r\n\r\n    dispatch(setWargameMessages(messages));\r\n  }\r\n};\r\n\r\nexport const getMessageTemplate = (id) => {\r\n  return async (dispatch) => {\r\n    let messages = await messageTemplatesApi.getAllMessagesFromDb();\r\n\r\n    var template = messages.find((message) => message._id === id);\r\n\r\n    dispatch(setMessageSchema(template.details));\r\n  }\r\n};\r\n\r\nexport const getAllWargameMessages = (name) => {\r\n  return async (dispatch) => {\r\n\r\n    var messages = await wargamesApi.getAllMessages(name);\r\n\r\n    dispatch(setWargameMessages(messages));\r\n  }\r\n};\r\n","import uniqid from \"uniqid\";\r\nimport _ from \"lodash\";\r\nimport {fetch} from \"whatwg-fetch\";\r\n\r\nimport PouchDB from \"pouchdb\";\r\nimport {  databasePath,\r\n          serverPath,\r\n          dbDefaultSettings,\r\n          MSG_STORE,\r\n          MSG_TYPE_STORE } from \"./consts\";\r\n\r\nimport {setWargameMessages} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\n\r\nvar wargameDbStore = [];\r\n\r\n\r\nconst changesListener = (db, name, dispatch) => {\r\n  db.changes({since: 'now', live: true, timeout: false, heartbeat: false})\r\n    .on('change', function () {\r\n      (async () => {\r\n        let messages = await getAllMessages(name);\r\n        dispatch(setWargameMessages(messages));\r\n      })();\r\n    })\r\n    .on('error', function (err) {\r\n      console.log(err);\r\n      changesListener(db, name, dispatch);\r\n    });\r\n};\r\n\r\nexport const populateWargame = (dispatch) => {\r\n  return fetch(serverPath+'allDbs')\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((dbs) => {\r\n      let wargameNames = wargameDbStore.map((db) => db.name);\r\n      let toCreate = _.difference(dbs, wargameNames);\r\n      toCreate = _.pull(toCreate, MSG_STORE, MSG_TYPE_STORE, \"_replicator\", \"_users\");\r\n\r\n      toCreate.forEach((name) => {\r\n        var db = new PouchDB(databasePath+name);\r\n            db.setMaxListeners(11);\r\n\r\n            changesListener(db, name, dispatch);\r\n\r\n        wargameDbStore.unshift({name, db});\r\n      });\r\n\r\n      let promises = wargameDbStore.map((game) => {\r\n        return game.db.get(dbDefaultSettings._id)\r\n          .then(function (res) {\r\n            return {\r\n              name: game.db.name,\r\n              title: res.wargameTitle\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      });\r\n      return Promise.all(promises);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const clearWargames = () => {\r\n  fetch(serverPath+'clearAll')\r\n    .then(() => {\r\n      window.location.reload(true);\r\n    });\r\n};\r\n\r\nexport const createWargame = () => {\r\n  let uniqId = uniqid.time();\r\n\r\n  var name = `wargame-${uniqId}`;\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    var db = new PouchDB(databasePath+name);\r\n\r\n    wargameDbStore.unshift({name, db});\r\n\r\n    let settings = {...dbDefaultSettings, name: name};\r\n    settings.wargameTitle = `${settings.wargameTitle}-${uniqId}`;\r\n\r\n    db.put(settings)\r\n      .then(() => {\r\n        resolve(db.get(settings._id));\r\n      });\r\n  });\r\n};\r\n\r\nexport const editWargame = (dbPath) => {\r\n\r\n  let dbName = getNameFromPath(dbPath);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      var db = wargameDbStore.find((db) => db.name === dbName).db;\r\n      db.get(dbDefaultSettings._id)\r\n        .then((res) => {\r\n          resolve(res);\r\n        });\r\n    } catch (err) {\r\n      reject(err);\r\n    }\r\n  });\r\n};\r\n\r\nexport const updateWargame = (dbName, data, title) => {\r\n\r\n  return getAllWargames()\r\n    .then(function (games) {\r\n      if (games.some((game) => game.title === title && getNameFromPath(game.name) !== dbName)) return 'invalid';\r\n      return updateLocalDoc(dbName, data, title);\r\n    })\r\n    .catch(function (err) {\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const duplicateWargame = (dbPath) => {\r\n\r\n  let dbName = getNameFromPath(dbPath);\r\n\r\n  let db = wargameDbStore.find((db) => db.name === dbName).db;\r\n  let uniqId = uniqid.time();\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    var newDb;\r\n    var newDbName = `wargame-${uniqId}`;\r\n\r\n    db.get(dbDefaultSettings._id)\r\n      .then((res) => {\r\n        newDb = new PouchDB(databasePath+newDbName);\r\n        return res;\r\n      })\r\n      .then((res) => {\r\n        return newDb.put({\r\n          _id: dbDefaultSettings._id,\r\n          name: newDbName,\r\n          wargameTitle: `${res.wargameTitle}-${uniqId}`,\r\n          tabs: res.tabs,\r\n        })\r\n          .then(() => {\r\n            return res;\r\n          })\r\n      })\r\n      .then(() => {\r\n        wargameDbStore.unshift({name: newDbName, db: newDb});\r\n        return getAllWargames();\r\n      })\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n        console.log(err);\r\n      })\r\n  });\r\n};\r\n\r\nexport const getWargame = (gamePath) => {\r\n\r\n  let name = getNameFromPath(gamePath);\r\n\r\n  let game = wargameDbStore.find((wargame) => name === wargame.name);\r\n\r\n  console.log(game);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    game.db.get(dbDefaultSettings._id)\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      })\r\n  });\r\n};\r\n\r\nexport const postNewMessage = (dbName, details, message) => {\r\n\r\n  let db = wargameDbStore.find((db) => db.name === dbName).db;\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    db.put({\r\n      _id: new Date().toISOString(),\r\n      details,\r\n      message,\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  });\r\n};\r\n\r\nexport const getAllMessages = (dbName) => {\r\n\r\n  let db = wargameDbStore.find((db) => db.name === dbName).db;\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    db.allDocs({include_docs: true, descending: true})\r\n      .then((res) => {\r\n        resolve(res.rows.map((a) => a.doc));\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport var getAllWargames = function () {\r\n\r\n  let promises = wargameDbStore.map((game) => {\r\n    return game.db.get(dbDefaultSettings._id)\r\n      .then(function (res) {\r\n        return {\r\n          name: game.db.name,\r\n          title: res.wargameTitle\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  });\r\n  return Promise.all(promises);\r\n};\r\n\r\nvar updateLocalDoc = function(dbName, tabs, title) {\r\n\r\n  console.log(dbName);\r\n\r\n  var db = wargameDbStore.find((db) => db.name === dbName).db;\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    db.get(dbDefaultSettings._id)\r\n      .then((res) => {\r\n        db.put({\r\n          _id: dbDefaultSettings._id,\r\n          _rev: res._rev,\r\n          name: dbName,\r\n          wargameTitle: title,\r\n          tabs: tabs,\r\n        })\r\n          .then(() => {\r\n            resolve(db.get(dbDefaultSettings._id));\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          })\r\n      });\r\n  });\r\n};\r\n\r\nvar getNameFromPath = function (dbPath) {\r\n  let path = new URL(dbPath).pathname;\r\n  let index = path.lastIndexOf('/');\r\n  return path.substring(index + 1);\r\n};\r\n","import ActionConstant from '../ActionConstants.js';\r\n\r\nexport const showNotification = (payload) => ({\r\n  type: ActionConstant.SHOW_NOTIFICATION,\r\n  payload: {\r\n    open: true,\r\n    message: payload,\r\n  },\r\n});\r\n\r\nexport const hideNotification = () => ({\r\n  type: ActionConstant.HIDE_NOTIFICATION,\r\n  payload: {\r\n    open: false,\r\n    message: '',\r\n  },\r\n});\r\n","import ActionConstant from '../ActionConstants';\r\nimport 'whatwg-fetch';\r\nimport _ from \"lodash\";\r\n\r\nimport * as wargamesApi from \"../../api/wargames_api\";\r\nimport { showNotification } from \"../Notification/Notification_ActionCreators\";\r\n\r\nexport const setCurrentTab = (tab) => ({\r\n  type: ActionConstant.SET_CURRENT_GAME_SETUP_TAB,\r\n  payload: tab\r\n});\r\n\r\nexport const setGameData = (data) => ({\r\n  type: ActionConstant.SET_GAME_SETUP_DATA,\r\n  payload: data,\r\n});\r\n\r\nexport const setWargameTitle = (data) => ({\r\n  type: ActionConstant.SET_WARGAME_NAME,\r\n  payload: data,\r\n});\r\n\r\nexport const gameTitleInvalid = (data) => ({\r\n  type: ActionConstant.GAME_TITLE_INVALID,\r\n  payload: data,\r\n});\r\n\r\nexport const addNewForce = (data) => ({\r\n  type: ActionConstant.ADD_NEW_FORCE,\r\n  payload: data,\r\n});\r\n\r\nexport const setSelectedForce = (payload) => ({\r\n  type: ActionConstant.SET_SELECTED_FORCE,\r\n  payload\r\n});\r\n\r\n\r\nexport const addNewChannel = (data) => ({\r\n  type: ActionConstant.ADD_NEW_CHANNEL,\r\n  payload: data,\r\n});\r\n\r\n\r\nexport const setSelectedChannel = (payload) => ({\r\n  type: ActionConstant.SET_SELECTED_CHANNEL,\r\n  payload\r\n});\r\n\r\n\r\nexport const setForceOverview = (payload) => ({\r\n  type: ActionConstant.SET_FORCE_OVERVIEW,\r\n  payload,\r\n});\r\n\r\n\r\nconst saveAllWargameNames = (names) => ({\r\n  type: ActionConstant.ALL_WARGAME_NAMES_SAVED,\r\n  payload: names\r\n});\r\n\r\n\r\nconst setCurrentWargame = (data) => ({\r\n  type: ActionConstant.SET_CURRENT_WARGAME,\r\n  payload: data\r\n});\r\n\r\n\r\nexport const addRecipientToChannel = (data) => ({\r\n  type: ActionConstant.ADD_NEW_RECIPIENT,\r\n  payload: data,\r\n});\r\n\r\nexport const updateRecipient = (id, data) => ({\r\n  type: ActionConstant.UPDATE_RECIPIENT,\r\n  payload: { id,data }\r\n});\r\n\r\nexport const removeRecipient = (id) => ({\r\n  type: ActionConstant.REMOVE_RECIPIENT,\r\n  payload: id\r\n});\r\n\r\nconst populatingDb = (isLoading) => ({\r\n  type: ActionConstant.POPULATE_WARGAMES_DB,\r\n  isLoading\r\n});\r\n\r\n\r\nexport const populateWargameStore = () => {\r\n  return async (dispatch) => {\r\n\r\n    dispatch(populatingDb(true));\r\n\r\n    var wargameNames = await wargamesApi.populateWargame(dispatch);\r\n\r\n    dispatch(saveAllWargameNames(wargameNames));\r\n\r\n    dispatch(populatingDb(false));\r\n  }\r\n};\r\n\r\n\r\nexport const createNewWargameDB = () => {\r\n\r\n  return async (dispatch) => {\r\n\r\n    var wargame = await wargamesApi.createWargame();\r\n\r\n    let wargames = await wargamesApi.getAllWargames();\r\n\r\n    dispatch(saveAllWargameNames(wargames));\r\n\r\n    dispatch(setCurrentWargame(_.omit(wargame, ['_id', '_rev'])));\r\n  }\r\n};\r\n\r\n\r\nexport const clearWargames = () => {\r\n\r\n  return async (dispatch) => {\r\n\r\n    await wargamesApi.clearWargames();\r\n\r\n    let wargames = await wargamesApi.getAllWargames();\r\n    dispatch(saveAllWargameNames(wargames));\r\n\r\n  }\r\n};\r\n\r\n\r\nexport const editWargame = (name) => {\r\n  return async (dispatch) => {\r\n\r\n    let wargame = await wargamesApi.editWargame(name);\r\n\r\n    console.log(wargame);\r\n\r\n    dispatch(setCurrentWargame(wargame));\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const updateWargame = (dbName, data, title) => {\r\n\r\n  return async (dispatch) => {\r\n\r\n    let localDoc = await wargamesApi.updateWargame(dbName, data, title);\r\n\r\n    let wargames = await wargamesApi.getAllWargames();\r\n\r\n    dispatch(saveAllWargameNames(wargames));\r\n\r\n    dispatch(setCurrentWargame(localDoc));\r\n\r\n    dispatch(showNotification(\"wargame saved.\"));\r\n\r\n  }\r\n};\r\n\r\n\r\nexport const duplicateWargame = (dbName) => {\r\n  return async (dispatch) => {\r\n\r\n    var games = await wargamesApi.duplicateWargame(dbName);\r\n\r\n    dispatch(saveAllWargameNames(games));\r\n  }\r\n};\r\n\r\n","import React, {Component} from 'react';\r\nimport ModalWrapper from './ModalWrapper';\r\nimport \"../../scss/App.scss\";\r\nimport { connect } from 'react-redux';\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport {addNewForce, setSelectedForce} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nclass AddForceModal extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      forceName: ''\r\n    };\r\n  }\r\n\r\n  hideModal = () => {\r\n\r\n    this.setState({\r\n      forceName: '',\r\n    });\r\n\r\n    this.props.dispatch(modalAction.close());\r\n  };\r\n\r\n\r\n  setNewForceName = (e) => {\r\n\r\n    this.setState({\r\n      forceName: e.target.value,\r\n      sameName: this.props.wargame.tabs[this.props.wargame.currentTab].data.forces[e.target.value]\r\n    });\r\n  };\r\n\r\n  addForce = () => {\r\n    this.props.dispatch(addNewForce(this.state.forceName));\r\n    this.props.dispatch(setSelectedForce(this.state.forceName));\r\n  };\r\n\r\n  render() {\r\n\r\n    if (!this.props.currentModal.open) return false;\r\n\r\n    var disable = this.state.forceName.length < 1 || this.state.sameName;\r\n\r\n    return (\r\n      <ModalWrapper>\r\n        <div className=\"display-text-wrapper\">\r\n          <h3>Create force</h3>\r\n          {this.state.sameName ? <p className=\"notification\">Already exists</p> : false}\r\n          <input autoFocus className=\"modal-input\" type=\"text\" onChange={this.setNewForceName} />\r\n          <div className=\"buttons\">\r\n            <button disabled={disable} name=\"add\" className=\"btn btn-action btn-action--primary\" onClick={this.addForce}>Add</button>\r\n            <button name=\"cancel\" className=\"btn btn-action btn-action--secondary\" onClick={this.hideModal}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </ModalWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame, currentModal }) => ({\r\n  wargame,\r\n  currentModal\r\n});\r\n\r\nexport default connect(mapStateToProps)(AddForceModal);\r\n","import uniqid from \"uniqid\";\r\n\r\nimport PouchDB from \"pouchdb\";\r\nimport {  databasePath,\r\n          MSG_STORE} from \"./consts\";\r\n\r\n\r\nvar db = new PouchDB(databasePath+MSG_STORE);\r\n\r\n\r\nexport const addMessage = (messageDetail, schema) => {\r\n  return new Promise((resolve, reject) => {\r\n    (async() => {\r\n\r\n      const allMessages = await getAllMessagesFromDb();\r\n      const matchedName = allMessages.find((el) => el.details.title === messageDetail.title && el._id !== messageDetail.id);\r\n\r\n      if (matchedName) {\r\n        reject(\"Message title already used\");\r\n        return;\r\n      }\r\n\r\n      let time = new Date().toISOString();\r\n\r\n      let message = {\r\n        _id: time,\r\n        lastUpdated: time,\r\n        details: messageDetail,\r\n        schema: schema,\r\n        completed: false\r\n      };\r\n\r\n      return db.put(message)\r\n        .then(function (result) {\r\n          resolve(result);\r\n        })\r\n        .catch(function (err) {\r\n          console.log(err);\r\n          reject(false);\r\n        })\r\n\r\n    })();\r\n  });\r\n};\r\n\r\nexport const duplicateMessageInDb = (id) => {\r\n\r\n  let time = new Date().toISOString();\r\n\r\n  return new Promise((resolve, reject) => {\r\n    db.get(id)\r\n      .then(function (doc) {\r\n\r\n        var updatedMessage = doc.details;\r\n\r\n        updatedMessage.title = `${updatedMessage.title} Copy-${uniqid.time()}`;\r\n\r\n        return db.put({\r\n          _id: time,\r\n          lastUpdated: time,\r\n          details: updatedMessage,\r\n          schema: doc.schema\r\n        });\r\n      })\r\n      .then(function () {\r\n        resolve(true);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        reject(false);\r\n      })\r\n  });\r\n};\r\n\r\nexport const getAllMessagesFromDb = () => {\r\n  return new Promise((resolve, reject) => {\r\n    return db.changes({\r\n      since: 0,\r\n      include_docs: true,\r\n      descending: true,\r\n    })\r\n      .then(function (changes) {\r\n\r\n        let results = changes.results.map((a) => a.doc);\r\n        results = results.filter((a) => !a.hasOwnProperty('_deleted') && a.hasOwnProperty('details'));\r\n\r\n        resolve(results);\r\n      })\r\n      .catch(function (err) {\r\n        // handle errors\r\n        reject(err);\r\n        console.log(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const updateMessageInDb = (id, message) => {\r\n  return new Promise((resolve, reject) => {\r\n    (async() => {\r\n\r\n      const allMessages = await getAllMessagesFromDb();\r\n      const matchedName = allMessages.find((el) => el.details.title === message.title && el._id !== id);\r\n\r\n      if (matchedName) {\r\n        reject(\"Message title already used\");\r\n        return;\r\n      }\r\n\r\n      db.get(id)\r\n        .then(function (doc) {\r\n          return db.put({\r\n            _id: id,\r\n            lastUpdated: new Date().toISOString(),\r\n            _rev: doc._rev,\r\n            details: message,\r\n            schema: doc.schema\r\n          });\r\n        })\r\n        .then(function (result) {\r\n          resolve(result);\r\n        })\r\n        .catch(function (err) {\r\n          console.log(err);\r\n          reject(false);\r\n        });\r\n\r\n    })();\r\n  });\r\n};\r\n\r\nexport const getMessage = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    db.get(id, {include_docs: true}, function(err, doc) {\r\n      if (err) reject('something went wrong');\r\n      resolve(doc);\r\n    });\r\n  });\r\n};\r\n\r\nexport const deleteMessageFromDb = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    db.get(id)\r\n      .then(function (doc) {\r\n        return db.remove(doc);\r\n      })\r\n      .then(function (result) {\r\n        resolve(result);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        reject(false);\r\n      })\r\n  });\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\n\r\nexport const setCurrentViewFromURI = (path) => ({\r\n  type: ActionConstant.SET_CURRENT_VIEW_FROM_URI,\r\n  payload: path\r\n});","import ActionConstant from '../ActionConstants';\r\nimport 'whatwg-fetch';\r\nimport check from 'check-types';\r\n\r\nimport * as messagesApi from \"../../api/messages_api\";\r\n\r\nimport { showNotification } from \"../Notification/Notification_ActionCreators\";\r\nimport {setCurrentViewFromURI} from \"../setCurrentViewFromURI/setCurrentViewURI_ActionCreators\";\r\n\r\nconst DBMessageSaveStatus = (status) => ({\r\n  type: ActionConstant.DB_MESSAGE_STATUS,\r\n  payload: status\r\n});\r\n\r\nconst DBSaveMessageArray = (messages) => ({\r\n  type: ActionConstant.DB_MESSAGE_SAVED,\r\n  payload: messages\r\n});\r\n\r\nconst DBSaveMessagePreview = (message) => ({\r\n  type: ActionConstant.DB_RETURNED_MESSAGE,\r\n  payload: message\r\n});\r\n\r\nconst loadingDBMessageCreate = (isLoading) => ({\r\n  type: ActionConstant.DB_MESSAGE_CREATION_LOADING,\r\n  isLoading\r\n});\r\n\r\nconst loadingDBMessageGet = (isLoading) => ({\r\n  type: ActionConstant.DB_MESSAGES_GET,\r\n  isLoading\r\n});\r\n\r\nexport const resetMessagePreview = () => ({\r\n  type: ActionConstant.RESET_MESSAGE_PREVIEW,\r\n});\r\n\r\n\r\nexport const createMessage = (message, schema) => {\r\n\r\n  if (!check.object(message)) throw Error(`createMessageType() requires object with message, from & to NOT. ${message}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    try {\r\n      var result = await messagesApi.addMessage(message, schema);\r\n\r\n      if (result.err) {\r\n        dispatch(showNotification(result.err));\r\n      }\r\n\r\n      if (result.ok) {\r\n        dispatch(DBMessageSaveStatus(result));\r\n        let messages = await messagesApi.getAllMessagesFromDb();\r\n        dispatch(DBSaveMessageArray(messages));\r\n        dispatch(loadingDBMessageCreate(false));\r\n        dispatch(setCurrentViewFromURI(\"/client/umpireMenu/library\"));\r\n      }\r\n    } catch(e) {\r\n      dispatch(loadingDBMessageCreate(false));\r\n      alert(e);\r\n    }\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const duplicateMessage = (messageId) => {\r\n\r\n  if (!check.string(messageId)) throw Error(`duplicateMessage() requires a string Not. ${messageId}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    var result = await messagesApi.duplicateMessageInDb(messageId);\r\n\r\n    if (result) {\r\n      dispatch(DBMessageSaveStatus(result));\r\n      let messages = await messagesApi.getAllMessagesFromDb();\r\n      dispatch(DBSaveMessageArray(messages));\r\n    }\r\n    dispatch(loadingDBMessageCreate(false));\r\n  }\r\n};\r\n\r\n\r\nexport const updateMessage = (message, id) => {\r\n\r\n  if (!check.object(message)) throw Error(`updateMessage() requires object with message, from & to NOT. ${message}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    try {\r\n      const result = await messagesApi.updateMessageInDb(id, message);\r\n\r\n      if (result.err) {\r\n        dispatch(showNotification(result.err));\r\n      }\r\n\r\n      if (result.ok) {\r\n        dispatch(DBMessageSaveStatus(result));\r\n\r\n        let responses = await Promise.all([messagesApi.getAllMessagesFromDb(), messagesApi.getMessage(result.id)]);\r\n        let [messages, message] = [...responses];\r\n\r\n        dispatch(DBSaveMessagePreview(message));\r\n        dispatch(DBSaveMessageArray(messages));\r\n        dispatch(loadingDBMessageCreate(false));\r\n        dispatch(setCurrentViewFromURI(\"/client/umpireMenu/library\"));\r\n\r\n      }\r\n    } catch (e) {\r\n      // CREATE ERROR WARNING MESSAGE\r\n      dispatch(loadingDBMessageCreate(false));\r\n      alert(e);\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport const deleteMessage = (messageId) => {\r\n\r\n  if (!check.string(messageId)) throw Error(`duplicateMessage() requires a string Not. ${messageId}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    var result = await messagesApi.deleteMessageFromDb(messageId);\r\n\r\n    if (result) {\r\n      let messages = await messagesApi.getAllMessagesFromDb();\r\n      dispatch(DBSaveMessageArray(messages));\r\n      dispatch(resetMessagePreview());\r\n    } else {\r\n      // error action\r\n    }\r\n\r\n    dispatch(loadingDBMessageCreate(false));\r\n  }\r\n};\r\n\r\n\r\nexport const getSingleMessage = (id) => {\r\n\r\n  if (!check.string(id)) throw Error(`duplicateMessage() requires a string id..`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageGet(true));\r\n\r\n    let result = await messagesApi.getMessage(id);\r\n\r\n    dispatch(DBSaveMessagePreview(result));\r\n    dispatch(loadingDBMessageGet(false));\r\n  }\r\n};\r\n\r\nexport const getAllMessages = () => {\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageGet(true));\r\n\r\n    let result = await messagesApi.getAllMessagesFromDb();\r\n\r\n    dispatch(DBSaveMessageArray(result));\r\n    dispatch(loadingDBMessageGet(false));\r\n  }\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\nimport 'whatwg-fetch';\r\nimport check from 'check-types';\r\n\r\nimport * as messageTypesApi from \"../../api/messageTypes_api\";\r\n\r\nimport {setCurrentViewFromURI} from \"../setCurrentViewFromURI/setCurrentViewURI_ActionCreators\";\r\nimport {showNotification} from \"../Notification/Notification_ActionCreators\";\r\n\r\nconst DBMessageSaveStatus = (status) => ({\r\n  type: ActionConstant.DB_MESSAGE_STATUS,\r\n  payload: status\r\n});\r\n\r\nconst DBSaveMessageArray = (messages) => ({\r\n  type: ActionConstant.DB_MESSAGE_TYPES_SAVED,\r\n  payload: messages\r\n});\r\n\r\nconst loadingDBMessageCreate = (isLoading) => ({\r\n  type: ActionConstant.DB_MESSAGE_CREATION_LOADING,\r\n  isLoading\r\n});\r\n\r\nconst loadingDBMessageGet = (isLoading) => ({\r\n  type: ActionConstant.DB_MESSAGE_TYPES_GET,\r\n  isLoading\r\n});\r\n\r\nconst populatingDb = (isLoading) => ({\r\n  type: ActionConstant.POPULATE_MESSAGE_TYPES_DB,\r\n  isLoading\r\n});\r\n\r\n\r\nexport const populateMessageTypesDb = () => {\r\n\r\n  return async (dispatch) => {\r\n    dispatch(populatingDb(true));\r\n\r\n    await messageTypesApi.populateDb();\r\n\r\n    dispatch(populatingDb(false));\r\n  }\r\n};\r\n\r\n\r\nexport const createMessageType = (schema) => {\r\n\r\n  if (!check.object(schema)) throw Error(`createMessageType() requires schema object & NOT. ${schema}`);\r\n\r\n  return async (dispatch) => {\r\n\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    try {\r\n\r\n      var result = await messageTypesApi.postNewMessage(schema);\r\n\r\n      if (result.err) {\r\n        dispatch(showNotification(result.err));\r\n        dispatch(loadingDBMessageCreate(false));\r\n      }\r\n\r\n      if (result.ok) {\r\n        dispatch(DBMessageSaveStatus(result));\r\n        let messages = await messageTypesApi.getAllMessagesFromDb();\r\n        dispatch(DBSaveMessageArray(messages));\r\n\r\n        dispatch(loadingDBMessageCreate(false));\r\n        dispatch(setCurrentViewFromURI(\"/client/umpireMenu/templates\"));\r\n      }\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport const duplicateMessageType = (id) => {\r\n\r\n  if (!check.string(id)) throw Error(`duplicateTemplate() requires a string Not. ${id}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    var result = await messageTypesApi.duplicateMessageInDb(id);\r\n\r\n    if (result) {\r\n      dispatch(DBMessageSaveStatus(true));\r\n      let messages = await messageTypesApi.getAllMessagesFromDb();\r\n      dispatch(DBSaveMessageArray(messages));\r\n    }\r\n    dispatch(loadingDBMessageCreate(false));\r\n  }\r\n};\r\n\r\nexport const updateMessageType = (schema, id) => {\r\n\r\n  if (!check.object(schema)) throw Error(`updateMessageType() requires schema & not ${schema}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    try {\r\n      const result = await messageTypesApi.updateMessageInDb(schema, id);\r\n\r\n      if (result.err) {\r\n        dispatch(showNotification(result.err));\r\n        dispatch(loadingDBMessageCreate(false));\r\n      }\r\n\r\n      if (result.ok) {\r\n        dispatch(DBMessageSaveStatus(result.ok));\r\n\r\n        let allMessages = await messageTypesApi.getAllMessagesFromDb();\r\n\r\n        dispatch(DBSaveMessageArray(allMessages));\r\n        dispatch(loadingDBMessageCreate(false));\r\n        dispatch(setCurrentViewFromURI(\"/client/umpireMenu/templates\"));\r\n\r\n      }\r\n    } catch (e) {\r\n      // CREATE ERROR WARNING MESSAGE\r\n      dispatch(loadingDBMessageCreate(false));\r\n      alert(e);\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport const deleteMessageType = (messageId) => {\r\n\r\n  if (!check.string(messageId)) throw Error(`deleteMessage() requires a string of id not. ${messageId}`);\r\n\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageCreate(true));\r\n\r\n    var result = await messageTypesApi.deleteMessageFromDb(messageId);\r\n\r\n    if (result) {\r\n      let messages = await messageTypesApi.getAllMessagesFromDb();\r\n      dispatch(DBSaveMessageArray(messages));\r\n    } else {\r\n      // error action\r\n    }\r\n\r\n    dispatch(loadingDBMessageCreate(false));\r\n  }\r\n};\r\n\r\n\r\nexport const getAllMessageTypes = () => {\r\n  return async (dispatch) => {\r\n    dispatch(loadingDBMessageGet(true));\r\n\r\n    let result = await messageTypesApi.getAllMessagesFromDb();\r\n\r\n    dispatch(DBSaveMessageArray(result));\r\n    dispatch(loadingDBMessageGet(false));\r\n  }\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\n\r\nexport const setSelectedSchema = (schemaId) => ({\r\n  type: ActionConstant.SET_SELECTED_SCHEMA,\r\n  payload: schemaId\r\n});\r\n\r\n\r\nexport const setPreviewSchema = (schema) => ({\r\n  type: ActionConstant.SET_PREVIEW_SCHEMA,\r\n  payload: schema\r\n});","import React, {Component} from 'react';\r\nimport ModalWrapper from './ModalWrapper';\r\nimport \"../../scss/App.scss\";\r\nimport { connect } from 'react-redux';\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport { deleteMessage } from \"../../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\nimport { deleteMessageType } from \"../../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\nimport {setPreviewSchema, setSelectedSchema} from \"../../ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators\";\r\n\r\nclass DeleteModal extends Component {\r\n\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  hideModal = () => {\r\n    this.props.dispatch(modalAction.close());\r\n  };\r\n\r\n  deleteMessage = () => {\r\n    if (this.props.currentViewURI === \"/client/umpireMenu/templates\") {\r\n      this.props.dispatch(deleteMessageType(this.props.umpireMenu.selectedSchemaID));\r\n      this.props.dispatch(setPreviewSchema(\"\"));\r\n      this.props.dispatch(setSelectedSchema(\"\"));\r\n    } else {\r\n      this.props.dispatch(deleteMessage(this.props.messages.messagePreviewId));\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    if (!this.props.currentModal.open) return false; // needed ?\r\n\r\n    return (\r\n      <ModalWrapper>\r\n        <div className=\"display-text-wrapper\">\r\n          <h3>Delete</h3>\r\n          <p>This will permanently remove the message.<br/>Are you sure?</p>\r\n          <div className=\"buttons\">\r\n            <button name=\"delete\" className=\"btn btn-action btn-action--primary\" onClick={this.deleteMessage}>Delete</button>\r\n            <button name=\"cancel\" className=\"btn btn-action btn-action--secondary\" onClick={this.hideModal}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </ModalWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ currentModal, messages, umpireMenu, currentViewURI }) => ({\r\n  currentModal,\r\n  messages,\r\n  umpireMenu,\r\n  currentViewURI\r\n});\r\n\r\nexport default connect(mapStateToProps)(DeleteModal);\r\n","import React, {Component} from 'react';\r\nimport ModalWrapper from './ModalWrapper';\r\nimport \"../../scss/App.scss\";\r\nimport { connect } from 'react-redux';\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport {\r\n  addNewChannel,\r\n  setSelectedChannel\r\n} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nclass AddChannelModal extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      channelName: ''\r\n    };\r\n  }\r\n\r\n  hideModal = () => {\r\n\r\n    this.setState({\r\n      channelName: '',\r\n    });\r\n\r\n    this.props.dispatch(modalAction.close());\r\n  };\r\n\r\n\r\n  setChannelName = (e) => {\r\n\r\n    this.setState({\r\n      channelName: e.target.value,\r\n      sameName: this.props.wargame.tabs[this.props.wargame.currentTab].data.channels[e.target.value]\r\n    });\r\n  };\r\n\r\n  addChannel = () => {\r\n    this.props.dispatch(addNewChannel(this.state.channelName));\r\n    this.props.dispatch(setSelectedChannel(this.state.channelName));\r\n  };\r\n\r\n  render() {\r\n\r\n    if (!this.props.currentModal.open) return false;\r\n\r\n    var disable = this.state.channelName.length < 1 || this.state.sameName;\r\n\r\n    return (\r\n      <ModalWrapper>\r\n        <div className=\"display-text-wrapper\">\r\n          <h3>Create channel</h3>\r\n          {this.state.sameName ? <p className=\"notification\">Already exists</p> : false}\r\n          <input autoFocus className=\"modal-input\" type=\"text\" onChange={this.setChannelName} />\r\n          <div className=\"buttons\">\r\n            <button disabled={disable} name=\"add\" className=\"btn btn-action btn-action--primary\" onClick={this.addChannel}>Add</button>\r\n            <button name=\"cancel\" className=\"btn btn-action btn-action--secondary\" onClick={this.hideModal}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </ModalWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame, currentModal }) => ({\r\n  wargame,\r\n  currentModal\r\n});\r\n\r\nexport default connect(mapStateToProps)(AddChannelModal);\r\n","import React, {Component} from 'react';\r\nimport \"../../scss/App.scss\";\r\nimport { connect } from 'react-redux';\r\nimport AddForceModal from \"./AddForceModal\";\r\nimport DeleteModal from './DeleteModal';\r\nimport AddChannelModal from \"./AddChannelModal\";\r\n\r\nclass ModalSwitch extends Component {\r\n\r\n  render() {\r\n\r\n    var modal;\r\n\r\n    switch (this.props.currentModal.modal) {\r\n\r\n      case \"addForce\":\r\n        modal = <AddForceModal />;\r\n        break;\r\n\r\n      case \"delete\":\r\n        modal = <DeleteModal />;\r\n        break;\r\n\r\n      case \"addChannel\":\r\n        modal = <AddChannelModal />;\r\n        break;\r\n\r\n      default:\r\n        modal = false;\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {modal}\r\n      </>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = ({ currentModal }) => ({\r\n  currentModal,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ModalSwitch);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\n\r\nimport { hideNotification } from \"../ActionsAndReducers/Notification/Notification_ActionCreators\";\r\n\r\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nclass Notification extends Component {\r\n\r\n  onClickHandler = (e) => {\r\n\r\n    this.props.dispatch(hideNotification());\r\n\r\n  };\r\n\r\n  render() {\r\n\r\n\r\n    if (!this.props.notification.open) return false;\r\n\r\n    return (\r\n        <div id=\"notification\">\r\n          {this.props.notification.message}<FontAwesomeIcon icon={faTimes} onClick={this.onClickHandler} />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ notification }) => ({\r\n  notification,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Notification);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport { setCurrentViewFromURI } from \"../ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_ActionCreators\"\r\n\r\nimport '../scss/App.scss';\r\n\r\nclass Link extends Component {\r\n\r\n  onClickHandler = (e) => {\r\n\r\n    if (this.props.onClickHandler) this.props.onClickHandler();\r\n\r\n    const aNewTab = e.metaKey || e.ctrlKey;\r\n    const anExternalLink = this.props.href.startsWith('http');\r\n\r\n    if (!aNewTab && !anExternalLink) {\r\n      e.preventDefault();\r\n      this.props.dispatch(setCurrentViewFromURI(this.props.href));\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <span href={this.props.href}\r\n            onClick={!this.props.disabled ? this.onClickHandler : () => false}\r\n            id={this.props.id ? this.props.id : null}\r\n            className={this.props.class ? this.props.class : null}>\r\n\r\n        {this.props.children}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default connect()(Link);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Link from \"../Components/Link\";\r\nimport classNames from \"classnames\";\r\n\r\nimport '../scss/App.scss';\r\nimport {populateWargameStore} from \"../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\nimport {populateMessageTypesDb} from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n\r\nclass UmpireMenu extends Component {\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(populateMessageTypesDb());\r\n    this.props.dispatch(populateWargameStore());\r\n  }\r\n\r\n  render() {\r\n\r\n    let activeGames = this.props.wargame.wargameList.length > 0;\r\n\r\n    let loading = Object.keys(this.props.dbLoading).every((k) => this.props.dbLoading[k] );\r\n\r\n    // check connection\r\n\r\n    if (loading) {\r\n      return (\r\n        <div id=\"loading\">\r\n          <div>\r\n            <div id=\"loader\"></div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div id=\"umpire\" className=\"flex-content-wrapper\">\r\n        <div className=\"flex-content flex-content--fill\">\r\n          <Link href=\"/client/umpireMenu\" class=\"link link--secondary link--large\">Umpire Menu</Link>\r\n          <Link href=\"/client/playerUi\" disabled={!activeGames} class={classNames(\"link\", \"link--secondary\", \"link--large\", {\"link--disabled\": !activeGames})}>Player UI</Link>\r\n          { !activeGames ? <p>At least one wargame needed to access player ui</p> : false }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({wargame, dbLoading}) => ({\r\n  wargame,\r\n  dbLoading,\r\n});\r\n\r\nexport default connect(mapStateToProps)(UmpireMenu);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\nimport _ from \"lodash\";\r\n\r\nimport {\r\n  editWargame,\r\n  duplicateWargame,\r\n} from \"../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nimport {setCurrentViewFromURI} from \"../ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_ActionCreators\";\r\n\r\nimport {faClone, faPencilAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nclass WargameSearchList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageList: this.props.listData,\r\n      searchQuery: this.props.listData,\r\n      searchInput: \"\",\r\n    };\r\n  }\r\n\r\n\r\n  componentWillUpdate(nextProps, nextState, nextContext) {\r\n\r\n    let sameMessagesQuantity = _.difference(nextProps.listData, this.state.messageList).length;\r\n\r\n    if (\r\n      nextProps.listData.length !== this.state.messageList.length ||\r\n      (sameMessagesQuantity !== 0 && this.state.searchInput.length === 0)\r\n    ) {\r\n      this.setState({\r\n        messageList: nextProps.listData\r\n      });\r\n    }\r\n\r\n    if (\r\n      this.state.searchInput.length > 0 &&\r\n      sameMessagesQuantity !== 0\r\n    ) {\r\n      this.filterMessages();\r\n    }\r\n  }\r\n\r\n  setSelectedWargame(name) {\r\n    this.props.dispatch(editWargame(name));\r\n    this.props.dispatch(setCurrentViewFromURI('/client/gameSetup'));\r\n  }\r\n\r\n  duplicateWargame(name) {\r\n    this.props.dispatch(duplicateWargame(name));\r\n  }\r\n\r\n  filterMessages = (input) => {\r\n\r\n    let value = input ? input.target.value : this.state.searchInput;\r\n\r\n    let searchQuery = this.props.listData.filter(function(db) {\r\n      return db.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n    });\r\n\r\n    this.setState({\r\n      searchQuery,\r\n      searchInput: input ? value : this.state.searchInput\r\n    });\r\n  };\r\n\r\n  displayControls = (activeTitle) => {\r\n    this.setState({\r\n      activeTitle,\r\n    });\r\n  };\r\n\r\n  hideControls = () => {\r\n    this.setState({\r\n      activeTitle: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    var that = this;\r\n\r\n    var list = this.state.searchInput ? this.state.searchQuery : this.state.messageList;\r\n\r\n    return (\r\n      <div className=\"searchlist\">\r\n        <input type=\"text\" className=\"searchlist-input\" key=\"search-templates\" placeholder=\"Search games\" onChange={ this.filterMessages } value={this.state.searchInput} />\r\n        <div className=\"searchlist-list\">\r\n          { list.map(function(db) {\r\n            // let active\r\n            return (\r\n              <span className=\"searchlist-title\" key={db.title} onMouseOver={that.displayControls.bind(that, db.title)} onMouseLeave={that.hideControls}>\r\n                {db.title}\r\n                {that.state.activeTitle === db.title ?\r\n                  <>\r\n                    <FontAwesomeIcon icon={faPencilAlt} onClick={that.setSelectedWargame.bind(that, db.name)} />\r\n                    <FontAwesomeIcon icon={faClone} onClick={that.duplicateWargame.bind(that, db.name)} />\r\n                  </>\r\n                  : null\r\n                }\r\n              </span>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// empty mapStateToProps is here for react-redux to wire up the dispatch function to props so firing actions is possible.\r\nconst mapStateToProps = () => ({});\r\n\r\n\r\nexport default connect(mapStateToProps)(WargameSearchList);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Link from \"../Components/Link\";\r\n\r\nimport '../scss/App.scss';\r\n// import SearchList from \"../Components/SearchList\";\r\n\r\nimport {\r\n  createNewWargameDB,\r\n  clearWargames,\r\n} from \"../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nimport WargameSearchList from \"../Components/WargameSearchList\";\r\n\r\nclass GameDesignerInterface extends Component {\r\n\r\n  createWargame = () => {\r\n    this.props.dispatch(createNewWargameDB());\r\n  };\r\n\r\n  clearWargames = () => {\r\n    this.props.dispatch(clearWargames());\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"umpire\" className=\"flex-content-wrapper\">\r\n        <div className=\"flex-content flex-content--big\">\r\n          <Link href=\"/client/umpireMenu/templates\" class=\"link link--secondary link--large\">Message Templates</Link>\r\n          <Link href=\"/client/umpireMenu/library\" class=\"link link--secondary link--large\">Message Library</Link>\r\n        </div>\r\n        <div className=\"flex-content flex-content--big\">\r\n          <h2>Games</h2>\r\n          <Link\r\n            href=\"/client/gameSetup\"\r\n            class=\"link link--noIcon\"\r\n            onClickHandler={this.createWargame}\r\n          >Create</Link>\r\n          <Link\r\n            href=\"/client/umpireMenu\"\r\n            class=\"link link--noIcon link--secondary\"\r\n            onClickHandler={this.clearWargames}\r\n          >Clear wargames</Link>\r\n          <WargameSearchList key=\"searchlist\"\r\n                             listData={this.props.wargame.wargameList}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// empty mapStateToProps is here for react-redux to wire up the dispatch function to props so firing actions is possible.\r\nconst mapStateToProps = ({wargame}) => ({\r\n  wargame\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(GameDesignerInterface);\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  createMessage,\r\n} from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport JSONEditor from '@json-editor/json-editor';\r\n// necessary import for date\r\nimport flatpickr from \"flatpickr\";\r\n\r\nimport '../scss/App.scss';\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSave} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nclass JsonCreator extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.editor = null;\r\n    this.editorPreviewRef = React.createRef();\r\n\r\n    this.state = {\r\n      selectedSchema: ''\r\n    };\r\n  }\r\n\r\n\r\n  componentWillUpdate(nextProps, nextState, nextContext) {\r\n\r\n    if (this.editor && nextProps.umpireMenu.selectedSchemaID !== this.props.umpireMenu.selectedSchemaID) {\r\n      this.editor.destroy();\r\n      this.editor = null;\r\n    }\r\n\r\n    if (\r\n      nextProps.umpireMenu.selectedSchemaID.length > 0 &&\r\n      nextProps.messageTypes &&\r\n      nextProps.messageTypes.messages.length > 0\r\n    ) {\r\n\r\n      if (this.editor) return;\r\n\r\n      this.editor = new JSONEditor(this.editorPreviewRef.current, {\r\n        schema: nextProps.messageTypes.messages.find((mes) => mes._id === nextProps.umpireMenu.selectedSchemaID).details,\r\n        theme: 'bootstrap4'\r\n      });\r\n    }\r\n\r\n    if (\r\n      nextProps.messages.messagePreviewId.length > 0 &&\r\n      nextProps.messageTypes.messages.length > 0 &&\r\n      !nextProps.disabled\r\n    ) {\r\n\r\n      const data = nextProps.messages.messages.find(function(mes) {\r\n        return mes._id.toLowerCase().indexOf(nextProps.messages.messagePreviewId.toLowerCase()) > -1;\r\n      });\r\n      this.editor.setValue(data.details);\r\n    }\r\n\r\n    if (this.props.disabled && this.editor) {\r\n      this.editor.disable();\r\n    }\r\n  }\r\n\r\n\r\n  saveMessage = () => {\r\n    let schema = this.props.messageTypes.messages.find((mes) => mes._id === this.props.umpireMenu.selectedSchemaID).details;\r\n\r\n    this.props.dispatch(createMessage(this.editor.getValue(), {...schema, _id: this.props.umpireMenu.selectedSchemaID}));\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"button-wrap\">\r\n          {!this.props.disabled ? <span onClick={this.saveMessage} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span> : null }\r\n        </div>\r\n          <div id=\"preview-editor\" ref={this.editorPreviewRef}></div>\r\n        <div className=\"button-wrap\">\r\n          {!this.props.disabled ? <span onClick={this.saveMessage} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span> : null }\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, selectedSchema, umpireMenu }) => ({\r\n  messages,\r\n  messageTypes,\r\n  selectedSchema,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(JsonCreator);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\nimport check from \"check-types\";\r\nimport moment from \"moment\";\r\n\r\nclass MessagePreview extends Component {\r\n\r\n  createObjItem(pair) {\r\n    const that = this;\r\n    return (\r\n      <>\r\n        {/*<h3>{pair[0]}</h3>*/}\r\n        <span key={`objItem--${pair[0]}-${pair[1]}`} className=\"group-section\">{ that.deconstructObj(pair[1]) }</span>\r\n      </>\r\n    )\r\n  }\r\n\r\n  createBoolItem(pair) {\r\n    return <span key={`boolItem--${pair[0]}-${pair[1]}`}>{pair[1] ? pair[0] : false}</span>\r\n  }\r\n\r\n  createTimeItem(pair) {\r\n\r\n    return (\r\n      <>\r\n        <h3>{pair[0]}</h3>\r\n        <span key={`dateTime-${pair[1]}`}>{moment(pair[1]).format('Do MMMM YYYY, HH:mm')}</span>\r\n      </>\r\n    )\r\n  }\r\n\r\n  createStrItem(pair, withoutName) {\r\n    return <span key={`strItem-${pair[0]}-${pair[1]}`}><b>{pair[0]}: </b>{pair[1]}</span>\r\n  }\r\n\r\n  deconstructArr(pair) {\r\n    const that = this;\r\n    return (\r\n      <>\r\n        <h3>{pair[0]}</h3>\r\n        {pair[1].map((item) => {\r\n          // CHECK NAME PROP ON EVERY OBJ\r\n          return (\r\n              <span key={`section-${item.name}`}>{ that.deconstructObj(item) }</span>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\n  deconstructObj(obj) {\r\n\r\n    const that = this;\r\n    const keyPropPairs = Object.entries(obj);\r\n\r\n    return keyPropPairs.map((pair, i) => {\r\n\r\n      if (check.object(pair[1])) return that.createObjItem(pair);\r\n      if (check.array.of.object(pair[1])) return that.deconstructArr(pair);\r\n      if (check.boolean(pair[1])) return that.createBoolItem(pair);\r\n\r\n      if (moment(pair[1], moment.ISO_8601, true).isValid()) return that.createTimeItem(pair);\r\n\r\n      return that.createStrItem(pair);\r\n\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    if (!this.props.detail) return false;\r\n\r\n    const that = this;\r\n    const keyPropPairs = Object.entries(this.props.detail);\r\n\r\n\r\n    return keyPropPairs.map((pair, i) => {\r\n\r\n      if (i===0) return (\r\n        <>\r\n          <h2 key={`title-${pair[1]}`}>{pair[1]}</h2>\r\n          { this.props.from ? <span key={'from'}>From: {this.props.from}</span> : false }\r\n        </>\r\n      );\r\n\r\n      if (check.object(pair[1])) return that.createObjItem(pair);\r\n      if (check.array.of.object(pair[1])) return that.deconstructArr(pair);\r\n      if (check.boolean(pair[1])) return that.createBoolItem(pair);\r\n      if (moment(pair[1], moment.ISO_8601, true).isValid()) return that.createTimeItem(pair);\r\n\r\n      return (\r\n        <>\r\n          <h3>{pair[0]}</h3>\r\n          <span key={`${pair[0]}-${pair[1]}`}>{pair[1]}</span>\r\n        </>\r\n      )\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport default connect()(MessagePreview);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\n\r\nimport moment from \"moment\";\r\nimport classNames from \"classnames\";\r\nimport {PropTypes} from \"prop-types\";\r\n\r\nclass SearchList extends Component {\r\n\r\n  setSelected = (item) => {\r\n    this.props.setSelected(item);\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    var that = this;\r\n\r\n    return (\r\n      <div className=\"searchlist\">\r\n        <input type=\"text\" className=\"searchlist-input\" key=\"search-templates\" placeholder={this.props.placeholder} onChange={ this.props.filter } value={this.props.searchQuery} />\r\n        <div className=\"searchlist-list\">\r\n          { this.props.listData.map(function(item) {\r\n\r\n            // onClick handlers should not contain instantiating () to pass a specific value, .bind can be used here this is a simpler\r\n            // ES5 way to pass properties to click handlers from arrays, another option is to build a sub-component but I don't like\r\n            // how the data moves back and forth, it breaks Reacts initial idea of 1 way data flow.\r\n\r\n            let active = item._id === that.props.selected ? 'active' : null;\r\n\r\n            let title = item.details.title;\r\n            let date = moment(item.lastUpdated).format('DD/MM/YY');\r\n            return <span className={classNames({\"searchlist-title\": true, active})} href=\"#\" onClick={that.setSelected.bind(that, item)} key={item._id}>{title} - {date}</span>\r\n          })\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// empty mapStateToProps is here for react-redux to wire up the dispatch function to props so firing actions is possible.\r\nconst mapStateToProps = ({ currentViewURI, umpireMenu }) => ({\r\n  currentViewURI,\r\n  umpireMenu\r\n});\r\n\r\nSearchList.propTypes = {\r\n  listData: PropTypes.array.isRequired,\r\n  filter: PropTypes.func.isRequired,\r\n  selected: PropTypes.string.isRequired,\r\n  setSelected: PropTypes.func.isRequired,\r\n  searchQuery: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nexport default connect(mapStateToProps)(SearchList);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Link from \"../Components/Link\";\r\n\r\nimport {\r\n  getAllMessageTypes,\r\n  duplicateMessageType,\r\n} from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n\r\nimport {\r\n  getAllMessages,\r\n  duplicateMessage, getSingleMessage\r\n} from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport { modalAction } from \"../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\n\r\n\r\nimport JsonCreator from \"../Components/JsonCreator\";\r\nimport MessagePreview from \"../Components/MessagePreview\";\r\nimport '../scss/App.scss';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPencilAlt, faClone, faTrash, faArrowLeft,faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport SearchList from \"../Components/SearchList\";\r\nimport {setSelectedSchema} from \"../ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators\";\r\n\r\nclass UmpireMenu extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let creatorType = this.props.currentViewURI.split('/')[3];\r\n\r\n    this.state = {\r\n      searchQuery: '',\r\n      creatorType: creatorType,\r\n      messageList: creatorType === 'templates' ? this.props.messageTypes.messages : this.props.messages.messages,\r\n    };\r\n\r\n    this.buildMessageBoard();\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(setSelectedSchema(\"\"));\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.state.searchQuery.length === 0) {\r\n      // only on page load\r\n      this.setState({\r\n        messageList: this.state.creatorType === 'templates' ? nextProps.messageTypes.messages : nextProps.messages.messages,\r\n      });\r\n    }\r\n\r\n    if (nextProps.messages.messages.length !== this.props.messages.messages.length) setTimeout(this.filterMessages, 1); // setTimeout to wait one tick to allow messageList to update\r\n  }\r\n\r\n\r\n  buildMessageBoard() {\r\n\r\n    switch (this.state.creatorType) {\r\n\r\n      case 'templates':\r\n        // get template data action\r\n        this.props.dispatch(getAllMessageTypes());\r\n        break;\r\n\r\n      case 'library':\r\n        // get library data action\r\n        this.props.dispatch(getAllMessages());\r\n        break;\r\n\r\n      default:\r\n        // throw developer an error\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  setSelectedSchemaId = (item) => {\r\n\r\n    switch (this.state.creatorType) {\r\n      case 'templates':\r\n        this.props.dispatch(setSelectedSchema(item._id));\r\n        break;\r\n\r\n      case 'library':\r\n        this.props.dispatch(setSelectedSchema(item.schema._id));\r\n        this.props.dispatch(getSingleMessage(item._id));\r\n        break;\r\n\r\n      default:\r\n        console.log('error');\r\n        break;\r\n    }\r\n  };\r\n\r\n\r\n  // event listener functions from the DOM will lose scope of this to the React Class unless stated as an arrow function\r\n  // or this is bound to them within the constructor like.. this.filterMessages = this.filterMessages.bind(this);\r\n  // arrow functions are es6 syntax and preferable if babel compiler can compile them. - They have the scope of where they're\r\n  // defined unlike a normal function that has it's own scope.\r\n  filterMessages = (input) => {\r\n\r\n    let value = input ? input.target.value : this.state.searchQuery;\r\n\r\n    let newState;\r\n\r\n    switch (this.state.creatorType) {\r\n      case 'templates':\r\n        newState = this.props.messageTypes.messages.filter(function(mes) {\r\n          return mes.details.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n        });\r\n        break;\r\n\r\n      case 'library':\r\n        newState = this.props.messages.messages.filter(function(mes) {\r\n          return mes.details.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n        });\r\n        break;\r\n\r\n      default:\r\n        newState = [];\r\n        break;\r\n    }\r\n\r\n    this.setState({\r\n      messageList: newState,\r\n      searchQuery: value\r\n    });\r\n  };\r\n\r\n\r\n  createSearchListSection() {\r\n\r\n    switch (this.state.creatorType) {\r\n\r\n      case 'templates':\r\n\r\n        return [\r\n            <Link href=\"/client/messageCreator/create/template\" key=\"templates\" class=\"link\"><FontAwesomeIcon icon={faPlus} />Create new template</Link>,\r\n            <SearchList key=\"searchlist\"\r\n                        listData={this.state.messageList}\r\n                        searchQuery={this.state.searchQuery}\r\n                        filter={this.filterMessages}\r\n                        selected={this.props.umpireMenu.selectedSchemaID}\r\n                        setSelected={this.setSelectedSchemaId}\r\n                        placeholder={'Select template'}\r\n            />\r\n        ];\r\n\r\n      case 'library':\r\n\r\n        return [\r\n            <Link href=\"/client/messageCreator/create/message\" key=\"messages\" class=\"link\"><FontAwesomeIcon icon={faPlus} />Create new Message</Link>,\r\n            <SearchList key=\"searchlist\"\r\n                        listData={this.state.messageList}\r\n                        searchQuery={this.state.searchQuery}\r\n                        filter={this.filterMessages}\r\n                        selected={this.props.messages.messagePreviewId}\r\n                        setSelected={this.setSelectedSchemaId}\r\n                        placeholder={'Select template'}\r\n            />\r\n        ];\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  createMessagesActions() {\r\n    return this.props.messages.messagePreviewId.length > 0 ?\r\n      <>\r\n        <Link class=\"link link--secondary\" href={this.state.creatorType === 'templates' ? \"/messageCreator/edit/template\" : \"/messageCreator/edit/message\"}><FontAwesomeIcon icon={faPencilAlt} />Edit</Link>\r\n        <span className=\"link link--secondary\" onClick={this.duplicateMessage}><FontAwesomeIcon icon={faClone} />Duplicate</span>\r\n        <span className=\"link link--secondary\" onClick={this.deleteMessage}><FontAwesomeIcon icon={faTrash} />Delete</span>\r\n      </>\r\n      :\r\n      null;\r\n  }\r\n\r\n\r\n  createTemplatesActions() {\r\n    return this.props.umpireMenu.selectedSchemaID.length > 0 ?\r\n      <>\r\n        <Link class=\"link link--secondary\" href={this.state.creatorType === 'templates' ? \"/messageCreator/edit/template\" : \"/messageCreator/edit/message\"}><FontAwesomeIcon icon={faPencilAlt} />Edit</Link>\r\n        <span className=\"link link--secondary\" onClick={this.duplicateTemplate}><FontAwesomeIcon icon={faClone} />Duplicate</span>\r\n        <span className=\"link link--secondary\" onClick={this.deleteTemplate}><FontAwesomeIcon icon={faTrash} />Delete</span>\r\n      </>\r\n      :\r\n      null;\r\n  };\r\n\r\n\r\n  duplicateTemplate = () => {\r\n    this.props.dispatch(duplicateMessageType(this.props.umpireMenu.selectedSchemaID))\r\n  };\r\n\r\n\r\n  deleteTemplate = () => {\r\n    this.props.dispatch(modalAction.open(\"delete\"));\r\n  };\r\n\r\n\r\n  duplicateMessage = () => {\r\n    this.props.dispatch(duplicateMessage(this.props.messages.messagePreviewId));\r\n  };\r\n\r\n\r\n  deleteMessage = () => {\r\n    this.props.dispatch(modalAction.open(\"delete\"));\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message {this.state.creatorType}</h1>\r\n        <div className=\"flex-content-wrapper\">\r\n          <div id=\"selection\" className=\"flex-content\">\r\n            { this.createSearchListSection() }\r\n          </div>\r\n          <div id=\"preview\" className=\"flex-content flex-content--big\">\r\n            <p className=\"heading--sml\">Preview</p>\r\n            { this.state.creatorType === 'templates' ?\r\n              <JsonCreator id=\"preview\"\r\n                           disabled={true}\r\n                           previewForm={true}\r\n              />\r\n            :\r\n              <div className=\"message-preview\">\r\n                <MessagePreview detail={this.props.messages.messagePreview.details} />\r\n              </div>\r\n            }\r\n          </div>\r\n          <div id=\"function\" className=\"flex-content flex-content--sml\">\r\n            <p className=\"heading--sml\">Actions</p>\r\n\r\n            {this.state.creatorType === 'templates' ?\r\n              this.createTemplatesActions()\r\n            :\r\n              this.createMessagesActions()\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messageTypes, messages, currentViewURI, umpireMenu }) => ({\r\n  messageTypes,\r\n  messages,\r\n  currentViewURI,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(UmpireMenu);\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  updateMessage,\r\n} from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport JSONEditor from '@json-editor/json-editor';\r\nimport '../scss/App.scss';\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSave} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nclass JsonCreator extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.editor = null;\r\n    this.editorPreviewRef = React.createRef();\r\n\r\n    this.state = {\r\n      selectedSchema: ''\r\n    };\r\n  }\r\n\r\n\r\n  componentWillUpdate(nextProps, nextState, nextContext) {\r\n\r\n    if (this.editor && nextProps.umpireMenu.selectedSchemaID !== this.props.umpireMenu.selectedSchemaID) {\r\n      this.editor.destroy();\r\n      this.editor = null;\r\n    }\r\n\r\n    // check logic\r\n    if (\r\n      nextProps.messages.messagePreviewId.length > 0 ||\r\n      nextProps.umpireMenu.selectedSchemaID.length > 0\r\n      // nextProps.messages.messagePreviewId.length > 0 &&\r\n      // nextProps.umpireMenu.selectedSchemaID.length > 0\r\n    ) {\r\n\r\n      if (this.editor) return;\r\n\r\n      this.editor = new JSONEditor(this.editorPreviewRef.current, {\r\n        schema: nextProps.messages.messagePreview.schema,\r\n        theme: 'bootstrap4'\r\n      });\r\n    }\r\n\r\n    if (nextProps.messages.messagePreview.details) {\r\n      this.editor.setValue(nextProps.messages.messagePreview.details);\r\n    }\r\n\r\n    if (this.props.disabled && this.editor) {\r\n      this.editor.disable();\r\n    }\r\n  }\r\n\r\n\r\n  saveMessage = () => {\r\n    this.props.dispatch(updateMessage(this.editor.getValue(), this.props.messages.messagePreviewId));\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"button-wrap\">\r\n          {!this.props.disabled ? <span onClick={this.saveMessage} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span> : null }\r\n        </div>\r\n          <div id=\"preview-editor\" ref={this.editorPreviewRef}></div>\r\n        <div className=\"button-wrap\">\r\n          {!this.props.disabled ? <span onClick={this.saveMessage} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span> : null }\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, selectedSchema, umpireMenu }) => ({\r\n  messages,\r\n  messageTypes,\r\n  selectedSchema,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(JsonCreator);\r\n","import React, { Component } from 'react';\r\nimport '../scss/App.scss';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport JsonEditor from \"../Components/JsonEditor\";\r\n\r\nimport { getAllMessageTypes } from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n// import { resetMessagePreview } from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport Link from \"../Components/Link\";\r\n// import SearchList from \"../Components/SearchList\";\r\n// import {setCurrentViewFromURI} from \"../ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_ActionCreators\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faArrowLeft} from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass EditMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageToEdit: this.props.messages.messagePreviewId,\r\n      messageList: this.props.messages.messages, // set to state for filter, without filter don't set props to state to avoid bugs\r\n      searchInput: '',\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(getAllMessageTypes());\r\n  }\r\n\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.props.messages.messages.length !== nextProps.messages.messages.length) {\r\n      this.setState({\r\n        messageToEdit: nextProps.messages.messagePreviewId,\r\n        messageList:  nextProps.messages.messages\r\n      });\r\n    }\r\n  }\r\n\r\n  filterMessages = (input) => {\r\n\r\n    let value = input.target.value;\r\n\r\n    let newState = this.props.messages.messages.filter(function(mes) {\r\n      return mes.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n    });\r\n\r\n    this.setState({\r\n      messageList: newState,\r\n      searchInput: value.toLowerCase()\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message library</h1>\r\n        <div className=\"flex-content-wrapper\">\r\n          <div id=\"preview\" className=\"flex-content flex-content--solo-item\">\r\n            <JsonEditor id=\"preview\"\r\n                        disabled={ false }\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes }) => ({\r\n  messages,\r\n  messageTypes\r\n});\r\n\r\nexport default connect(mapStateToProps)(EditMessage);\r\n","import React, { Component } from 'react';\r\nimport '../scss/App.scss';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport JsonCreator from \"../Components/JsonCreator\";\r\n\r\nimport {getAllMessageTypes} from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\nimport { resetMessagePreview } from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport Link from \"../Components/Link\";\r\nimport SearchList from \"../Components/SearchList\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {setSelectedSchema} from \"../ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators\";\r\n\r\nclass EditMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageList: this.props.messageTypes.messages, // set to state for filter, without filter don't set props to state to avoid bugs\r\n      searchInput: '',\r\n    };\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(resetMessagePreview());\r\n    this.props.dispatch(getAllMessageTypes());\r\n  };\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.props.messageTypes.messages.length !== nextProps.messageTypes.messages.length) {\r\n      this.setState({\r\n        messageList: nextProps.messageTypes.messages\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  filterMessages = (input) => {\r\n\r\n    let value = input.target.value;\r\n\r\n    let newState = this.props.messageTypes.messages.filter(function(mes) {\r\n      return mes.details.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n    });\r\n\r\n    this.setState({\r\n      messageList: newState,\r\n      searchQuery: value\r\n    });\r\n  };\r\n\r\n  setSelectedSchemaId = (item) => {\r\n    this.props.dispatch(setSelectedSchema(item._id));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message library</h1>\r\n         <div className=\"flex-content-wrapper\">\r\n          <div id=\"selection\" className=\"flex-content\">\r\n            <SearchList key=\"search-templates\"\r\n                        listData={this.state.messageList}\r\n                        searchQuery={this.state.searchQuery}\r\n                        filter={this.filterMessages}\r\n                        selected={this.props.umpireMenu.selectedSchemaID}\r\n                        setSelected={this.setSelectedSchemaId}\r\n                        placeholder={'Select template'}\r\n            />\r\n          </div>\r\n          <div id=\"preview\" className=\"flex-content flex-content--big\">\r\n            <JsonCreator id=\"preview\" disabled={false} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, umpireMenu, currentViewURI }) => ({\r\n  messages,\r\n  messageTypes,\r\n  umpireMenu,\r\n  currentViewURI\r\n});\r\n\r\nexport default connect(mapStateToProps)(EditMessage);\r\n","import JSONEditor from '@json-editor/json-editor'\r\n// -------- Editor class ---------------------------------------------------\r\n\r\n// create a JSON Editor, elementId is the id in which to render the editor\r\nfunction Editor(elementId) {\r\n    this.jsonEditor = null;\r\n    this.renderZone = typeof elementId === \"string\" ? document.getElementById(elementId) : elementId.current;\r\n}\r\n\r\n// Destroy editor, and remove it from view\r\nEditor.prototype.destroy = function() {\r\n    if(this.jsonEditor) {\r\n        this.jsonEditor.destroy();\r\n        this.jsonEditor = null;\r\n    }\r\n}\r\n\r\n// Recreate a new editor based on the given schema and start value\r\n// If schema is undefined, the editor is not recreated, but only destroyed\r\nEditor.prototype.updateSchema = function(schema) {\r\n    this.destroy();\r\n    this.jsonEditor = new JSONEditor(this.renderZone, { schema: schema });\r\n}\r\n\r\n// Validate JSON\r\nEditor.prototype.validate = function() {\r\n    return this.jsonEditor.validate();\r\n}\r\n\r\n// Get generated JSON\r\nEditor.prototype.getJSON = function() {\r\n    return this.jsonEditor.getValue();\r\n}\r\n\r\n// --------------- PreviewEditor subclass ------------------------------------\r\n\r\n// create a JSON Editor that doesn't allow specifying additional properties,\r\n// but only those specified in the schema can be set.\r\n// elementId is the id in which to render the editor,\r\nexport function PreviewEditor(elementId) {\r\n    Editor.call(this, elementId);\r\n}\r\n\r\n// Inherit Editor methods\r\nPreviewEditor.prototype = Object.create(Editor.prototype);\r\n\r\n// After `PreviewEditor.prototype = Object.create(Editor.prototype)` instruction,\r\n// PreviewEditor.prototype is a copy of Editor.prototype,\r\n// so the `constructor` property of PreviewEditor.prototype is Editor,\r\n// but a PreviewEditor object is created with the PreviewEditor constructor,\r\n// so we override the `constructor` property of PreviewEditor.prototype to PreviewEditor\r\nObject.defineProperty(PreviewEditor.prototype, 'constructor', {\r\n    value: PreviewEditor,\r\n    enumerable: false, // so that it does not appear in 'for in' loop\r\n    writable: true\r\n});\r\n\r\nPreviewEditor.prototype.updateSchema = function(schema) {\r\n    this.destroy();\r\n    this.jsonEditor = new JSONEditor(this.renderZone, {\r\n        schema: schema,\r\n        no_additional_properties: true\r\n    });\r\n}\r\n\r\n\r\n// --------------- SchemaEditor subclass -------------------------------------\r\n\r\n// create a JSON Editor for a JSON Schema, it adds a save button\r\n// to save the Schema to a file, and also\r\n// makes the 'Properties' buttons distinguishable to avoid confusion between\r\n// schema properties and object properties.\r\n// elementId is the id in which to render the editor,\r\nexport function SchemaEditor(elementId) {\r\n    Editor.call(this, elementId);\r\n\r\n    // Check whether the node is a properties button for an object,\r\n    // and not for the schema of an object named properties\r\n    var isObjectPropertiesButton = function(node) {\r\n        // Does the path end in '.properties'?\r\n        if(node.matches('div[data-schemapath$=\".properties\"] > h3 > div > button.json-editor-btntype-properties')) {\r\n            var containingDiv = node.parentElement.parentElement.parentElement;\r\n            var span = containingDiv.querySelector('h3 > span');\r\n\r\n            // Is it an object properties or a property named properties?\r\n            if(span && span.innerText === 'properties') {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    this.observer = new MutationObserver(function(mutationsList, observer) {\r\n        for(var mutation of mutationsList) {\r\n            mutation.addedNodes.forEach(function(node) {\r\n                if(node.nodeType === 1) {\r\n                    if(isObjectPropertiesButton(node)) {\r\n                        node.querySelector('span').innerText = 'Add/Remove';\r\n                    }\r\n                    else if(node.matches('button.json-editor-btntype-properties')) {\r\n                        // For other properties buttons, remove the 'Properties' label,\r\n                        // and use a cog as icon\r\n                        var icon = node.querySelector('i');\r\n                        icon.classList.remove('fa-pen');\r\n                        icon.classList.add('fa-cog');\r\n\r\n                        var span = node.querySelector('span');\r\n                        span.innerText = '';\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    this.observer.observe(this.renderZone, { childList: true, subtree: true });\r\n}\r\n\r\n// Inherit Editor methods\r\nSchemaEditor.prototype = Object.create(Editor.prototype);\r\n\r\n// After `SchemaEditor.prototype = Object.create(Editor.prototype)` instruction,\r\n// SchemaEditor.prototype is a copy of Editor.prototype,\r\n// so the `constructor` property of SchemaEditor.prototype is Editor,\r\n// but a SchemaEditor object is created with the SchemaEditor constructor,\r\n// so we override the `constructor` property of SchemaEditor.prototype to SchemaEditor\r\nObject.defineProperty(SchemaEditor.prototype, 'constructor', {\r\n    value: SchemaEditor,\r\n    enumerable: false, // so that it does not appear in 'for in' loop\r\n    writable: true\r\n});\r\n\r\n// Override the updateSchema function\r\nSchemaEditor.prototype.updateSchema = function(schema) {\r\n    this.destroy();\r\n\r\n    // Add extra validation logic for integer Schemas that use the `range` format.\r\n    // For integer Schemas that use the `range` format we require that minimum and maximum properties are set, too.\r\n    var range_integer_validator = function(schema, value, path) {\r\n        var errors = [];\r\n        if(value !== null && value.type === 'integer' && value.format === 'range') {\r\n            if(typeof value.minimum === 'undefined' || typeof value.maximum === 'undefined') {\r\n                errors.push({\r\n                    path: path,\r\n                    property: 'format',\r\n                    message: 'The range format requires that you specify both minimum and maximum properties, too.'\r\n                });\r\n            }\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    // Check that if minimum and maximum are specified, minimum <= maximum\r\n    var min_max_consistence_validator = function(schema, value, path) {\r\n        var errors = [];\r\n        if(value !== null && (value.type === 'integer' || value.type === 'number')) {\r\n            if(typeof value.minimum !== 'undefined' && typeof value.minimum !== 'undefined' && value.minimum > value.maximum) {\r\n                errors.push({\r\n                    path: path,\r\n                    property: 'maximum',\r\n                    message: 'The maximum value must be greater than or equal than the minimum value.'\r\n                });\r\n            }\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    // Recreate the JSON-Editor\r\n    this.jsonEditor = new JSONEditor(this.renderZone, {\r\n        schema: schema,\r\n        custom_validators: [ range_integer_validator, min_max_consistence_validator ]\r\n    });\r\n\r\n\r\n    // Add a save button\r\n    var filename = 'schema.json';\r\n    var saveButtonLabel = 'Save';\r\n\r\n    this.jsonEditor.on('ready', function() {\r\n        var button = this.root.getButton(saveButtonLabel, 'save', saveButtonLabel);\r\n        var button_holder = this.root.theme.getHeaderButtonHolder();\r\n        button_holder.appendChild(button);\r\n        this.root.header.parentNode.insertBefore(button_holder, this.root.header.nextSibling);\r\n\r\n        var jsonEditor = this;\r\n        button.addEventListener('click', function(e) {\r\n            e.preventDefault();\r\n            var contents = jsonEditor.getValue();\r\n            var blob = new Blob([JSON.stringify(contents, null, 2)], {\r\n                type: \"application/json;charset=utf-8\"\r\n            });\r\n\r\n            if(window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n                window.navigator.msSaveOrOpenBlob(blob, filename);\r\n            }\r\n            else {\r\n                var a = document.createElement('a');\r\n                a.download = filename;\r\n                a.href = URL.createObjectURL(blob);\r\n                a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n\r\n                a.dispatchEvent(new MouseEvent('click', {\r\n                    'view': window,\r\n                    'bubbles': true,\r\n                    'cancelable': false\r\n                }));\r\n            }\r\n        }, false);\r\n    });\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Card, CardHeader, CardBody, CardFooter } from 'reactstrap';\r\nimport { SchemaEditor } from './json-schema-editor/editor';\r\nimport PropTypes from 'prop-types';\r\nimport JSONEditor from '@json-editor/json-editor';\r\n\r\nclass JsonSchemaEditor extends Component {\r\n\r\n  constructor(props, content) {\r\n    super(props, content);\r\n\r\n    this.schemaEditor = null;\r\n    this.editorBox = React.createRef();\r\n    this.onChange = this.onChange.bind(this);\r\n    this.updateEditor = this.updateEditor.bind(this);\r\n    this.saved = \"\";\r\n    this.value = this.props.defaultValue;\r\n  }\r\n\r\n  onChange(newValue, e) {\r\n    const errors = this.schemaEditor.validate();\r\n    console.log(errors);\r\n    if(errors.length) {\r\n      alert('Invalid schema');\r\n    }\r\n    else {\r\n      if(this.props.onChange) {\r\n        this.value = this.schemaEditor.jsonEditor.getValue();\r\n        this.props.onChange(this.schemaEditor.getJSON());\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.schemaEditor = new SchemaEditor(this.editorBox);\r\n    this.updateEditor(this.props.schema, this.props.options);\r\n  }\r\n\r\n  componentWillReceiveProps({schema, options}) {\r\n    this.updateEditor(schema, options);\r\n  }\r\n\r\n  updateEditor(schema, options) {\r\n    try {\r\n      const newJson = JSON.stringify(schema);\r\n      if(newJson !== this.save || options.counter !== this.props.options.counter) {\r\n\r\n        JSONEditor.defaults.options.object_layout = options.layout;\r\n        JSONEditor.defaults.options = {\r\n          ...JSONEditor.defaults.options,\r\n          ...options.booleanOptions\r\n        };\r\n\r\n        this.save = newJson;\r\n        this.schemaEditor.updateSchema(schema);\r\n        this.schemaEditor.jsonEditor.setValue(this.value);\r\n        this.schemaEditor.jsonEditor.on('change', this.onChange);\r\n      }\r\n    }\r\n    catch(err) {\r\n      alert('Invalid json schema');\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          Schema Editor\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div id=\"schema-editor\" ref={this.editorBox} />\r\n        </CardBody>\r\n        <CardFooter>\r\n        </CardFooter>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nJsonSchemaEditor.propTypes = {\r\n  schema: PropTypes.object.isRequired,\r\n  onChange: PropTypes.func\r\n};\r\n\r\nexport default JsonSchemaEditor;\r\n","import React, { Component } from 'react';\r\nimport { Card, CardHeader, CardBody, CardFooter } from 'reactstrap';\r\nimport { PreviewEditor } from './json-schema-editor/editor';\r\n\r\nclass EditorPreview extends Component {\r\n\r\n  constructor(props, content) {\r\n    super(props, content);\r\n\r\n    this.previewBox = React.createRef();\r\n    this.editorPreview = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.editorPreview = new PreviewEditor(this.previewBox);\r\n  }\r\n\r\n  componentWillReceiveProps({ schema }) {\r\n    this.editorPreview.destroy();\r\n    if (schema !== null) this.editorPreview.updateSchema(schema);\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          Editor Preview\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div id='editor-preview' ref={this.previewBox}/>\r\n        </CardBody>\r\n        <CardFooter>\r\n          The Editor Preview will be updated as you make changes in the Schema Editor\r\n        </CardFooter>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditorPreview;\r\n","import React, { Component } from 'react';\r\nimport jsonMetaSchema from './data.json';\r\nimport JSONEditor from '@json-editor/json-editor';\r\nimport Editor from './jsonEditor';\r\nimport Preview from './editorPreview';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\nimport { setPreviewSchema } from \"../../ActionsAndReducers/UmpireMenu/umpireMenu_ActionCreators\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass SchemaEditor extends Component {\r\n\r\n  constructor(props, content) {\r\n    super(props, content);\r\n\r\n    JSONEditor.defaults.options.iconlib = \"fontawesome5\";\r\n    JSONEditor.defaults.options.theme   = 'bootstrap4';\r\n    this.updateMetaSchema = this.updateMetaSchema.bind(this);\r\n    this.updatePreviewSchema = this.updatePreviewSchema.bind(this);\r\n    this.updateOptions = this.updateOptions.bind(this);\r\n\r\n    this.schemaEditor = null;\r\n    this.editorPreview = null;\r\n\r\n    this.defaultValue = {\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"title\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"Date\": {\r\n          \"type\": \"string\",\r\n          \"format\": \"datetime-local\",\r\n        },\r\n        \"Status\": {\r\n          \"type\": \"string\",\r\n          \"enum\": [\r\n            \"Minor\",\r\n            \"Major\",\r\n            \"Critical\"\r\n          ]\r\n        },\r\n        \"Description\": {\r\n          \"type\": \"string\",\r\n          \"format\": \"textarea\",\r\n        }\r\n      },\r\n      \"title\": \"Machinery Failure\",\r\n      \"format\": \"grid\"\r\n    };\r\n\r\n\r\n    if (this.props.schemaId) {\r\n      this.defaultValue = this.props.messageTypes.messages.find((mes) => mes._id === this.props.schemaId).details;\r\n    }\r\n\r\n\r\n    this.state = {\r\n      metaSchema: jsonMetaSchema,\r\n      previewSchema: null,\r\n      options: {\r\n        layout: JSONEditor.defaults.options.object_layout,\r\n        booleanOptions: {}\r\n      }\r\n    }\r\n  }\r\n\r\n  updatePreviewSchema(schema) {\r\n    console.log(\"preview update\");\r\n    this.setState({previewSchema: schema});\r\n\r\n    this.props.dispatch(setPreviewSchema(schema));\r\n  }\r\n\r\n  updateOptions(options) {\r\n    console.log(\"options update\");\r\n    this.setState({options: options});\r\n  }\r\n\r\n  updateMetaSchema(schema) {\r\n    console.log(\"editor update\");\r\n    this.setState({metaschema: schema});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"flex-content flex-content--left50\">\r\n          <Editor\r\n            schema={this.state.metaSchema}\r\n            onChange={this.updatePreviewSchema}\r\n            options={this.state.options}\r\n            defaultValue={this.defaultValue}\r\n          />\r\n        </div>\r\n        <div className=\"flex-content flex-content--right50\">\r\n          <Preview schema={this.state.previewSchema}/>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ umpireMenu, }) => ({\r\n  umpireMenu,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SchemaEditor);\r\n","import React, { Component } from 'react';\r\nimport '../scss/App.scss';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getAllMessageTypes,\r\n  updateMessageType } from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n\r\nimport { resetMessagePreview } from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport Link from \"../Components/Link\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport SchemaEditor from \"../Components/jsonSchemaEditor/index\";\r\n\r\nclass EditMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageList: this.props.messageTypes.messages, // set to state for filter, without filter don't set props to state to avoid bugs\r\n      searchInput: '',\r\n    };\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(resetMessagePreview());\r\n    this.props.dispatch(getAllMessageTypes());\r\n  };\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.props.messageTypes.messages.length !== nextProps.messageTypes.messages.length) {\r\n      this.setState({\r\n        messageList: nextProps.messageTypes.messages\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  filterMessages = (input) => {\r\n\r\n    let value = input.target.value;\r\n\r\n    let newState = this.props.messageTypes.messages.filter(function(mes) {\r\n      return mes.details.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n    });\r\n\r\n    this.setState({\r\n      messageList: newState,\r\n      searchInput: value.toLowerCase()\r\n    });\r\n  };\r\n\r\n  updateSchema = () => {\r\n    this.props.dispatch(updateMessageType(this.props.umpireMenu.previewSchema, this.props.umpireMenu.selectedSchemaID));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message template</h1>\r\n        <div className=\"button-wrap\">\r\n          <span onClick={this.updateSchema} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span>\r\n        </div>\r\n        <div className=\"flex-content-wrapper\">\r\n          <SchemaEditor\r\n            schemaId={this.props.umpireMenu.selectedSchemaID}\r\n            messageTypes={this.props.messageTypes}\r\n          />\r\n        </div>\r\n        <div className=\"button-wrap\">\r\n          <span onClick={this.updateSchema} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, currentViewURI, umpireMenu }) => ({\r\n  messages,\r\n  messageTypes,\r\n  currentViewURI,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(EditMessage);\r\n","import React, { Component } from 'react';\r\nimport '../scss/App.scss';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getAllMessageTypes,\r\n  createMessageType\r\n} from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n\r\nimport { resetMessagePreview } from \"../ActionsAndReducers/dbMessages/messages_ActionCreators\";\r\n\r\nimport Link from \"../Components/Link\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport SchemaEditor from \"../Components/jsonSchemaEditor/index\";\r\n\r\nclass EditMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageList: this.props.messageTypes.messages, // set to state for filter, without filter don't set props to state to avoid bugs\r\n      searchInput: '',\r\n    };\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(resetMessagePreview());\r\n    this.props.dispatch(getAllMessageTypes());\r\n  };\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    if (this.props.messageTypes.messages.length !== nextProps.messageTypes.messages.length) {\r\n      this.setState({\r\n        messageList: nextProps.messageTypes.messages\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  saveSchema = () => {\r\n    this.props.dispatch(createMessageType(this.props.umpireMenu.previewSchema));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"view-wrapper\">\r\n        <div id=\"sidebar\">\r\n          <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n        </div>\r\n        <h1>Message template</h1>\r\n        <div className=\"button-wrap\">\r\n          <span onClick={this.saveSchema} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span>\r\n        </div>\r\n        <div className=\"flex-content-wrapper\">\r\n          <SchemaEditor />\r\n        </div>\r\n        <div className=\"button-wrap\">\r\n          <span onClick={this.saveSchema} className=\"link\"><FontAwesomeIcon icon={faSave} />Save Message</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ messages, messageTypes, currentViewURI, umpireMenu }) => ({\r\n  messages,\r\n  messageTypes,\r\n  currentViewURI,\r\n  umpireMenu\r\n});\r\n\r\nexport default connect(mapStateToProps)(EditMessage);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport '../../scss/App.scss';\r\n\r\nclass TextInput extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      type: this.props.options.numInput ? \"number\" : \"text\",\r\n    };\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.props.updateStore(e.target.value);\r\n  };\r\n\r\n  render() {\r\n\r\n    let invalid = !this.props.validInput ? 'invalid-input' : '';\r\n\r\n    return (\r\n      <>\r\n        <input className={invalid} id={this.props.id ? this.props.id : null} type={this.state.type} onChange={this.onChange} value={this.props.data ? this.props.data : \"\"} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nTextInput.propTypes = {\r\n  updateStore: PropTypes.func.isRequired,\r\n  options: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nexport default TextInput;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport '../../scss/App.scss';\r\n\r\nclass DropdownInput extends Component {\r\n\r\n  onChange = (e) => {\r\n    this.props.updateStore(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <select disabled={this.props.disabled} value={this.props.data ? this.props.data : \"placeholder\"} onChange={this.onChange}>\r\n        <option value=\"placeholder\">{this.props.placeholder}</option>\r\n        { this.props.selectOptions.map((item, i) => {\r\n          return (<option key={`${item.value}${item.option}`} value={item.value}>{item.option}</option>)\r\n        })}\r\n      </select>\r\n    );\r\n  }\r\n}\r\n\r\nDropdownInput.propTypes = {\r\n  updateStore: PropTypes.func.isRequired,\r\n  selectOptions: PropTypes.array.isRequired,\r\n  // options: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nexport default DropdownInput;\r\n","import React, { Component } from 'react';\r\n\r\nclass Row extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"flex-content flex-content--row\">\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Row;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport '../../scss/App.scss';\r\n\r\nclass TextArea extends Component {\r\n\r\n  onChange = (e) => {\r\n    this.props.updateStore(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <textarea value={this.props.data} onChange={this.onChange} style={{resize: \"none\"}}></textarea>\r\n    );\r\n  }\r\n}\r\n\r\nTextArea.propTypes = {\r\n  updateStore: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default TextArea;\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport TextInput from \"../../Components/Inputs/TextInput\";\r\nimport DropdownInput from \"../../Components/Inputs/DropdownInput\";\r\nimport Row from \"../../Components/Layout/Row\";\r\n\r\nimport { setGameData } from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\nimport TextArea from \"../../Components/Inputs/TextArea\";\r\n\r\nclass SettingsTab extends Component {\r\n\r\n  updateDescription = (value) => {\r\n    this.props.dispatch(setGameData({gameDescription: value}));\r\n  };\r\n\r\n  updateSpatialRepresentation = (value) => {\r\n    this.props.dispatch(setGameData({spatialRepresentation: value}));\r\n  };\r\n\r\n  updatePlanningInterval = (value) => {\r\n    this.props.dispatch(setGameData({planningInterval: value}));\r\n  };\r\n\r\n  updateReplayInterval = (value) => {\r\n    this.props.dispatch(setGameData({replayInterval: value}));\r\n  };\r\n\r\n  updateTurnStrategy = (value) => {\r\n    this.props.dispatch(setGameData({turnStrategy: value}));\r\n  };\r\n\r\n  render() {\r\n\r\n    let spatialRepresentationOptions = [{value: \"opt1\", option: \"opt1\"}, {value: \"opt2\", option: \"opt2\"}, {value: \"opt3\", option: \"opt3\"}]\r\n    let turnStrategyOptions = [{value: \"opt1\", option: \"opt1\"}, {value: \"opt2\", option: \"opt2\"}, {value: \"opt3\", option: \"opt3\"}]\r\n\r\n    return (\r\n      <div className=\"flex-content-wrapper\">\r\n\r\n        <div className=\"flex-content flex-content--left50\">\r\n          <p className=\"heading--sml\">Game description &amp; objectives</p>\r\n          <TextArea\r\n            updateStore={this.updateDescription}\r\n            data={this.props.wargame.tabs[this.props.wargame.currentTab].data.gameDescription}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex-content flex-content--right50\">\r\n\r\n          <Row>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml\">Spatial Representation</p>\r\n            </div>\r\n            <div className=\"flex-content flex-content--fill\">\r\n              <DropdownInput\r\n                updateStore={this.updateSpatialRepresentation}\r\n                selectOptions={spatialRepresentationOptions}\r\n                placeholder=\"Select spatial representation\"\r\n                data={this.props.wargame.tabs[this.props.wargame.currentTab].data.spatialRepresentation}\r\n              />\r\n            </div>\r\n          </Row>\r\n\r\n          <Row>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml\">Planning Interval</p>\r\n            </div>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <TextInput\r\n                updateStore={this.updatePlanningInterval}\r\n                options={{ numInput: true }}\r\n                data={this.props.wargame.tabs[this.props.wargame.currentTab].data.planningInterval}\r\n                validInput={true}\r\n              />\r\n            </div>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml heading--mleft\">min.</p>\r\n            </div>\r\n          </Row>\r\n\r\n          <Row>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml\">Replay interval</p>\r\n            </div>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <TextInput\r\n                updateStore={this.updateReplayInterval}\r\n                options={{ numInput: true }}\r\n                data={this.props.wargame.tabs[this.props.wargame.currentTab].data.replayInterval}\r\n                validInput={true}\r\n              />\r\n            </div>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml heading--mleft\">min.</p>\r\n            </div>\r\n          </Row>\r\n\r\n          <Row>\r\n            <div className=\"flex-content flex-content--sml\">\r\n              <p className=\"heading--sml\">Turn Strategy</p>\r\n            </div>\r\n            <div className=\"flex-content flex-content--fill\">\r\n              <DropdownInput\r\n                updateStore={this.updateTurnStrategy}\r\n                selectOptions={turnStrategyOptions}\r\n                placeholder=\"Not implemented yet\"\r\n                data={this.props.wargame.tabs[this.props.wargame.currentTab].data.turnStrategy}\r\n                // disabled={true}\r\n              />\r\n            </div>\r\n          </Row>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame }) => ({\r\n  wargame,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SettingsTab);\r\n","import React, { Component } from 'react';\r\nimport classNames from \"classnames\";\r\nimport '../scss/App.scss';\r\nimport {PropTypes} from \"prop-types\";\r\n\r\nclass TabsSearchList extends Component {\r\n\r\n  setSelected = (item) => {\r\n    this.props.setSelected(item);\r\n  };\r\n\r\n  createList() {\r\n    var data = this.props.listData;\r\n\r\n    var list = [];\r\n    for (var prop in data) {\r\n      let active = prop === this.props.selected ? 'active' : '';\r\n      list.unshift(<span href=\"#\" onClick={this.setSelected.bind(this, prop)} key={prop} className={classNames({\"list-title\": true, active})}>{prop}</span>);\r\n    }\r\n    return list;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"list\">\r\n        {this.props.filter ?\r\n          <input type=\"text\" className=\"list-input\" key=\"search-templates\" placeholder={this.props.placeholder} onChange={ this.props.filter } value={this.props.searchQuery} />\r\n          : false\r\n        }\r\n        <div className=\"list-list\">\r\n          { this.createList() }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTabsSearchList.propTypes = {\r\n  listData: PropTypes.object.isRequired,\r\n  filter: PropTypes.func,\r\n  selected: PropTypes.string.isRequired,\r\n  setSelected: PropTypes.func.isRequired,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nexport default TabsSearchList;\r\n","import React, { Component } from 'react';\r\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nclass RemovableGroupItem extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <span className=\"group-item\" key={this.props.children}>\r\n        {this.props.children}\r\n        <FontAwesomeIcon icon={faTimes} />\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RemovableGroupItem;\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport TabsSearchList from \"../../Components/TabsSearchList\";\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport {\r\n  setSelectedForce,\r\n  setForceOverview\r\n} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\nimport '../../scss/App.scss';\r\nimport TextArea from \"../../Components/Inputs/TextArea\";\r\nimport RemovableGroupItem from \"../../Components/Layout/RemovableGroupItem\";\r\n\r\nclass ForcesTab extends Component {\r\n\r\n  openModal = () => {\r\n    this.props.dispatch(modalAction.open(\"addForce\"));\r\n  };\r\n\r\n  setSelected = (force) => {\r\n    this.props.dispatch(setSelectedForce(force));\r\n  };\r\n\r\n  updateOverview = (overview) => {\r\n    this.props.dispatch(setForceOverview(overview));\r\n  };\r\n\r\n  createForceEditor() {\r\n\r\n    let curTab = this.props.wargame.currentTab;\r\n    let selectedForce = this.props.wargame.tabs[curTab].data.selectedForce;\r\n\r\n    return (\r\n      <div className=\"flex-content--fill forcesTab\">\r\n\r\n        <h3>{selectedForce}</h3>\r\n\r\n        <span className=\"link link--secondary link--noIcon link--disabled\">Change icon</span>\r\n\r\n        <p className=\"heading--sml\">Overview &amp; Objectives</p>\r\n        <TextArea\r\n          updateStore={this.updateOverview}\r\n          data={this.props.wargame.tabs[curTab].data.forces[selectedForce].overview}\r\n        />\r\n\r\n        <p className=\"heading--sml\">Roles</p>\r\n        <span className=\"link link--secondary link--noIcon link--disabled\">Add a new role</span>\r\n\r\n        <div className=\"flex-content\">\r\n          {this.props.wargame.tabs[curTab].data.forces[selectedForce].roles.map((role) => {\r\n            return (<RemovableGroupItem key={role}>{role}</RemovableGroupItem>)\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n\r\n    let curTab = this.props.wargame.currentTab;\r\n    let selectedForce = this.props.wargame.tabs[curTab].data.selectedForce;\r\n\r\n    return (\r\n      <div className=\"flex-content-wrapper\">\r\n        <div className=\"flex-content\">\r\n          <span className=\"link link--noIcon\" onClick={this.openModal}>Add a new force</span>\r\n          <TabsSearchList listData={this.props.wargame.tabs[curTab].data.forces}\r\n                          setSelected={this.setSelected}\r\n                          selected={selectedForce}\r\n          />\r\n        </div>\r\n\r\n        {selectedForce ?\r\n          this.createForceEditor()\r\n        : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// temp use allMessages\r\nconst mapStateToProps = ({ messages, wargame }) => ({\r\n  messages,\r\n  wargame,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ForcesTab);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../../scss/App.scss';\r\nimport Select from \"react-select\";\r\n\r\nclass EditSubscriptionRow extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      subscriptionId: this.props.data.subscriptionId,\r\n      editSubscriptionForce: {value: this.props.data.force, label: this.props.data.force},\r\n      editSubscriptionRole: {value: this.props.data.role, label: this.props.data.role},\r\n      editSubscriptionTemplates: this.props.data.templates,\r\n    };\r\n  }\r\n\r\n  updateSubscriptionForce = (option) => {\r\n    this.setState({\r\n      editSubscriptionForce: option,\r\n    });\r\n  };\r\n\r\n  updateSubscriptionRole = (option) => {\r\n    this.setState({\r\n      editSubscriptionRole: option,\r\n    });\r\n  };\r\n\r\n  updateSubscriptionTemplates = (option) => {\r\n    this.setState({\r\n      editSubscriptionTemplates: option,\r\n    });\r\n  };\r\n\r\n  updateChannel = () => {\r\n    let subscriptionData = {\r\n      force: this.state.editSubscriptionForce.label,\r\n      role: this.state.editSubscriptionRole.label,\r\n      templates: this.state.editSubscriptionTemplates,\r\n    };\r\n    this.props.updateRecipient(this.state.subscriptionId, subscriptionData);\r\n    this.props.cancelEdit();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <tr>\r\n        <td>\r\n          <Select\r\n            value={this.state.editSubscriptionForce}\r\n            options={this.props.forceOptions}\r\n            onChange={this.updateSubscriptionForce}\r\n          />\r\n        </td>\r\n        <td>\r\n          <Select\r\n            value={this.state.editSubscriptionRole}\r\n            options={this.props.roleOptions}\r\n            onChange={this.updateSubscriptionRole}\r\n          />\r\n        </td>\r\n        <td>\r\n          <Select\r\n            value={this.state.editSubscriptionTemplates}\r\n            options={this.props.templateOptions}\r\n            onChange={this.updateSubscriptionTemplates}\r\n            isMulti\r\n          />\r\n        </td>\r\n        <td>\r\n          <button\r\n            className=\"btn btn-action btn-action--secondary\"\r\n            onClick={this.updateChannel}\r\n            // disabled={!this.state.selectedTemplates.length > 0}\r\n          >\r\n            Save</button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default connect()(EditSubscriptionRow);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  addRecipientToChannel,\r\n  updateRecipient,\r\n  removeRecipient,\r\n} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators.js\";\r\n\r\nimport EditSubscriptionRow from \"./EditSubscriptionRow\";\r\nimport Select from \"react-select\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTrash,\r\n  faPencilAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass ChannelsTable extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var tabs = Object.values(this.props.wargame.tabs);\r\n    let forces = tabs.find((d) => d.name === \"Forces\").data.forces;\r\n\r\n    let forceOptions = [];\r\n    for (let prop in forces) {\r\n      forceOptions.push({\r\n        value: prop,\r\n        label: prop,\r\n      });\r\n    }\r\n\r\n    let templateOptions = this.props.messageTypes.messages.map((messageType) => {\r\n      return {\r\n        value: messageType._id,\r\n        label: messageType.title,\r\n      }\r\n    });\r\n\r\n    this.state = {\r\n      selectedForce: {value: null, label: null},\r\n      forceOptions: forceOptions,\r\n      selectedRole:  {value: null, label: null},\r\n      roleOptions: [],\r\n      selectedTemplates:  [],\r\n      templateOptions: templateOptions,\r\n      subscriptionToEdit: null,\r\n      editSubscriptionForce: '',\r\n      editSubscriptionRole: '',\r\n      editSubscriptionTemplates: [],\r\n    }\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState, nextContext) {\r\n\r\n    if (nextState.selectedForce.value === null) return;\r\n\r\n    if (this.state.selectedForce.value !== nextState.selectedForce.value) {\r\n\r\n      var tabs = Object.values(this.props.wargame.tabs);\r\n\r\n      let roleOptions = [];\r\n      var roles = tabs.find((d) => d.name === \"Forces\").data.forces[nextState.selectedForce.value].roles;\r\n\r\n      roles.forEach((role) => {\r\n\r\n        roleOptions.push({\r\n          value: role,\r\n          label: role,\r\n        });\r\n      });\r\n\r\n      this.setState({\r\n        roleOptions,\r\n      });\r\n    }\r\n  }\r\n\r\n  createRow(data, i) {\r\n    var row = [];\r\n    for (var prop in data) {\r\n      if (prop === \"subscriptionId\") continue;\r\n\r\n      var value = '';\r\n      if (typeof data[prop] !== \"string\") {\r\n\r\n        for (var j=0 ; j<data[prop].length ; j++) {\r\n          let item = data[prop][j];\r\n          value += item.label;\r\n          if (j !== data[prop].length-1) value+=', ';\r\n        }\r\n      } else {\r\n        value = data[prop];\r\n      }\r\n      row.push(<td key={`${value}${i}`}>{value}</td>)\r\n    }\r\n    row.push(\r\n      <td key={`edit-delete${i}`}>\r\n        <FontAwesomeIcon icon={faTrash} onClick={this.removeSubscription.bind(this, data.subscriptionId)} />\r\n        <FontAwesomeIcon icon={faPencilAlt} onClick={this.editSubscription.bind(this, data.subscriptionId)} />\r\n      </td>\r\n    );\r\n    return (<tr key={`row-${i}`}>{row}</tr>);\r\n  }\r\n\r\n  removeSubscription(subscriptionId) {\r\n    this.props.dispatch(removeRecipient(subscriptionId))\r\n  };\r\n\r\n  editSubscription(subscriptionId) {\r\n    this.setState({\r\n      subscriptionToEdit: subscriptionId,\r\n    });\r\n  }\r\n\r\n  cancelEdit = () => {\r\n    this.setState({\r\n      subscriptionToEdit: \"\",\r\n    });\r\n  };\r\n\r\n  updateRecipient = (id, data) => {\r\n    this.props.dispatch(updateRecipient(id, data));\r\n  };\r\n\r\n  setSelectedForce = (option) => {\r\n    this.setState({\r\n      selectedForce: option,\r\n    });\r\n  };\r\n\r\n  setSelectedRole = (option) => {\r\n    this.setState({\r\n      selectedRole: option,\r\n    });\r\n  };\r\n\r\n  setSelectedTemplate = (option) => {\r\n    this.setState({\r\n      selectedTemplates: option,\r\n    });\r\n  };\r\n\r\n  addToChannel = () => {\r\n\r\n    let channelData = {\r\n      force: this.state.selectedForce.value,\r\n      role: this.state.selectedRole.value,\r\n      templates: this.state.selectedTemplates,\r\n    };\r\n    this.props.dispatch(addRecipientToChannel(channelData));\r\n\r\n    this.setState({\r\n      selectedForce: {value: null, label: null},\r\n      selectedRole: {value: null, label: null},\r\n      selectedTemplates: [],\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"flex-content\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Force</th>\r\n              <th>Roles</th>\r\n              <th>Templates</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.data.map((data, i) => {\r\n              return data.subscriptionId === this.state.subscriptionToEdit ? <EditSubscriptionRow\r\n                                                                                  key={data.subscriptionId}\r\n                                                                                  data={data}\r\n                                                                                  forceOptions={this.state.forceOptions}\r\n                                                                                  roleOptions={this.state.roleOptions}\r\n                                                                                  templateOptions={this.state.templateOptions}\r\n                                                                                  cancelEdit={this.cancelEdit}\r\n                                                                                  updateRecipient={this.updateRecipient}\r\n                                                                            /> : this.createRow(data, i);\r\n            })}\r\n            <tr>\r\n              <td>\r\n                <Select\r\n                  value={this.state.selectedForce}\r\n                  options={this.state.forceOptions}\r\n                  onChange={this.setSelectedForce}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Select\r\n                  value={this.state.selectedRole}\r\n                  options={this.state.roleOptions}\r\n                  onChange={this.setSelectedRole}\r\n                  isDisabled={!this.state.selectedForce.value}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Select\r\n                  value={this.state.selectedTemplates}\r\n                  options={this.state.templateOptions}\r\n                  onChange={this.setSelectedTemplate}\r\n                  isDisabled={!this.state.selectedRole.value}\r\n                  isMulti\r\n                />\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-action btn-action--secondary\"\r\n                  onClick={this.addToChannel}\r\n                  disabled={!this.state.selectedTemplates.length > 0}>\r\n                  Save</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame, messageTypes }) => ({\r\n  wargame,\r\n  messageTypes,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ChannelsTable);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport { modalAction } from \"../../ActionsAndReducers/Modal/Modal_ActionCreators\";\r\nimport {\r\n  setSelectedChannel,\r\n  setForceOverview\r\n} from \"../../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nimport '../../scss/App.scss';\r\n\r\nimport TabsSearchList from \"../../Components/TabsSearchList\";\r\nimport ChannelsTable from \"../../Components/Layout/ChannelsTable\";\r\n\r\nclass ForcesTab extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      channelList: this.props.wargame.tabs[this.props.wargame.currentTab].data.channels,\r\n      searchQuery: '',\r\n    }\r\n  };\r\n\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    const curPropsState = Object.keys(this.props.wargame.tabs[this.props.wargame.currentTab].data.channels);\r\n    const nextPropsState = Object.keys(nextProps.wargame.tabs[nextProps.wargame.currentTab].data.channels);\r\n\r\n    if (curPropsState.length !== nextPropsState.length) {\r\n      this.setState({\r\n        channelList: nextProps.wargame.tabs[nextProps.wargame.currentTab].data.channels\r\n      });\r\n    }\r\n  }\r\n\r\n  openModal = () => {\r\n    this.props.dispatch(modalAction.open(\"addChannel\"));\r\n  };\r\n\r\n  setSelected = (force) => {\r\n    this.props.dispatch(setSelectedChannel(force));\r\n  };\r\n\r\n  updateOverview = (overview) => {\r\n    this.props.dispatch(setForceOverview(overview));\r\n  };\r\n\r\n  filterChannels = (input) => {\r\n\r\n    let value = input.target.value;\r\n\r\n    let list = this.props.wargame.tabs[this.props.wargame.currentTab].data.channels;\r\n\r\n    let newState = {};\r\n    for (let prop in list) {\r\n      if (prop.toLowerCase().indexOf(value.toLowerCase()) > -1) newState[prop] = list[prop];\r\n    }\r\n\r\n    this.setState({\r\n      channelList: newState,\r\n      searchQuery: value\r\n    });\r\n  };\r\n\r\n  createChannelEditor() {\r\n\r\n    let curTab = this.props.wargame.currentTab;\r\n    let selectedChannel = this.props.wargame.tabs[curTab].data.selectedChannel;\r\n\r\n    return (\r\n      <div className=\"flex-content--fill channelsTab\">\r\n        <h3>{selectedChannel}</h3>\r\n\r\n        <p className=\"heading--sml\">Participants and messages</p>\r\n\r\n        <ChannelsTable data={this.props.wargame.tabs[curTab].data.channels[selectedChannel]} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n\r\n    const curTab = this.props.wargame.currentTab;\r\n    const selectedChannel = this.props.wargame.tabs[curTab].data.selectedChannel;\r\n\r\n    return (\r\n      <div className=\"flex-content-wrapper\">\r\n        <div className=\"flex-content\">\r\n          <span className=\"link link--noIcon\" onClick={this.openModal}>Add channel</span>\r\n          <TabsSearchList listData={this.state.channelList}\r\n                          filter={this.filterChannels}\r\n                          searchQuery={this.state.searchQuery}\r\n                          setSelected={this.setSelected}\r\n                          selected={selectedChannel}\r\n                          placeholder={\"Search channels\"}\r\n          />\r\n        </div>\r\n\r\n        {selectedChannel ?\r\n          this.createChannelEditor()\r\n        : null}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// temp use allMessages\r\nconst mapStateToProps = ({ messages, wargame }) => ({\r\n  messages,\r\n  wargame,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ForcesTab);\r\n","import React, { Component } from 'react';\r\n\r\nimport '../scss/App.scss';\r\n\r\nclass ValidationNotification extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"invalid-notification\"><p>{this.props.children}</p></div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default ValidationNotification;\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SettingsTab from \"./TabViews/SettingsTab\";\r\nimport ForcesTab from \"./TabViews/ForcesTab\";\r\nimport ChannelsTab from \"./TabViews/ChannelsTab\";\r\nimport ValidationNotification from \"../Components/ValidationNotification\";\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n});\r\n\r\n\r\nclass TabbedView extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    console.log(this.props.tabs);\r\n\r\n    this.state = {\r\n      value: 0,\r\n      tabs: Object.values(this.props.tabs).map((item) => item.name),\r\n      invalidFields: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setCurrentTab(0);\r\n  }\r\n\r\n\r\n  handleChange = (event, value) => {\r\n    this.setState({ value });\r\n    this.props.setCurrentTab(value);\r\n  };\r\n\r\n  render() {\r\n\r\n    const { value } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className={classes.root}>\r\n          <AppBar position=\"static\" color=\"default\">\r\n            <Tabs\r\n              value={value}\r\n              onChange={this.handleChange}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              centered\r\n            >\r\n              { this.state.tabs.map((tabName, i) => <Tab key={tabName + i} label={tabName} />) }\r\n            </Tabs>\r\n          </AppBar>\r\n          {value === 0 && <TabContainer><SettingsTab /></TabContainer>}\r\n          {/*{value === 1 && <TabContainer>PlatformTypes.jsx</TabContainer>}*/}\r\n          {value === 1 && <TabContainer><ForcesTab /></TabContainer>}\r\n          {/*{value === 3 && <TabContainer>BackHistory.jsx</TabContainer>}*/}\r\n          {/*{value === 4 && <TabContainer>Positions.jsx</TabContainer>}*/}\r\n          {value === 2 && <TabContainer><ChannelsTab /></TabContainer>}\r\n          {/*{value === 6 && <TabContainer>PlayControl.jsx</TabContainer>}*/}\r\n        </div>\r\n        <ValidationNotification validation={ this.props.wargame.validation } />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ wargame }) => ({\r\n  wargame\r\n});\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(TabbedView));\r\n","import React, { Component } from 'react';\r\n\r\nclass ProgressBar extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"progress\">\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProgressBar;\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {\r\n  setCurrentTab,\r\n  setWargameTitle,\r\n  updateWargame,\r\n} from \"../ActionsAndReducers/dbWargames/wargames_ActionCreators\";\r\n\r\nimport TabbedView from \"./TabbedView\";\r\nimport ProgressBar from \"../Components/ProgressBar/ProgressBar\";\r\n\r\nimport Link from \"../Components/Link\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport classNames from \"classnames\";\r\nimport TextInput from \"../Components/Inputs/TextInput\";\r\nimport {getAllMessageTypes} from \"../ActionsAndReducers/dbMessageTypes/messageTypes_ActionCreators\";\r\n\r\nclass GameSetup extends Component {\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(getAllMessageTypes());\r\n  }\r\n\r\n  setCurrentTab = (tab) => {\r\n    this.props.dispatch(setCurrentTab(tab));\r\n  };\r\n\r\n  createIndicators() {\r\n    const that = this;\r\n\r\n    return Object.entries(this.props.wargame.tabs).map(function (entry) {\r\n\r\n      let active = that.props.wargame.currentTab === parseInt(entry[0]);\r\n      let completed = entry[1].complete;\r\n      return (<div key={entry[0]} className={classNames(\"progress-indicator\", {\"progress-indicator--active\": active, \"progress-indicator--complete\": completed})}></div>);\r\n    });\r\n  }\r\n\r\n  updateWargameTitle = (name) => {\r\n    this.props.dispatch(setWargameTitle(name));\r\n  };\r\n\r\n\r\n  saveWargame = () => {\r\n    if (this.checkAllValid()) {\r\n      this.props.dispatch(updateWargame(this.props.wargame.currentWargame, this.props.wargame.tabs, this.props.wargame.wargameTitle));\r\n    }\r\n  };\r\n\r\n  checkAllValid = () => {\r\n    return Object.values(this.props.wargame.validation).reduce((entry) => entry === true);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"view-wrapper view-wrapper-gamesetup\">\r\n          <div id=\"sidebar\">\r\n            <Link href=\"/client/umpireMenu\" id=\"home-btn\"><FontAwesomeIcon icon={faArrowLeft} size=\"2x\" /></Link>\r\n          </div>\r\n          <div className=\"flex-content-wrapper flex-content-wrapper--distribute\" id=\"game-setup-head\">\r\n            <TextInput\r\n              id=\"title-editable\"\r\n              updateStore={this.updateWargameTitle}\r\n              options={{numInput: false}}\r\n              data={this.props.wargame.wargameTitle}\r\n              validInput={this.props.wargame.validation.validWargameName}\r\n            />\r\n            <span className={classNames({\"link\": true, \"link--noIcon\": true, \"link--disabled\": !this.checkAllValid()})} onClick={this.saveWargame}>save</span>\r\n            <ProgressBar>\r\n              {this.createIndicators()}\r\n            </ProgressBar>\r\n          </div>\r\n          <TabbedView\r\n            tabs={this.props.wargame.tabs}\r\n            setCurrentTab={this.setCurrentTab}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n// temp use allMessages\r\nconst mapStateToProps = ({ wargame }) => ({\r\n  wargame\r\n});\r\n\r\nexport default connect(mapStateToProps)(GameSetup);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../scss/App.scss';\r\nimport check from \"check-types\";\r\nimport moment from \"moment\";\r\n\r\nclass MessagePreview extends Component {\r\n\r\n  createObjItem(pair) {\r\n    const that = this;\r\n    return (\r\n      <>\r\n        {/*<h3>{pair[0]}</h3>*/}\r\n        <span key={`objItem--${pair[0]}-${pair[1]}`} className=\"group-section\">{ that.deconstructObj(pair[1]) }</span>\r\n      </>\r\n    )\r\n  }\r\n\r\n  createBoolItem(pair) {\r\n    return <span key={`boolItem--${pair[0]}-${pair[1]}`}>{pair[1] ? pair[0] : false}</span>\r\n  }\r\n\r\n  createTimeItem(pair) {\r\n\r\n    return (\r\n      <>\r\n        <span className=\"detail\">{pair[0]}:</span>\r\n        <span key={`dateTime-${pair[1]}`} className=\"data\">{moment(pair[1]).format('DD/MM/YY,HH:mm')}</span>\r\n      </>\r\n    )\r\n  }\r\n\r\n  createStrItem(pair, withoutName) {\r\n    return <>\r\n      <span key={`strItem-${pair[0]}`} className=\"detail\">\r\n        {pair[0]}:\r\n      </span>\r\n      <span className=\"data\">\r\n        {pair[1]}\r\n      </span>\r\n      </>\r\n  }\r\n\r\n  deconstructArr(pair) {\r\n    const that = this;\r\n    return (\r\n      <>\r\n        <span  className=\"detail\">{pair[0]}</span>\r\n        {pair[1].map((item) => {\r\n          // CHECK NAME PROP ON EVERY OBJ\r\n          return (\r\n              <span key={`section-${item.name}`}>{ that.deconstructObj(item) }</span>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\n  deconstructObj(obj) {\r\n\r\n    const that = this;\r\n    const keyPropPairs = Object.entries(obj);\r\n\r\n    return keyPropPairs.map((pair, i) => {\r\n\r\n      if (check.object(pair[1])) return that.createObjItem(pair);\r\n      if (check.array.of.object(pair[1])) return that.deconstructArr(pair);\r\n      if (check.boolean(pair[1])) return that.createBoolItem(pair);\r\n\r\n      if (moment(pair[1], moment.ISO_8601, true).isValid()) return that.createTimeItem(pair);\r\n\r\n      return that.createStrItem(pair);\r\n\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    if (!this.props.detail) return false;\r\n\r\n    const that = this;\r\n    const keyPropPairs = Object.entries(this.props.detail);\r\n\r\n\r\n    return keyPropPairs.map((pair, i) => {\r\n\r\n      if (i===0) return (\r\n        <>\r\n          { this.props.from ? <>\r\n            <span key={'from'} className=\"detail\">\r\n              From:\r\n            </span>\r\n            <span className=\"data\">\r\n              {this.props.from}\r\n            </span></>\r\n          : false }\r\n        </>\r\n      );\r\n\r\n      if (check.object(pair[1])) return that.createObjItem(pair);\r\n      if (check.array.of.object(pair[1])) return that.deconstructArr(pair);\r\n      if (check.boolean(pair[1])) return that.createBoolItem(pair);\r\n      if (moment(pair[1], moment.ISO_8601, true).isValid()) return that.createTimeItem(pair);\r\n\r\n      return (\r\n        <>\r\n          <span className=\"detail\">{pair[0]}: </span>\r\n          <span key={`${pair[0]}-${pair[1]}`} className=\"data\">{pair[1]}</span>\r\n        </>\r\n      )\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport default connect()(MessagePreview);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Collapsible from \"react-collapsible\";\r\nimport MessagePreview from \"../Components/MessagePreviewPlayerUi\";\r\n\r\nimport '../scss/App.scss';\r\n\r\nclass MessagesList extends Component {\r\n\r\n  render() {\r\n    let messages = this.props.messages.filter((item) => item.details.channel === this.props.curChannel);\r\n\r\n    return (\r\n      <>\r\n        {messages.map((item, i) => {\r\n          return (\r\n            <Collapsible\r\n              trigger={item.message.title}\r\n              transitionTime={200}\r\n              easing={'ease-in-out'}\r\n              open={i===0}\r\n            >\r\n              <div className=\"message-preview-player\"><MessagePreview key={i} detail={item.message} from={item.details.from.force} /></div>\r\n            </Collapsible>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = () => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps)(MessagesList);\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport JSONEditor from '@json-editor/json-editor';\r\nimport '../scss/App.scss';\r\n\r\nimport {\r\n  saveMessage,\r\n  getAllWargameMessages,\r\n} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\nclass JsonCreator extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.editor = null;\r\n    this.editorPreviewRef = React.createRef();\r\n\r\n    this.state = {\r\n      selectedSchema: ''\r\n    };\r\n  }\r\n\r\n  sendMessage = () => {\r\n\r\n    let messageDetails = {\r\n      channel: this.props.playerUi.selectedChannel,\r\n      from: {\r\n        force: this.props.playerUi.selectedForce,\r\n        role: this.props.selectedRole,\r\n      },\r\n    };\r\n\r\n    this.props.dispatch(saveMessage(this.props.playerUi.currentWargame, messageDetails, this.editor.getValue()));\r\n    this.props.dispatch(getAllWargameMessages(this.props.playerUi.currentWargame));\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n    if (this.editor) {\r\n      this.editor.destroy();\r\n      this.editor = null;\r\n    }\r\n\r\n    if (nextProps.schema && nextProps.schema.type) {\r\n        if (this.editor) return;\r\n\r\n        this.editor = new JSONEditor(this.editorPreviewRef.current, {\r\n          schema: nextProps.schema,\r\n          theme: 'bootstrap4'\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"preview-editor\" ref={this.editorPreviewRef}></div>\r\n        <button name=\"send\" className=\"btn btn-action btn-action--primary\" onClick={this.sendMessage}>Send</button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ playerUi }) => ({\r\n  playerUi\r\n});\r\n\r\nexport default connect(mapStateToProps)(JsonCreator);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Select from \"react-select\";\r\nimport '../scss/App.scss';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n  getMessageTemplate,\r\n} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\nimport MessageCreator from \"../Components/MessageCreator.jsx\";\r\n\r\nclass NewMessage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      template: {value: '', label: ''},\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n    if (this.props.curChannel !== nextProps.curChannel) {\r\n      this.setState({\r\n        template: {value: '', label: ''},\r\n      });\r\n    }\r\n  }\r\n\r\n  setTemplate = (val) => {\r\n    this.props.dispatch(getMessageTemplate(val.value));\r\n    this.setState({\r\n      template: val,\r\n    })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"\">\r\n        <Select\r\n          value={this.state.template}\r\n          options={this.props.templates}\r\n          onChange={this.setTemplate}\r\n        />\r\n        <MessageCreator schema={this.props.schema} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNewMessage.propTypes = {\r\n  templates: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = () => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps)(NewMessage);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {\r\n  getAllWargameMessages,\r\n  setChannel,\r\n  setMessageSchema,\r\n} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\nimport MessagesList from \"./MessagesList\";\r\nimport NewMessage from \"../Components/NewMessage\";\r\n\r\nimport '../scss/App.scss';\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n});\r\n\r\nclass MessageFeeds extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: 0,\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(getAllWargameMessages(this.props.playerUi.currentWargame));\r\n  }\r\n\r\n  handleChange = (event, value) => {\r\n\r\n    let channel = Object.keys(this.props.playerUi.channels)[value];\r\n\r\n    this.props.dispatch(setChannel(channel));\r\n    this.props.dispatch(setMessageSchema({}));\r\n\r\n    this.setState({ value });\r\n  };\r\n\r\n  createTabs = () => {\r\n\r\n    let channels = this.props.playerUi.channels;\r\n    let tabs = [];\r\n\r\n    for (let prop in channels) {\r\n      tabs.push(<Tab key={prop} label={prop} />)\r\n    }\r\n\r\n    return tabs;\r\n  };\r\n\r\n  createMessageList = (tab) => {\r\n\r\n    let curChannel= this.props.playerUi.selectedChannel;\r\n\r\n    return (\r\n      <TabContainer>\r\n        <MessagesList\r\n          curChannel={curChannel}\r\n          messages={this.props.playerUi.messages}\r\n        />\r\n\r\n        <NewMessage\r\n          curChannel={curChannel}\r\n          schema={this.props.playerUi.messageSchema}\r\n          templates={this.props.playerUi.channels[curChannel].templates}\r\n        />\r\n      </TabContainer>\r\n    )\r\n  };\r\n\r\n  render() {\r\n\r\n    const { value } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className={classes.root}>\r\n          <AppBar position=\"static\" color=\"default\">\r\n            <Tabs\r\n              value={value}\r\n              onChange={this.handleChange}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              centered\r\n            >\r\n              {this.createTabs()}\r\n            </Tabs>\r\n          </AppBar>\r\n          {this.createMessageList(value)}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ playerUi }) => ({\r\n  playerUi,\r\n});\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(MessageFeeds));\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport '../scss/App.scss';\r\nimport {\r\n  getWargame,\r\n  setForce,\r\n  setRole,\r\n  setFilteredChannels,\r\n  getAllMessages,\r\n} from \"../ActionsAndReducers/playerUi/playerUi_ActionCreators\";\r\n\r\nimport MessageFeeds from \"./MessageFeeds\";\r\nimport DropdownInput from \"../Components/Inputs/DropdownInput\";\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass PlayerUi extends Component {\r\n\r\n  // componentWillMount() {\r\n  //   this.props.dispatch(getAllMessages());\r\n  // }\r\n\r\n  updateSelectedWargame = (wargamePath) => {\r\n    this.props.dispatch(getWargame(wargamePath));\r\n  };\r\n\r\n  updateSelectedForce = (force) => {\r\n    this.props.dispatch(setForce(force));\r\n  };\r\n\r\n  updateSelectedRole = (role) => {\r\n    this.props.dispatch(setRole(role));\r\n    this.props.dispatch(setFilteredChannels());\r\n  };\r\n\r\n  goBack = () => {\r\n    this.props.dispatch(setForce(\"\"));\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"flex-content-wrapper\">\r\n\r\n        <div className=\"flex-content flex-content--fill\">\r\n\r\n          {!this.props.playerUi.currentWargame ?\r\n            <div className=\"flex-content--center\">\r\n              <h1>Set wargame</h1>\r\n              <DropdownInput\r\n                updateStore={this.updateSelectedWargame}\r\n                selectOptions={this.props.wargame.wargameList.map((wargame) => ({option: wargame.title, value: wargame.name}))}\r\n              />\r\n            </div>\r\n            : false\r\n          }\r\n\r\n          {this.props.playerUi.currentWargame && !this.props.playerUi.selectedForce ?\r\n            <div className=\"flex-content--center\">\r\n              <h1>Set force</h1>\r\n              <DropdownInput\r\n                updateStore={this.updateSelectedForce}\r\n                selectOptions={Object.keys(this.props.playerUi.allForces).map((force) => ({option: force, value: force}))}\r\n              />\r\n            </div>\r\n            : false\r\n          }\r\n\r\n          {this.props.playerUi.selectedForce && !this.props.playerUi.selectedRole ?\r\n            <div className=\"flex-content--center\">\r\n              <h1>Set role</h1>\r\n              <FontAwesomeIcon icon={faArrowLeft} size=\"2x\" style={{cursor: 'pointer'}} onClick={this.goBack} />\r\n              <DropdownInput\r\n                updateStore={this.updateSelectedRole}\r\n                selectOptions={this.props.playerUi.allForces[this.props.playerUi.selectedForce].roles.map((role) => ({option: role, value: role}))}\r\n              />\r\n            </div>\r\n            : false\r\n          }\r\n\r\n          {this.props.playerUi.selectedForce && this.props.playerUi.selectedRole ?\r\n\r\n            <div className=\"message-feeds\">\r\n              <MessageFeeds />\r\n            </div>\r\n            : false\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ playerUi, wargame }) => ({\r\n  playerUi,\r\n  wargame,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PlayerUi);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport UniversalRouter from \"universal-router\";\r\n\r\nimport ChooseInterface from \"../Views/ChooseInterface\";\r\nimport GameDesignerInterface from '../Views/GameDesignerInterface';\r\nimport UmpireMenu from '../Views/UmpireMenu';\r\nimport EditMessage from '../Views/EditMessage';\r\nimport CreateMessage from '../Views/CreateMessage';\r\nimport EditTemplate from '../Views/EditTemplate';\r\nimport CreateTemplate from '../Views/CreateTemplate';\r\nimport GameSetup from \"../Views/GameSetup\";\r\nimport PlayerUi from \"../Views/PlayerUi\";\r\n\r\nimport '../scss/App.scss';\r\n\r\nclass Router extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.routes = [\r\n      { path: '/client/', action: () => <ChooseInterface /> },\r\n      { path: '/client/umpireMenu', action: () => <GameDesignerInterface/> },\r\n      { path: '/client/umpireMenu/:creatorType', action: () => <UmpireMenu /> },\r\n      { path: '/client/messageCreator', children: [\r\n          { path: '/create/template', action: () => <CreateTemplate /> },\r\n          { path: '/edit/template', action: () => <EditTemplate /> },\r\n          { path: '/create/message', action: () => <CreateMessage /> },\r\n          { path: '/edit/message', action: () => <EditMessage /> },\r\n        ]\r\n      },\r\n      { path: '/client/gameSetup', action: () => <GameSetup /> },\r\n      { path: '/client/playerUi', action: () => <PlayerUi /> },\r\n    ];\r\n\r\n    // let currentPath = new URL(window.location.href).pathname;\r\n\r\n    this.state = {\r\n      currentView: <ChooseInterface />\r\n    };\r\n\r\n    this.router = new UniversalRouter(this.routes);\r\n\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n    this.router.resolve({ pathname: nextProps.currentViewURI }).then(result => {\r\n      this.setState({\r\n        currentView: result,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        { this.state.currentView }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ currentViewURI }) => ({\r\n  currentViewURI\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(Router);\r\n","export default function deepCopy(objectpassed) {\r\n\r\n  // arrays return \"object\" in js so any object or array will be looped to copy deeply.\r\n  // strings, numbers and booleans are deep copied naturally, while any objects within arrays or objects\r\n  // or objects within arrays are only copied shallowly.\r\n  if (objectpassed === null || typeof objectpassed !== 'object') {\r\n    return objectpassed;\r\n  }\r\n\r\n  var temporaryStorage = objectpassed.constructor();\r\n\r\n  for (var key in objectpassed) {\r\n    temporaryStorage[key] = deepCopy((objectpassed[key]));\r\n  }\r\n  return temporaryStorage;\r\n}","import ActionConstant from '../ActionConstants';\r\nimport copyState from \"../copyStateHelper.js\";\r\n\r\nvar initialState = {\r\n  loadingDb: false,\r\n  isLoading: false,\r\n  messages: [],\r\n};\r\n\r\nexport const messageTypesReducer = (state = initialState, action) => {\r\n\r\n  var newState = copyState(state);\r\n\r\n  switch (action.type) {\r\n    case ActionConstant.DB_MESSAGE_TYPES_GET:\r\n      newState.isLoading = action.isLoading;\r\n      return newState;\r\n\r\n    case ActionConstant.DB_MESSAGE_TYPES_SAVED:\r\n      newState.messages = action.payload;\r\n      return newState;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\nimport copyState from \"../copyStateHelper.js\";\r\n\r\nvar initialState = {\r\n  isLoading: false,\r\n  messages: [],\r\n  messagePreviewId: '',\r\n  messagePreview: {}\r\n};\r\n\r\nexport const messagesReducer = (state = initialState, action) => {\r\n\r\n  // redux works on the principle of keeping your data immutable.\r\n  // directly editing the state will cause an error, it leaves immutability up to you,\r\n  // the simplest solution with smallest footprint I've found so far is to use this deepCopy helper I found online.\r\n  var newState = copyState(state);\r\n\r\n  switch (action.type) {\r\n    case ActionConstant.DB_MESSAGES_GET:\r\n      newState.isLoading = action.isLoading;\r\n      return newState;\r\n\r\n    case ActionConstant.DB_MESSAGE_SAVED:\r\n      newState.messages = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.DB_RETURNED_MESSAGE:\r\n      newState.messagePreviewId = action.payload._id;\r\n      newState.messagePreview = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.RESET_MESSAGE_PREVIEW:\r\n      newState.messagePreviewId = '';\r\n      newState.messagePreview = {};\r\n      return newState;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};","import ActionConstant from '../ActionConstants';\r\nimport deepCopy from \"../copyStateHelper.js\";\r\n\r\nconst initialState = {\r\n  selectedSchemaID: '',\r\n  previewSchema: {}\r\n};\r\n\r\nexport const umpireMenuReducer = (state = initialState, action) => {\r\n\r\n  let newState = deepCopy(state);\r\n\r\n  switch (action.type) {\r\n    case ActionConstant.SET_SELECTED_SCHEMA:\r\n      newState.selectedSchemaID = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.SET_PREVIEW_SCHEMA:\r\n      newState.previewSchema = action.payload;\r\n      return newState;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};","import ActionConstant from '../ActionConstants';\r\nimport copyState from \"../copyStateHelper.js\";\r\nimport _ from \"lodash\";\r\nimport uniqId from \"uniqid\";\r\n\r\nimport {\r\n  forceTemplate,\r\n  channelTemplate,\r\n} from \"../../api/consts\";\r\n\r\nvar initialState = {\r\n  isLoading: false,\r\n  wargameList: [],\r\n  currentWargame: '',\r\n  wargameTitle: '',\r\n  validation: {\r\n    validWargameName: true,\r\n  },\r\n  tabs: {\r\n    0: {\r\n      name: \"Overview - settings\",\r\n      data: {\r\n        gameDescription: '',\r\n        spatialRepresentation: '',\r\n        planningInterval: null,\r\n        replayInterval: null,\r\n        turnStrategy: '',\r\n      },\r\n      complete: false,\r\n    },\r\n    // 1: {\r\n    //   name: \"Platform Types\",\r\n    //   complete: false,\r\n    // },\r\n    1: {\r\n      name: \"Forces\",\r\n      data: {\r\n        // forces: {'white': forceTemplate},\r\n        forces: {},\r\n        selectedForce: '',\r\n        roles: [],\r\n      },\r\n      complete: false,\r\n    },\r\n    // 3: {\r\n    //   name: \"Back history\",\r\n    //   complete: false,\r\n    // },\r\n    // 4: {\r\n    //   name: \"Positions\",\r\n    //   complete: false,\r\n    // },\r\n    2: {\r\n      name: \"Channels\",\r\n      data: {\r\n        // channels: {'white weather': channelTemplate},\r\n        channels: {},\r\n        selectedChannel: '',\r\n      },\r\n      complete: false,\r\n    },\r\n    // 6: {\r\n    //   name: \"Play control\",\r\n    //   complete: false,\r\n    // },\r\n  },\r\n  currentTab: 0\r\n};\r\n\r\nexport const wargamesReducer = (state = initialState, action) => {\r\n\r\n  let newState = copyState(state);\r\n\r\n  let tab = newState.currentTab;\r\n\r\n  let curChannel;\r\n  let recipientIndex;\r\n\r\n  switch (action.type) {\r\n\r\n    case ActionConstant.ALL_WARGAME_NAMES_SAVED:\r\n      newState.wargameList = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.SET_CURRENT_WARGAME:\r\n      newState.currentWargame = action.payload.name;\r\n      newState.wargameTitle = action.payload.wargameTitle;\r\n      newState.tabs = action.payload.tabs;\r\n      return newState;\r\n\r\n    case ActionConstant.SET_WARGAME_NAME:\r\n\r\n      let listWithoutThis = [];\r\n\r\n      newState.wargameList.forEach((game) => {\r\n        if (game.name !== newState.currentWargame) listWithoutThis.push(game);\r\n      });\r\n\r\n      let uniqueName = listWithoutThis.every((wargame) => wargame.title !== action.payload );\r\n\r\n      newState.validation.validWargameName = uniqueName;\r\n      newState.wargameTitle = action.payload;\r\n      return newState;\r\n\r\n    case ActionConstant.SET_CURRENT_GAME_SETUP_TAB:\r\n      newState.currentTab = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_GAME_SETUP_DATA:\r\n      newState.tabs[tab].data = {...newState.tabs[tab].data, ...action.payload};\r\n      break;\r\n\r\n    case ActionConstant.ADD_NEW_FORCE:\r\n      newState.tabs[tab].data.forces[action.payload] = forceTemplate;\r\n      break;\r\n\r\n    case ActionConstant.SET_SELECTED_FORCE:\r\n      newState.tabs[tab].data.selectedForce = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.ADD_NEW_CHANNEL:\r\n      newState.tabs[tab].data.channels[action.payload] = channelTemplate;\r\n      break;\r\n\r\n    case ActionConstant.SET_SELECTED_CHANNEL:\r\n      newState.tabs[tab].data.selectedChannel = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_FORCE_OVERVIEW:\r\n      let selected = newState.tabs[tab].data.selectedForce;\r\n      newState.tabs[tab].data.forces[selected].overview = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.ADD_NEW_RECIPIENT:\r\n      curChannel = newState.tabs[tab].data.selectedChannel;\r\n      let newParticipant = {...action.payload, subscriptionId: uniqId.time()};\r\n      newState.tabs[tab].data.channels[curChannel].push(newParticipant);\r\n      break;\r\n\r\n    case ActionConstant.UPDATE_RECIPIENT:\r\n      curChannel = newState.tabs[tab].data.selectedChannel;\r\n      recipientIndex = newState.tabs[tab].data.channels[curChannel].findIndex((recipient) => recipient.subscriptionId === action.payload.id);\r\n      newState.tabs[tab].data.channels[curChannel].splice(recipientIndex, 1, {...action.payload.data, subscriptionId: action.payload.id});\r\n      break;\r\n\r\n    case ActionConstant.REMOVE_RECIPIENT:\r\n      curChannel = newState.tabs[tab].data.selectedChannel;\r\n      recipientIndex = newState.tabs[tab].data.channels[curChannel].findIndex((recipient) => recipient.subscriptionId === action.payload);\r\n      newState.tabs[tab].data.channels[curChannel].splice(recipientIndex, 1);\r\n      break;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n\r\n  let flatten = (n) => {\r\n    if (_.isEmpty(n)) return null; // force show empty array\r\n    return (_.isArray(n) || _.isObject(n)) ? _.flatMapDeep(n, flatten) : n;\r\n  };\r\n\r\n  let inputResults = _.flatMapDeep(newState.tabs[tab].data, flatten);\r\n\r\n  newState.tabs[tab].complete = inputResults.every((item) => item !== null && item.length > 0);\r\n\r\n  return newState;\r\n};\r\n","import ActionConstant from '../ActionConstants.js';\r\nimport copyState from \"../copyStateHelper.js\";\r\n\r\nconst initialState = {\r\n  open: false,\r\n  message: '',\r\n};\r\n\r\nexport const notificationReducer = (state = initialState, action) => {\r\n\r\n    let newState = copyState(state);\r\n\r\n    switch (action.type) {\r\n      case ActionConstant.SHOW_NOTIFICATION:\r\n        newState = action.payload;\r\n        return newState;\r\n\r\n      case ActionConstant.HIDE_NOTIFICATION:\r\n        newState = action.payload;\r\n        return newState;\r\n\r\n      default:\r\n        return newState;\r\n    }\r\n};\r\n","import ActionConstant from '../ActionConstants';\r\nimport copyState from \"../../Helpers/copyStateHelper\";\r\nimport _ from \"lodash\";\r\n\r\nconst initialState = {\r\n  selectedForce: '',\r\n  selectedRole: '',\r\n  selectedChannel: '',\r\n  currentWargame: '',\r\n  wargameTitle: '',\r\n  channels: {},\r\n  allChannels: {},\r\n  forces: {},\r\n  allForces: {},\r\n  messageSchema: {},\r\n  messages: [],\r\n};\r\n\r\nexport const playerUiReducer = (state = initialState, action) => {\r\n\r\n  let newState = copyState(state);\r\n\r\n  switch (action.type) {\r\n\r\n    case ActionConstant.SET_CURRENT_WARGAME_PLAYER:\r\n\r\n      newState.currentWargame = action.payload.name;\r\n      newState.wargameTitle = action.payload.wargameTitle;\r\n\r\n      let channelsTab = Object.values(action.payload.tabs).find((obj) => obj.name === \"Channels\");\r\n      newState.allChannels = channelsTab.data.channels;\r\n\r\n      let forcesTab = Object.values(action.payload.tabs).find((obj) => obj.name === \"Forces\");\r\n      newState.allForces = forcesTab.data.forces;\r\n      break;\r\n\r\n    case ActionConstant.SET_FORCE:\r\n      newState.selectedForce = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_ROLE:\r\n      newState.selectedRole = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_FILTERED_CHANNELS:\r\n\r\n      let channels = {};\r\n      for (let channel in newState.allChannels) {\r\n\r\n        let channelParticipants = newState.allChannels[channel].filter((recipient) => recipient.force === newState.selectedForce && recipient.role === newState.selectedRole);\r\n        let channelActive = newState.allChannels[channel].some((recipient) => recipient.force === newState.selectedForce && recipient.role === newState.selectedRole);\r\n\r\n        // only allow unique participants in gameSetup but check here also\r\n        channelParticipants = _.uniqWith(channelParticipants, _.isEqual);\r\n\r\n        if (channelActive) {\r\n          channels[channel] = {\r\n            templates: _.flatMap(channelParticipants, (participant) => participant.templates),\r\n            messages: []\r\n          };\r\n        }\r\n      }\r\n      newState.selectedChannel = Object.keys(channels)[0];\r\n      newState.channels = channels;\r\n      break;\r\n\r\n    case ActionConstant.SET_CHANNEL:\r\n      newState.selectedChannel = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_MESSAGE_SCHEMA:\r\n      newState.messageSchema = action.payload;\r\n      break;\r\n\r\n    case ActionConstant.SET_LATEST_MESSAGES:\r\n      newState.messages = action.payload;\r\n      break;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n\r\n  return newState;\r\n};\r\n","import ActionConstant from './ActionConstants';\r\nimport copyState from \"./copyStateHelper.js\";\r\n\r\nvar initialState = {\r\n  loadingMessageTypes: true,\r\n  loadingWargames: true,\r\n};\r\n\r\nexport const loadingDbReducer = (state = initialState, action) => {\r\n\r\n  var newState = copyState(state);\r\n\r\n  switch (action.type) {\r\n\r\n    case ActionConstant.POPULATE_MESSAGE_TYPES_DB:\r\n      newState.loadingMessageTypes = action.isLoading;\r\n      return newState;\r\n\r\n    case ActionConstant.POPULATE_WARGAMES_DB:\r\n      newState.loadingWargames = action.isLoading;\r\n      return newState;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport { messageTypesReducer } from \"../ActionsAndReducers/dbMessageTypes/messageTypes_Reducer\";\r\nimport { messagesReducer } from \"../ActionsAndReducers/dbMessages/messages_Reducer\";\r\nimport { currentModal } from \"../ActionsAndReducers/Modal/Modal_Reducer\";\r\nimport { currentViewURIReducer } from \"../ActionsAndReducers/setCurrentViewFromURI/setCurrentViewURI_Reducer\";\r\nimport { umpireMenuReducer } from \"../ActionsAndReducers/UmpireMenu/umpireMenu_Reducer\";\r\nimport { wargamesReducer } from \"../ActionsAndReducers/dbWargames/wargames_Reducer\";\r\nimport { notificationReducer } from \"../ActionsAndReducers/Notification/Notification_Reducer\";\r\nimport { playerUiReducer } from \"../ActionsAndReducers/playerUi/playerUi_Reducer\";\r\nimport { loadingDbReducer } from \"../ActionsAndReducers/loadingDb_Reducer\";\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\nconst middlewares = [thunk];\r\n\r\nif (process.env.NODE_ENV === `development`) {\r\n  const { logger } = require(`redux-logger`);\r\n  middlewares.push(logger);\r\n}\r\n\r\nexport default createStore(combineReducers({\r\n  messageTypes: messageTypesReducer,\r\n  messages: messagesReducer,\r\n  umpireMenu: umpireMenuReducer,\r\n  currentViewURI: currentViewURIReducer,\r\n  currentModal,\r\n  notification: notificationReducer,\r\n  wargame: wargamesReducer,\r\n  playerUi: playerUiReducer,\r\n  dbLoading: loadingDbReducer,\r\n}), applyMiddleware(...middlewares));\r\n","import ActionConstant from '../ActionConstants';\r\n\r\nexport const currentViewURIReducer = (state = '/', action) => {\r\n\r\n  let newState = state;\r\n\r\n  switch (action.type) {\r\n    case ActionConstant.SET_CURRENT_VIEW_FROM_URI:\r\n      window.history.pushState({}, '', action.payload);\r\n      newState = action.payload;\r\n      return newState;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};","import ActionConstant from '../ActionConstants.js';\r\nimport copyState from \"../copyStateHelper.js\";\r\n\r\nexport const currentModal = (state = {}, action) => {\r\n\r\n    let newState = copyState(state);\r\n\r\n    switch (action.type) {\r\n      case ActionConstant.OPEN_MODAL:\r\n          newState = action.payload;\r\n          return newState;\r\n        case ActionConstant.CLOSE_MODAL:\r\n          newState = action.payload;\r\n          return newState;\r\n        default:\r\n          newState = {};\r\n          return newState;\r\n    }\r\n};\r\n","export default function deepCopy(objectpassed) {\r\n\r\n  // arrays return \"object\" in js so any object or array will be looped to copy deeply.\r\n  // strings, numbers and booleans are deep copied naturally, while any objects within arrays or objects\r\n  // or objects within arrays are only copied shallowly.\r\n  if (objectpassed === null || typeof objectpassed !== 'object') {\r\n    return objectpassed;\r\n  }\r\n\r\n  var temporaryStorage = objectpassed.constructor();\r\n\r\n  for (var key in objectpassed) {\r\n    temporaryStorage[key] = deepCopy((objectpassed[key]));\r\n  }\r\n  return temporaryStorage;\r\n}","import React, { Component } from 'react';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport ModalSwitch from \"./Components/Modals/ModalSwitch\";\r\nimport Notification from \"./Components/Notification\";\r\n\r\nimport Router from \"./Components/Router\";\r\n\r\nimport './scss/App.scss';\r\nimport Store from './Store/Store';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    document.title = \"Serge\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Provider store={Store}>\r\n          <Router />\r\n          <ModalSwitch />\r\n          <Notification />\r\n        </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}